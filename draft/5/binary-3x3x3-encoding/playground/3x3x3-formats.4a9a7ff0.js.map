{"version":3,"sources":["../../node_modules/regenerator-runtime/runtime.js","../../src/alg/debug.ts","../../src/alg/algorithm/alg-part.ts","../../src/alg/algorithm/block-move.ts","../../src/alg/algorithm/index.ts","../../src/alg/operation.ts","../../src/alg/traversal.ts","../../src/alg/example.ts","../../src/alg/json.ts","../../src/alg/validation.ts","../../src/alg/parser/parser.js","../../src/alg/parser/index.ts","../../src/alg/keyboard.ts","../../src/alg/url.ts","../../src/alg/index.ts","../../src/kpuzzle/transformations.ts","../../src/kpuzzle/move_expander.ts","../../src/kpuzzle/kpuzzle.ts","../../src/kpuzzle/canonicalize.ts","../../src/kpuzzle/definitions/2x2x2.kpuzzle.json","../../src/kpuzzle/definitions/svg/2x2x2.kpuzzle.svg","../../src/kpuzzle/definitions/3x3x3.kpuzzle.json","../../src/kpuzzle/definitions/svg/3x3x3.kpuzzle.svg","../../src/kpuzzle/definitions/pyraminx.kpuzzle.json","../../src/kpuzzle/definitions/svg/pyraminx.kpuzzle.svg","../../src/kpuzzle/definitions/sq1-hyperorbit.kpuzzle.json","../../src/kpuzzle/definitions/svg/sq1-hyperorbit.kpuzzle.svg","../../src/kpuzzle/definitions/clock.kpuzzle.json","../../src/kpuzzle/definitions/svg/clock.kpuzzle.svg","../../src/kpuzzle/definitions/index.ts","../../src/kpuzzle/puzzle_definitions.ts","../../src/kpuzzle/parser/parser-shim.js","../../src/kpuzzle/parser/parser.ts","../../src/kpuzzle/parser/index.ts","../../src/kpuzzle/svg.ts","../../src/kpuzzle/index.ts","../../src/protocol/binary/orbit-indexing.ts","../../src/protocol/binary/binary3x3x3.ts","convert.ts","index.ts"],"names":["parse","parser","module","exports","name","orbits","CORNER","numPieces","orientations","startPieces","permutation","orientation","moves","U","y","x","L","F","R","B","D","z","EDGE","CENTER","M","E","S","u","l","f","r","b","d","TIP","WEDGE","EQUATOR","SLICE","DIAL","FACE","FRAME","UR","DR","DL","UL","ALL","FLIP"],"mappings":"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","file":"3x3x3-formats.4a9a7ff0.js","sourceRoot":"../../app/3x3x3-formats","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","type ReportingLevel = \"none\" | \"warn\" | \"error\";\nlet currentReportingLevel = \"warn\";\n\nconst MAX_NUMBER_OF_TIMES_TO_WARN = 10;\nlet numWarned = 0;\n\n// TODO: Avoid creating the string message if it won't be used (e.g. by taking a function?).\nexport function reportTypeMismatch(msg: string): void {\n  switch (currentReportingLevel) {\n    case \"error\":\n      throw new Error(msg);\n    case \"warn\":\n      numWarned++;\n      if (numWarned < MAX_NUMBER_OF_TIMES_TO_WARN) {\n        if (numWarned + 1 === MAX_NUMBER_OF_TIMES_TO_WARN) {\n          console.warn(msg);\n        }\n      }\n      return;\n  }\n}\n\nexport function setAlgPartTypeMismatchReportingLevel(\n  level: ReportingLevel,\n): void {\n  currentReportingLevel = level;\n}\n","import { reportTypeMismatch } from \"../debug\";\n\nexport type AlgPartType = string;\n\nexport abstract class AlgPart {\n  public abstract type: AlgPartType;\n}\n\n// type Constructor<T> = Function & { prototype: T }\nexport function matchesAlgType(a: any, t: AlgPartType): boolean {\n  return a.type === t;\n}\n\nexport function assertMatchesType<T extends AlgPart>(\n  a: any,\n  t: AlgPartType,\n): T {\n  if (!matchesAlgType(a, t)) {\n    reportTypeMismatch(`Expected \"type\": \"${t}\", saw \"type\": \"${a.type}\".`);\n  }\n  return a;\n}\n\n// Assumes that every `AlgPart` is a `Unit` or a `Sequence`.\nexport function isUnit(a: AlgPart): boolean {\n  if (!(\"type\" in a)) {\n    return false;\n  }\n  return !matchesAlgType(a, \"sequence\");\n}\n\nexport function assertIsUnit(a: AlgPart): Unit {\n  if (!(\"type\" in a)) {\n    reportTypeMismatch(`Expected \"unit\", saw a value that was not an AlgPart.`);\n  }\n  if (matchesAlgType(a, \"sequence\")) {\n    reportTypeMismatch(`Expected unit, saw \"sequence\".`);\n  }\n  return a;\n}\n\nexport abstract class Unit extends AlgPart {}\n\nexport abstract class Move extends Unit {}\nexport abstract class Annotation extends Unit {}\nexport abstract class Container extends Unit {}\n\n// TODO: Reintroduce an Algorithm class, and allow a mutable sequence too?\nexport class Sequence extends AlgPart {\n  public type: string = \"sequence\";\n  constructor(public nestedUnits: Unit[]) {\n    super();\n    for (const n of nestedUnits) {\n      assertIsUnit(n);\n    }\n    Object.freeze(this.nestedUnits);\n    Object.freeze(this);\n  }\n}\n\nexport interface WithAmount {\n  // TODO: Allow `amount` to be `undefined`, to distinguish between R and R1?\n  amount: number;\n}\nexport class Group extends Container implements WithAmount {\n  public type: string = \"group\";\n  constructor(public nestedSequence: Sequence, public amount: number = 1) {\n    super();\n    Object.freeze(this);\n  }\n}\nexport class Commutator extends Container implements WithAmount {\n  public type: string = \"commutator\";\n  constructor(\n    public A: Sequence,\n    public B: Sequence,\n    public amount: number = 1,\n  ) {\n    super();\n    Object.freeze(this);\n  }\n}\nexport class Conjugate extends Container implements WithAmount {\n  public type: string = \"conjugate\";\n  constructor(\n    public A: Sequence,\n    public B: Sequence,\n    public amount: number = 1,\n  ) {\n    super();\n    Object.freeze(this);\n  }\n}\nexport class Pause extends Move {\n  public type: string = \"pause\";\n  constructor() {\n    super();\n    Object.freeze(this);\n  }\n}\nexport class NewLine extends Annotation {\n  public type: string = \"newLine\";\n  constructor() {\n    super();\n    Object.freeze(this);\n  }\n}\n\n// TODO: must be followed by a newline, unless at the end of an alg?\nexport class Comment extends Annotation {\n  public type: string = \"comment\";\n  constructor(public comment: string) {\n    super();\n    Object.freeze(this);\n  }\n}\n\n// TODO\n// export class TimeStamp extends AlgPart implements AlgPart\n","import { Move } from \"./alg-part\";\n\nexport type MoveFamily = string; // TODO: Convert to an enum with string mappings.\n\n// TODO: Rename to `LetterMove`?\nexport class BlockMove extends Move {\n  public type: string = \"blockMove\";\n\n  // If `outerLayer` is set, `innerLayer` must also be set.\n  public outerLayer?: number;\n  public innerLayer?: number;\n  constructor(\n    outerLayer: number | undefined,\n    innerLayer: number | undefined,\n    public family: MoveFamily,\n    public amount: number = 1,\n  ) {\n    super();\n    if (innerLayer) {\n      this.innerLayer = innerLayer;\n      if (outerLayer) {\n        this.outerLayer = outerLayer;\n      }\n    }\n    if (outerLayer && !innerLayer) {\n      throw new Error(\n        \"Attempted to contruct block move with outer layer but no inner layer\",\n      );\n    }\n    Object.freeze(this);\n  }\n}\n\nexport function BareBlockMove(family: MoveFamily, amount?: number): BlockMove {\n  return new BlockMove(undefined, undefined, family, amount);\n}\n\nexport function LayerBlockMove(\n  innerLayer: number,\n  family: MoveFamily,\n  amount?: number,\n): BlockMove {\n  return new BlockMove(undefined, innerLayer, family, amount);\n}\n\nexport function RangeBlockMove(\n  outerLayer: number,\n  innerLayer: number,\n  family: MoveFamily,\n  amount?: number,\n): BlockMove {\n  return new BlockMove(outerLayer, innerLayer, family, amount);\n}\n","export {\n  AlgPartType,\n  AlgPart,\n  Unit,\n  Move,\n  Annotation,\n  Container,\n  WithAmount,\n  Sequence,\n  Group,\n  Commutator,\n  Conjugate,\n  Pause,\n  NewLine,\n  Comment,\n} from \"./alg-part\";\n\nexport {\n  MoveFamily,\n  BlockMove,\n  BareBlockMove,\n  LayerBlockMove,\n  RangeBlockMove,\n} from \"./block-move\";\n","import { BlockMove, Sequence } from \"./algorithm\";\n\nfunction canCoalesce(m1: BlockMove, m2: BlockMove): boolean {\n  return (\n    m1.family === m2.family &&\n    m1.innerLayer === m2.innerLayer &&\n    m1.outerLayer === m2.outerLayer\n  );\n}\n\ninterface BlockMoveModifications {\n  outerLayer?: number;\n  innerLayer?: number;\n  family?: string;\n  amount?: number;\n}\n\nexport function modifiedBlockMove(\n  original: BlockMove,\n  modifications: BlockMoveModifications,\n): BlockMove {\n  // TODO: use the nullish coalescing operator once it becomes available to us.\n  return new BlockMove(\n    modifications.outerLayer ?? original.outerLayer,\n    modifications.innerLayer ?? original.innerLayer,\n    modifications.family ?? original.family,\n    modifications.amount ?? original.amount,\n  );\n}\n\nexport function experimentalAppendBlockMove(\n  s: Sequence,\n  newMove: BlockMove,\n  coalesceLastMove: boolean = false,\n  mod: number = 0,\n): Sequence {\n  const oldNestedUnits = s.nestedUnits;\n  const oldLastMove = oldNestedUnits[\n    oldNestedUnits.length - 1\n  ] as BlockMove | null;\n  if (coalesceLastMove && oldLastMove && canCoalesce(oldLastMove, newMove)) {\n    const newNestedUnits = s.nestedUnits.slice(0, oldNestedUnits.length - 1);\n    let newAmount = oldLastMove.amount + newMove.amount;\n    if (mod > 1) {\n      newAmount = ((newAmount % mod) + mod) % mod;\n      if (newAmount * 2 > mod) {\n        newAmount -= mod;\n      }\n    }\n    if (newAmount !== 0) {\n      newNestedUnits.push(\n        modifiedBlockMove(oldLastMove, { amount: newAmount }),\n      );\n    }\n    return new Sequence(newNestedUnits);\n  } else {\n    return new Sequence([...oldNestedUnits, newMove]);\n  }\n}\n\n// This purposely takes sequences as individual arguments, instead of a lsit of sequences, because:\n//\n// 1. This matches Javascript's built-in `Array.concat()` functionality.\n// 2. It encourages avoiding lists of sequences (which might lead to coding mistakes).\n//\n// TODO: Now useful is it to coalesce at alg boundaries (rather than coalescing the whole result)?\n// Should that be a separate function, or should we change this to accept coalescing option arg like `experimentalAppendBlockMove()`?\nexport function experimentalConcatAlgs(...args: Sequence[]): Sequence {\n  return new Sequence(\n    Array.prototype.concat.apply(\n      [],\n      [...args].map((s) => s.nestedUnits),\n    ),\n  );\n}\n","import {\n  assertIsUnit,\n  assertMatchesType,\n  isUnit,\n  matchesAlgType,\n} from \"./algorithm/alg-part\";\n\nimport {\n  AlgPart,\n  BlockMove,\n  Comment,\n  Commutator,\n  Conjugate,\n  Group,\n  NewLine,\n  Pause,\n  Sequence,\n  Unit,\n  WithAmount,\n} from \"./algorithm\";\n\nfunction dispatch<DataDown, DataUp>(\n  t: TraversalDownUp<DataDown, DataUp>,\n  algPart: AlgPart,\n  dataDown: DataDown,\n): DataUp {\n  switch (algPart.type) {\n    case \"sequence\":\n      assertMatchesType(algPart, \"sequence\");\n      return t.traverseSequence(algPart as Sequence, dataDown);\n    case \"group\":\n      assertMatchesType(algPart, \"group\");\n      return t.traverseGroup(algPart as Group, dataDown);\n    case \"blockMove\":\n      assertMatchesType(algPart, \"blockMove\");\n      return t.traverseBlockMove(algPart as BlockMove, dataDown);\n    case \"commutator\":\n      assertMatchesType(algPart, \"commutator\");\n      return t.traverseCommutator(algPart as Commutator, dataDown);\n    case \"conjugate\":\n      assertMatchesType(algPart, \"conjugate\");\n      return t.traverseConjugate(algPart as Conjugate, dataDown);\n    case \"pause\":\n      assertMatchesType(algPart, \"pause\");\n      return t.traversePause(algPart as Pause, dataDown);\n    case \"newLine\":\n      assertMatchesType(algPart, \"newLine\");\n      return t.traverseNewLine(algPart as NewLine, dataDown);\n    case \"comment\":\n      assertMatchesType(algPart, \"comment\");\n      return t.traverseComment(algPart as Comment, dataDown);\n    default:\n      throw new Error(`Unknown AlgPart type: ${algPart.type}`);\n  }\n}\n\nexport abstract class TraversalDownUp<DataDown, DataUp> {\n  // Immediate subclasses should overwrite this.\n  public traverse(algPart: AlgPart, dataDown: DataDown): DataUp {\n    return dispatch(this, algPart, dataDown);\n  }\n\n  public traverseIntoUnit(algPart: AlgPart, dataDown: DataDown): Unit {\n    return assertIsUnit(this.traverse(algPart, dataDown) as any);\n  }\n\n  public abstract traverseSequence(\n    sequence: Sequence,\n    dataDown: DataDown,\n  ): DataUp;\n\n  public abstract traverseGroup(group: Group, dataDown: DataDown): DataUp;\n  public abstract traverseBlockMove(\n    blockMove: BlockMove,\n    dataDown: DataDown,\n  ): DataUp;\n\n  public abstract traverseCommutator(\n    commutator: Commutator,\n    dataDown: DataDown,\n  ): DataUp;\n\n  public abstract traverseConjugate(\n    conjugate: Conjugate,\n    dataDown: DataDown,\n  ): DataUp;\n\n  public abstract traversePause(pause: Pause, dataDown: DataDown): DataUp;\n  public abstract traverseNewLine(newLine: NewLine, dataDown: DataDown): DataUp;\n  public abstract traverseComment(comment: Comment, dataDown: DataDown): DataUp;\n}\n\nexport abstract class TraversalUp<DataUp> extends TraversalDownUp<\n  undefined,\n  DataUp\n> {\n  public traverse(algPart: AlgPart): DataUp {\n    return dispatch<undefined, DataUp>(this, algPart, undefined);\n  }\n\n  public traverseIntoUnit(algPart: AlgPart): Unit {\n    return assertIsUnit(this.traverse(algPart) as any);\n  }\n\n  public abstract traverseSequence(sequence: Sequence): DataUp;\n  public abstract traverseGroup(group: Group): DataUp;\n  public abstract traverseBlockMove(blockMove: BlockMove): DataUp;\n  public abstract traverseCommutator(commutator: Commutator): DataUp;\n  public abstract traverseConjugate(conjugate: Conjugate): DataUp;\n  public abstract traversePause(pause: Pause): DataUp;\n  public abstract traverseNewLine(newLine: NewLine): DataUp;\n  public abstract traverseComment(comment: Comment): DataUp;\n}\n\n// TODO: Test that inverses are bijections.\nexport class Invert extends TraversalUp<AlgPart> {\n  public traverseSequence(sequence: Sequence): Sequence {\n    // TODO: Handle newLines and comments correctly\n    return new Sequence(\n      sequence.nestedUnits.map((a) => this.traverseIntoUnit(a)).reverse(),\n    );\n  }\n\n  public traverseGroup(group: Group): AlgPart {\n    return new Group(this.traverseSequence(group.nestedSequence), group.amount);\n  }\n\n  public traverseBlockMove(blockMove: BlockMove): AlgPart {\n    return new BlockMove(\n      blockMove.outerLayer,\n      blockMove.innerLayer,\n      blockMove.family,\n      -blockMove.amount,\n    );\n  }\n\n  public traverseCommutator(commutator: Commutator): AlgPart {\n    return new Commutator(commutator.B, commutator.A, commutator.amount);\n  }\n\n  public traverseConjugate(conjugate: Conjugate): AlgPart {\n    return new Conjugate(\n      conjugate.A,\n      this.traverseSequence(conjugate.B),\n      conjugate.amount,\n    );\n  }\n\n  public traversePause(pause: Pause): AlgPart {\n    return pause;\n  }\n\n  public traverseNewLine(newLine: NewLine): AlgPart {\n    return newLine;\n  }\n\n  public traverseComment(comment: Comment): AlgPart {\n    return comment;\n  }\n}\n\nexport class Expand extends TraversalUp<AlgPart> {\n  public traverseSequence(sequence: Sequence): Sequence {\n    return new Sequence(\n      this.flattenSequenceOneLevel(\n        sequence.nestedUnits.map((a) => this.traverse(a)),\n      ),\n    );\n  }\n\n  public traverseGroup(group: Group): AlgPart {\n    // TODO: Pass raw AlgPart[] to sequence.\n    return this.repeat(\n      this.flattenSequenceOneLevel([this.traverse(group.nestedSequence)]),\n      group,\n    );\n  }\n\n  public traverseBlockMove(blockMove: BlockMove): AlgPart {\n    return blockMove;\n  }\n\n  public traverseCommutator(commutator: Commutator): AlgPart {\n    const expandedA = this.traverseSequence(commutator.A);\n    const expandedB = this.traverseSequence(commutator.B);\n    let once: AlgPart[] = [];\n    once = once.concat(\n      expandedA,\n      expandedB,\n      invert(expandedA),\n      invert(expandedB),\n    );\n    return this.repeat(this.flattenSequenceOneLevel(once), commutator);\n  }\n\n  public traverseConjugate(conjugate: Conjugate): AlgPart {\n    const expandedA = this.traverseSequence(conjugate.A);\n    const expandedB = this.traverseSequence(conjugate.B);\n    let once: AlgPart[] = [];\n    once = once.concat(expandedA, expandedB, invert(expandedA));\n    return this.repeat(this.flattenSequenceOneLevel(once), conjugate);\n  }\n\n  public traversePause(pause: Pause): AlgPart {\n    return pause;\n  }\n\n  public traverseNewLine(newLine: NewLine): AlgPart {\n    return newLine;\n  }\n\n  public traverseComment(comment: Comment): AlgPart {\n    return comment;\n  }\n\n  private flattenSequenceOneLevel(algList: AlgPart[]): Unit[] {\n    let flattened: Unit[] = [];\n    for (const part of algList) {\n      if (matchesAlgType(part, \"sequence\")) {\n        flattened = flattened.concat((part as Sequence).nestedUnits);\n      } else if (isUnit(part)) {\n        flattened.push(part);\n      } else {\n        throw new Error(\n          \"expand() encountered an internal error. Did you pass in a valid Algorithm?\",\n        );\n      }\n    }\n    return flattened;\n  }\n\n  private repeat(algList: Unit[], accordingTo: WithAmount): Sequence {\n    const amount = Math.abs(accordingTo.amount);\n    const amountDir = accordingTo.amount > 0 ? 1 : -1; // Mutable\n\n    // TODO: Cleaner inversion\n    let once: Unit[];\n    if (amountDir === -1) {\n      // TODO: Avoid casting to sequence.\n      once = (invert(new Sequence(algList)) as Sequence).nestedUnits;\n    } else {\n      once = algList;\n    }\n\n    let repeated: Unit[] = [];\n    for (let i = 0; i < amount; i++) {\n      repeated = repeated.concat(once);\n    }\n\n    return new Sequence(repeated);\n  }\n}\n\nexport class StructureEquals extends TraversalDownUp<AlgPart, boolean> {\n  public traverseSequence(sequence: Sequence, dataDown: AlgPart): boolean {\n    if (isUnit(dataDown)) {\n      return false;\n    }\n    const dataDownSeq = dataDown as Sequence;\n    if (sequence.nestedUnits.length !== dataDownSeq.nestedUnits.length) {\n      return false;\n    }\n    for (let i = 0; i < sequence.nestedUnits.length; i++) {\n      if (!this.traverse(sequence.nestedUnits[i], dataDownSeq.nestedUnits[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  public traverseGroup(group: Group, dataDown: AlgPart): boolean {\n    return (\n      matchesAlgType(dataDown, \"group\") &&\n      this.traverse(group.nestedSequence, (dataDown as Group).nestedSequence)\n    );\n  }\n\n  public traverseBlockMove(blockMove: BlockMove, dataDown: AlgPart): boolean {\n    // TODO: Handle layers.\n    return (\n      matchesAlgType(dataDown, \"blockMove\") &&\n      blockMove.outerLayer === (dataDown as BlockMove).outerLayer &&\n      blockMove.innerLayer === (dataDown as BlockMove).innerLayer &&\n      blockMove.family === (dataDown as BlockMove).family &&\n      blockMove.amount === (dataDown as BlockMove).amount\n    );\n  }\n\n  public traverseCommutator(\n    commutator: Commutator,\n    dataDown: AlgPart,\n  ): boolean {\n    return (\n      matchesAlgType(dataDown, \"commutator\") &&\n      this.traverse(commutator.A, (dataDown as Commutator).A) &&\n      this.traverse(commutator.B, (dataDown as Commutator).B)\n    );\n  }\n\n  public traverseConjugate(conjugate: Conjugate, dataDown: AlgPart): boolean {\n    return (\n      matchesAlgType(dataDown, \"conjugate\") &&\n      this.traverse(conjugate.A, (dataDown as Conjugate).A) &&\n      this.traverse(conjugate.B, (dataDown as Conjugate).B)\n    );\n  }\n\n  public traversePause(_pause: Pause, dataDown: AlgPart): boolean {\n    return matchesAlgType(dataDown, \"pause\");\n  }\n\n  public traverseNewLine(_newLine: NewLine, dataDown: AlgPart): boolean {\n    return matchesAlgType(dataDown, \"newLine\");\n  }\n\n  public traverseComment(comment: Comment, dataDown: AlgPart): boolean {\n    return (\n      matchesAlgType(dataDown, \"comment\") &&\n      comment.comment === (dataDown as Comment).comment\n    );\n  }\n}\n\n// TODO: Test that inverses are bijections.\nexport class CoalesceBaseMoves extends TraversalUp<AlgPart> {\n  // TODO: Handle\n  public traverseSequence(sequence: Sequence): Sequence {\n    const coalesced: Unit[] = [];\n    for (const part of sequence.nestedUnits) {\n      if (!matchesAlgType(part, \"blockMove\")) {\n        coalesced.push(this.traverseIntoUnit(part));\n      } else if (coalesced.length > 0) {\n        const last = coalesced[coalesced.length - 1];\n        if (\n          matchesAlgType(last, \"blockMove\") &&\n          this.sameBlock(last as BlockMove, part as BlockMove)\n        ) {\n          // TODO: This is cube-specific. Perhaps pass the modules as DataDown?\n          const amount =\n            (last as BlockMove).amount + (part as BlockMove).amount;\n          coalesced.pop();\n          if (amount !== 0) {\n            // We could modify the last element instead of creating a new one,\n            // but this is safe against shifting coding practices.\n            // TODO: Figure out if the shoot-in-the-foot risk\n            // modification is worth the speed.\n            coalesced.push(\n              new BlockMove(\n                (part as BlockMove).outerLayer,\n                (part as BlockMove).innerLayer,\n                (part as BlockMove).family,\n                amount,\n              ),\n            );\n          }\n        } else {\n          coalesced.push(part);\n        }\n      } else {\n        coalesced.push(part);\n      }\n    }\n    return new Sequence(coalesced);\n  }\n\n  public traverseGroup(group: Group): AlgPart {\n    return group;\n  }\n\n  public traverseBlockMove(blockMove: BlockMove): AlgPart {\n    return blockMove;\n  }\n\n  public traverseCommutator(commutator: Commutator): AlgPart {\n    return commutator;\n  }\n\n  public traverseConjugate(conjugate: Conjugate): AlgPart {\n    return conjugate;\n  }\n\n  public traversePause(pause: Pause): AlgPart {\n    return pause;\n  }\n\n  public traverseNewLine(newLine: NewLine): AlgPart {\n    return newLine;\n  }\n\n  public traverseComment(comment: Comment): AlgPart {\n    return comment;\n  }\n\n  private sameBlock(moveA: BlockMove, moveB: BlockMove): boolean {\n    // TODO: Handle layers\n    return (\n      moveA.outerLayer === moveB.outerLayer &&\n      moveA.innerLayer === moveB.innerLayer &&\n      moveA.family === moveB.family\n    );\n  }\n}\n\n// export class Concat extends TraversalDownUp<Algorithm, Sequence> {\n//   private concatIntoSequence(A: Unit[], B: Algorithm): Sequence {\n//     var nestedAlgs: Unit[] = A.slice();\n//     if (matchesAlgType(B, \"sequence\")) {\n//       nestedAlgs = nestedAlgs.concat((B as unknown as Sequence).nestedUnits)\n//     } else {\n//       nestedAlgs.push(B as unknown as Unit);\n//     }\n//     return new Sequence(nestedAlgs)\n//   }\n//   public traverseSequence(     sequence:     Sequence,     dataDown: Algorithm): Sequence {return this.concatIntoSequence(sequence.nestedUnits, dataDown); }\n//   public traverseGroup(        group:        Group,        dataDown: Algorithm): Sequence {return this.concatIntoSequence([group]          , dataDown); }\n//   public traverseBlockMove(    BlockMove:    BlockMove,    dataDown: Algorithm): Sequence {return this.concatIntoSequence([BlockMove]      , dataDown); }\n//   public traverseCommutator(   commutator:   Commutator,   dataDown: Algorithm): Sequence {return this.concatIntoSequence([commutator]     , dataDown); }\n//   public traverseConjugate(    conjugate:    Conjugate,    dataDown: Algorithm): Sequence {return this.concatIntoSequence([conjugate]      , dataDown); }\n//   public traversePause(        pause:        Pause,        dataDown: Algorithm): Sequence {return this.concatIntoSequence([pause]          , dataDown); }\n//   public traverseNewLine(      newLine:      NewLine,      dataDown: Algorithm): Sequence {return this.concatIntoSequence([newLine]        , dataDown); }\n//   public traverseComment( comment: Comment, dataDown: Algorithm): Sequence {return this.concatIntoSequence([comment]   , dataDown); }\n// }\n\nfunction repetitionSuffix(amount: number): string {\n  const absAmount = Math.abs(amount);\n  let s = \"\";\n  if (absAmount !== 1) {\n    s += String(absAmount);\n  }\n  if (absAmount !== amount) {\n    s += \"'\";\n  }\n  return s;\n}\nexport function blockMoveToString(blockMove: BlockMove): string {\n  let out = blockMove.family + repetitionSuffix(blockMove.amount);\n  if (typeof blockMove.innerLayer !== \"undefined\") {\n    out = String(blockMove.innerLayer) + out;\n    if (typeof blockMove.outerLayer !== \"undefined\") {\n      out = String(blockMove.outerLayer) + \"-\" + out;\n    }\n  }\n  return out;\n}\n\nexport class ToString extends TraversalUp<string> {\n  public traverseSequence(sequence: Sequence): string {\n    let output = \"\";\n    if (sequence.nestedUnits.length > 0) {\n      output += this.traverse(sequence.nestedUnits[0]);\n      for (let i = 1; i < sequence.nestedUnits.length; i++) {\n        output += this.spaceBetween(\n          sequence.nestedUnits[i - 1],\n          sequence.nestedUnits[i],\n        );\n        output += this.traverse(sequence.nestedUnits[i]);\n      }\n    }\n    return output;\n  }\n\n  public traverseGroup(group: Group): string {\n    return (\n      \"(\" +\n      this.traverse(group.nestedSequence) +\n      \")\" +\n      repetitionSuffix(group.amount)\n    );\n  }\n\n  public traverseBlockMove(blockMove: BlockMove): string {\n    return blockMoveToString(blockMove);\n  }\n\n  public traverseCommutator(commutator: Commutator): string {\n    return (\n      \"[\" +\n      this.traverse(commutator.A) +\n      \", \" +\n      this.traverse(commutator.B) +\n      \"]\" +\n      repetitionSuffix(commutator.amount)\n    );\n  }\n\n  public traverseConjugate(conjugate: Conjugate): string {\n    return (\n      \"[\" +\n      this.traverse(conjugate.A) +\n      \": \" +\n      this.traverse(conjugate.B) +\n      \"]\" +\n      repetitionSuffix(conjugate.amount)\n    );\n  }\n\n  // TODO: Remove spaces between repeated pauses (in traverseSequence)\n  public traversePause(_pause: Pause): string {\n    return \".\";\n  }\n\n  public traverseNewLine(_newLine: NewLine): string {\n    return \"\\n\";\n  }\n\n  // TODO: Enforce being followed by a newline (or the end of the alg)?\n  public traverseComment(comment: Comment): string {\n    return \"//\" + comment.comment;\n  }\n\n  // TODO: Sanitize `*/`\n  private spaceBetween(u1: Unit, u2: Unit): string {\n    if (matchesAlgType(u1, \"pause\") && matchesAlgType(u2, \"pause\")) {\n      return \"\";\n    }\n    if (matchesAlgType(u1, \"newLine\") || matchesAlgType(u2, \"newLine\")) {\n      return \"\";\n    }\n    if (matchesAlgType(u1, \"comment\") && !matchesAlgType(u2, \"newLine\")) {\n      return \"\\n\";\n    }\n    return \" \";\n  }\n}\n\nconst invertInstance = new Invert();\nconst expandInstance = new Expand();\nconst structureEqualsInstance = new StructureEquals();\nconst coalesceBaseMovesInstance = new CoalesceBaseMoves();\nconst algToStringInstance = new ToString();\n\nexport const invert = invertInstance.traverseSequence.bind(invertInstance) as (\n  a: Sequence,\n) => Sequence;\nexport const expand = expandInstance.traverseSequence.bind(expandInstance) as (\n  a: Sequence,\n) => Sequence;\nexport const structureEquals = structureEqualsInstance.traverseSequence.bind(\n  structureEqualsInstance,\n) as (a1: Sequence, a2: Sequence) => boolean;\nexport const coalesceBaseMoves = coalesceBaseMovesInstance.traverseSequence.bind(\n  coalesceBaseMovesInstance,\n) as (a: Sequence) => Sequence;\nexport const algToString = algToStringInstance.traverseSequence.bind(\n  algToStringInstance,\n) as (a: Sequence) => string;\n\nexport const algPartStructureEqualsForTesting = algToStringInstance.traverse.bind(\n  algToStringInstance,\n) as (a1: AlgPart, a2: AlgPart) => boolean;\nexport const algPartToStringForTesting = algToStringInstance.traverse.bind(\n  algToStringInstance,\n) as (a: AlgPart) => string;\n\nexport function experimentalBlockMoveQuantumName(move: BlockMove): string {\n  return algPartToStringForTesting(\n    new BlockMove(move.outerLayer, move.innerLayer, move.family, 1),\n  );\n}\n","import {\n  AlgPart,\n  BareBlockMove,\n  Comment,\n  Commutator,\n  Conjugate,\n  Group,\n  NewLine,\n  Pause,\n  Sequence,\n} from \"./algorithm\";\n\n// tslint:disable-next-line no-namespace // TODO: nested module\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Example {\n  export const Sune: Sequence = new Sequence([\n    BareBlockMove(\"R\", 1),\n    BareBlockMove(\"U\", 1),\n    BareBlockMove(\"R\", -1),\n    BareBlockMove(\"U\", 1),\n    BareBlockMove(\"R\", 1),\n    BareBlockMove(\"U\", -2),\n    BareBlockMove(\"R\", -1),\n  ]);\n\n  export const AntiSune: Sequence = new Sequence([\n    BareBlockMove(\"R\", 1),\n    BareBlockMove(\"U\", 2),\n    BareBlockMove(\"R\", -1),\n    BareBlockMove(\"U\", -1),\n    BareBlockMove(\"R\", 1),\n    BareBlockMove(\"U\", -1),\n    BareBlockMove(\"R\", -1),\n  ]);\n\n  export const SuneCommutator: Sequence = new Sequence([\n    new Commutator(\n      new Sequence([\n        BareBlockMove(\"R\", 1),\n        BareBlockMove(\"U\", 1),\n        BareBlockMove(\"R\", -2),\n      ]),\n      new Sequence([\n        new Conjugate(\n          new Sequence([BareBlockMove(\"R\", 1)]),\n          new Sequence([BareBlockMove(\"U\", 1)]),\n          1,\n        ),\n      ]),\n      1,\n    ),\n  ]);\n\n  export const Niklas: Sequence = new Sequence([\n    BareBlockMove(\"R\", 1),\n    BareBlockMove(\"U\", -1),\n    BareBlockMove(\"L\", -1),\n    BareBlockMove(\"U\", 1),\n    BareBlockMove(\"R\", -1),\n    BareBlockMove(\"U\", -1),\n    BareBlockMove(\"L\", 1),\n    BareBlockMove(\"U\", 1),\n  ]);\n\n  export const EPerm: Sequence = new Sequence([\n    BareBlockMove(\"x\", -1),\n    new Commutator(\n      new Sequence([\n        new Conjugate(\n          new Sequence([BareBlockMove(\"R\", 1)]),\n          new Sequence([BareBlockMove(\"U\", -1)]),\n        ),\n      ]),\n      new Sequence([BareBlockMove(\"D\", 1)]),\n      1,\n    ),\n    new Commutator(\n      new Sequence([\n        new Conjugate(\n          new Sequence([BareBlockMove(\"R\", 1)]),\n          new Sequence([BareBlockMove(\"U\", 1)]),\n        ),\n      ]),\n      new Sequence([BareBlockMove(\"D\", 1)]),\n      1,\n    ),\n    BareBlockMove(\"x\", 1),\n  ]);\n\n  export const FURURFCompact: Sequence = new Sequence([\n    new Conjugate(\n      new Sequence([BareBlockMove(\"F\", 1)]),\n      new Sequence([\n        new Commutator(\n          new Sequence([BareBlockMove(\"U\", 1)]),\n          new Sequence([BareBlockMove(\"R\", 1)]),\n          1,\n        ),\n      ]),\n      1,\n    ),\n  ]);\n\n  export const APermCompact: Sequence = new Sequence([\n    new Conjugate(\n      new Sequence([BareBlockMove(\"R\", 2)]),\n      new Sequence([\n        new Commutator(\n          new Sequence([BareBlockMove(\"F\", 2)]),\n          new Sequence([\n            BareBlockMove(\"R\", -1),\n            BareBlockMove(\"B\", -1),\n            BareBlockMove(\"R\", 1),\n          ]),\n          1,\n        ),\n      ]),\n      1,\n    ),\n  ]);\n\n  export const FURURFMoves: Sequence = new Sequence([\n    BareBlockMove(\"F\", 1),\n    BareBlockMove(\"U\", 1),\n    BareBlockMove(\"R\", 1),\n    BareBlockMove(\"U\", -1),\n    BareBlockMove(\"R\", -1),\n    BareBlockMove(\"F\", -1),\n  ]);\n\n  export const TPerm: Sequence = new Sequence([\n    BareBlockMove(\"R\", 1),\n    BareBlockMove(\"U\", 1),\n    BareBlockMove(\"R\", -1),\n    BareBlockMove(\"U\", -1),\n    BareBlockMove(\"R\", -1),\n    BareBlockMove(\"F\", 1),\n    BareBlockMove(\"R\", 2),\n    BareBlockMove(\"U\", -1),\n    BareBlockMove(\"R\", -1),\n    BareBlockMove(\"U\", -1),\n    BareBlockMove(\"R\", 1),\n    BareBlockMove(\"U\", 1),\n    BareBlockMove(\"R\", -1),\n    BareBlockMove(\"F\", -1),\n  ]);\n\n  export const HeadlightSwaps: Sequence = new Sequence([\n    new Conjugate(\n      new Sequence([BareBlockMove(\"F\", 1)]),\n      new Sequence([\n        new Commutator(\n          new Sequence([BareBlockMove(\"R\", 1)]),\n          new Sequence([BareBlockMove(\"U\", 1)]),\n          3,\n        ),\n      ]),\n      1,\n    ),\n  ]);\n\n  export const TriplePause: Sequence = new Sequence([\n    new Pause(),\n    new Pause(),\n    new Pause(),\n  ]);\n\n  export const AllAlgParts: AlgPart[] = [\n    new Sequence([BareBlockMove(\"R\", 1), BareBlockMove(\"U\", -1)]),\n    new Group(new Sequence([BareBlockMove(\"F\", 1)]), 2),\n    // new Rotation(\"y\", -1),\n    BareBlockMove(\"R\", 2),\n    new Commutator(\n      new Sequence([BareBlockMove(\"R\", 2)]),\n      new Sequence([BareBlockMove(\"U\", 2)]),\n      2,\n    ),\n    new Conjugate(\n      new Sequence([BareBlockMove(\"L\", 2)]),\n      new Sequence([BareBlockMove(\"D\", -1)]),\n      2,\n    ),\n    new Pause(),\n    new NewLine(),\n    new Comment(\"short comment\"),\n  ];\n}\n","import {\n  BlockMove,\n  Comment,\n  Commutator,\n  Conjugate,\n  Group,\n  NewLine,\n  Pause,\n  Sequence,\n  Unit,\n} from \"./algorithm\";\n\n// TODO: Turn this into a union.\nexport interface AlgJSON {\n  type: string;\n  nestedSequence?: AlgJSON;\n  nestedUnits?: AlgJSON[];\n  innerLayer?: number;\n  outerLayer?: number;\n  family?: string;\n  amount?: number;\n  A?: AlgJSON;\n  B?: AlgJSON;\n  comment?: string;\n}\n\nexport function fromJSON(json: AlgJSON): Sequence {\n  if (json.type !== \"sequence\") {\n    throw new Error(`Expected Sequence while parsing, got: ${json.type}`);\n  }\n  if (!json.nestedUnits) {\n    throw new Error(\"Missing nestedUnits\");\n  }\n  return new Sequence(json.nestedUnits.map((j) => unitFromJSON(j)));\n}\n\nfunction unitFromJSON(json: AlgJSON): Unit {\n  switch (json.type) {\n    case \"sequence\":\n      throw new Error(`Expected AlgPart while parsing, got \\`Sequence\\`.`);\n    case \"group\":\n      if (!json.nestedSequence) {\n        throw new Error(\"Missing nestedSequence\");\n      }\n      if (!json.amount) {\n        throw new Error(\"Missing amount\");\n      }\n      return new Group(fromJSON(json.nestedSequence), json.amount);\n    case \"blockMove\":\n      // TODO: Double-check that there is no outer layer without an inner layer?\n      if (!json.family) {\n        throw new Error(\"Missing family\");\n      }\n      if (!json.amount) {\n        throw new Error(\"Missing amount\");\n      }\n      return new BlockMove(\n        json.outerLayer,\n        json.innerLayer,\n        json.family,\n        json.amount,\n      );\n    case \"commutator\":\n      if (!json.A) {\n        throw new Error(\"Missing A\");\n      }\n      if (!json.B) {\n        throw new Error(\"Missing B\");\n      }\n      if (!json.amount) {\n        throw new Error(\"Missing amount\");\n      }\n      return new Commutator(fromJSON(json.A), fromJSON(json.B), json.amount);\n    case \"conjugate\":\n      if (!json.A) {\n        throw new Error(\"Missing A\");\n      }\n      if (!json.B) {\n        throw new Error(\"Missing B\");\n      }\n      if (!json.amount) {\n        throw new Error(\"Missing amount\");\n      }\n      return new Conjugate(fromJSON(json.A), fromJSON(json.B), json.amount);\n    case \"pause\":\n      return new Pause();\n    case \"newLine\":\n      return new NewLine();\n    case \"comment\":\n      // The empty string is nullish, so we check for it separately.\n      if (!json.comment && json.comment !== \"\") {\n        throw new Error(\"Missing comment\");\n      }\n      return new Comment(json.comment);\n    default:\n      throw new Error(`Unknown alg type: ${json.type}`);\n  }\n}\n","import {\n  BlockMove,\n  Comment,\n  Commutator,\n  Conjugate,\n  Group,\n  NewLine,\n  Pause,\n  Sequence,\n} from \"./algorithm\";\n\nimport { TraversalUp } from \"./traversal\";\n\nexport class ValidationError extends Error {}\n\nexport abstract class ValidatorTraversal extends TraversalUp<void> {}\n\ninterface FamilyList {\n  [s: string]: boolean;\n}\n\nfunction validateFamily(\n  family: string,\n  allowedFamilyLists: FamilyList[],\n): boolean {\n  for (const list of allowedFamilyLists) {\n    if (list[family] === true) {\n      return true;\n    }\n  }\n  return false;\n}\n\n// TODO: Switch to `Set`?\nconst plainMoveFamilies: FamilyList = {\n  x: true,\n  y: true,\n  z: true,\n  M: true,\n  E: true,\n  S: true,\n  m: true,\n  e: true,\n  s: true,\n};\n\nconst singleSliceMoveFamilies: FamilyList = {\n  U: true,\n  L: true,\n  F: true,\n  R: true,\n  B: true,\n  D: true,\n};\n\nconst wideMoveFamilies: FamilyList = {\n  u: true,\n  l: true,\n  f: true,\n  r: true,\n  b: true,\n  d: true,\n  Uw: true,\n  Lw: true,\n  Fw: true,\n  Rw: true,\n  Bw: true,\n  Dw: true,\n};\n\nabstract class BaseMoveValidator extends ValidatorTraversal {\n  public traverseSequence(sequence: Sequence): void {\n    // TODO: Handle newLines and comments correctly\n    for (const unit of sequence.nestedUnits) {\n      this.traverse(unit);\n    }\n  }\n\n  public traverseGroup(group: Group): void {\n    return this.traverse(group.nestedSequence);\n  }\n\n  public traverseCommutator(commutator: Commutator): void {\n    this.traverse(commutator.A);\n    this.traverse(commutator.B);\n  }\n\n  public traverseConjugate(conjugate: Conjugate): void {\n    this.traverse(conjugate.A);\n    this.traverse(conjugate.B);\n  }\n\n  public traversePause(_pause: Pause): void {\n    return;\n  }\n\n  public traverseNewLine(_newLine: NewLine): void {\n    return;\n  }\n\n  public traverseComment(_comment: Comment): void {\n    return;\n  }\n}\n\n// TODO: Export function instead?\nexport class BlockMoveValidator extends BaseMoveValidator {\n  public traverseBlockMove(blockMove: BlockMove): void {\n    if (typeof blockMove.outerLayer !== \"undefined\") {\n      if (typeof blockMove.innerLayer === \"undefined\") {\n        throw new ValidationError(\n          \"A BlockMove with an outer layer must have an inner layer.\",\n        );\n      }\n      if (!validateFamily(blockMove.family, [wideMoveFamilies])) {\n        throw new ValidationError(\n          `The provided SiGN move family is invalid, or cannot have an outer and inner layer: ${blockMove.family}`,\n        );\n      }\n      if (blockMove.outerLayer <= 0) {\n        throw new ValidationError(\"Cannot have an outer layer of 0 or less.\");\n      }\n      // TODO: Allow 2-2r?\n      if (blockMove.outerLayer >= blockMove.innerLayer) {\n        throw new ValidationError(\n          \"The outer layer must be less than the inner layer.\",\n        );\n      }\n      return;\n    } else if (typeof blockMove.innerLayer !== \"undefined\") {\n      if (\n        !validateFamily(blockMove.family, [\n          wideMoveFamilies,\n          singleSliceMoveFamilies,\n        ])\n      ) {\n        throw new ValidationError(\n          `The provided SiGN move family is invalid, or cannot have an inner slice: ${blockMove.family}`,\n        );\n      }\n      if (blockMove.innerLayer <= 0) {\n        throw new ValidationError(\"Cannot have an inner layer of 0 or less.\");\n      }\n      return;\n    } else {\n      if (\n        !validateFamily(blockMove.family, [\n          wideMoveFamilies,\n          singleSliceMoveFamilies,\n          plainMoveFamilies,\n        ])\n      ) {\n        throw new ValidationError(\n          `Invalid SiGN plain move family: ${blockMove.family}`,\n        );\n      }\n      return;\n    }\n  }\n}\n\n// TODO: Export function instead?\nexport class FlatAlgValidator extends ValidatorTraversal {\n  public traverseSequence(sequence: Sequence): void {\n    // TODO: Handle newLines and comments correctly\n    for (const unit of sequence.nestedUnits) {\n      this.traverse(unit);\n    }\n    return;\n  }\n\n  public traverseGroup(_group: Group): void {\n    throw new ValidationError(\"A flat alg cannot contain a group.\");\n  }\n\n  public traverseBlockMove(_blockMove: BlockMove): void {\n    return;\n  }\n\n  public traverseCommutator(_commutator: Commutator): void {\n    throw new ValidationError(\"A flat alg cannot contain a commutator.\");\n  }\n\n  public traverseConjugate(_conjugate: Conjugate): void {\n    throw new ValidationError(\"A flat alg cannot contain a conjugate.\");\n  }\n\n  public traversePause(_pause: Pause): void {\n    return;\n  }\n\n  public traverseNewLine(_newLine: NewLine): void {\n    return;\n  }\n\n  public traverseComment(_comment: Comment): void {\n    return;\n  }\n}\n\nexport type Validator = (a: Sequence) => void;\n\nconst BlockMoveValidatorInstance = new BlockMoveValidator();\nexport const validateSiGNMoves = BlockMoveValidatorInstance.traverse.bind(\n  BlockMoveValidatorInstance,\n) as Validator;\n\nconst flatAlgValidatorInstance = new FlatAlgValidator();\nexport const validateFlatAlg = flatAlgValidatorInstance.traverse.bind(\n  flatAlgValidatorInstance,\n) as Validator;\n\n// TODO: Option for puzzle size?\nexport function validateSiGNAlg(a: Sequence): void {\n  validateSiGNMoves(a);\n  validateFlatAlg(a);\n}\n","// Workaround per https://github.com/pegjs/pegjs/pull/481\nimport parser from \"./parser.pegjs\";\nconst { parse } = parser;\nexport { parse };\n","import { Sequence } from \"../algorithm\";\nimport { fromJSON } from \"../json\";\nimport { validateSiGNAlg, Validator } from \"../validation\";\nimport { parse as pegParse } from \"./parser\";\n\nexport interface ParseOptions {\n  validators?: Validator[];\n}\n\n// TODO: Include token location info.\n// TODO: Take validators in a way that allows optimizing parsing.\nexport function parse(\n  s: string,\n  options: ParseOptions = { validators: [] },\n): Sequence {\n  options.validators = options.validators || [];\n\n  const algo = fromJSON(pegParse(s));\n  for (const validate of options.validators) {\n    validate(algo);\n  }\n  return algo;\n}\n\nexport function parseSiGN(s: string): Sequence {\n  return parse(s, { validators: [validateSiGNAlg] });\n}\n","import { BareBlockMove, BlockMove } from \"./algorithm\";\n\nconst cubeKeyMapping: { [key: number]: BlockMove } = {\n  73: BareBlockMove(\"R\"),\n  75: BareBlockMove(\"R\", -1),\n  87: BareBlockMove(\"B\"),\n  79: BareBlockMove(\"B\", -1),\n  83: BareBlockMove(\"D\"),\n  76: BareBlockMove(\"D\", -1),\n  68: BareBlockMove(\"L\"),\n  69: BareBlockMove(\"L\", -1),\n  74: BareBlockMove(\"U\"),\n  70: BareBlockMove(\"U\", -1),\n  72: BareBlockMove(\"F\"),\n  71: BareBlockMove(\"F\", -1),\n\n  78: BareBlockMove(\"x\", -1),\n  67: BareBlockMove(\"l\"),\n  82: BareBlockMove(\"l\", -1),\n  85: BareBlockMove(\"r\"),\n  77: BareBlockMove(\"r\", -1),\n\n  88: BareBlockMove(\"d\", 1),\n  188: BareBlockMove(\"d\", -1),\n\n  84: BareBlockMove(\"x\"),\n  89: BareBlockMove(\"x\"),\n  66: BareBlockMove(\"x\", -1),\n  186: BareBlockMove(\"y\"),\n  59: BareBlockMove(\"y\"),\n  65: BareBlockMove(\"y\", -1), // 186 is WebKit, 59 is Mozilla; see http://unixpapa.com/js/key.html\n  80: BareBlockMove(\"z\"),\n  81: BareBlockMove(\"z\", -1),\n\n  90: BareBlockMove(\"M\", -1),\n  190: BareBlockMove(\"M\", -1),\n};\n\n// TODO: options about whether to ignore modifier keys (e.g. alt, ctrl).\n// TODO: Support different mappings.\n// TODO: Return BaseMove instead?\nexport function keyToMove(e: KeyboardEvent): BlockMove | null {\n  if (e.altKey || e.ctrlKey) {\n    return null;\n  }\n\n  return cubeKeyMapping[e.keyCode] || null;\n}\n","import { Sequence } from \"./algorithm\";\nimport { parse } from \"./parser\";\nimport { algToString } from \"./traversal\";\n\n// This is not the most sophisticated scheme, but it has been used in production\n// at alg.cubing.net for years.\nexport function serializeURLParam(a: Sequence): string {\n  let escaped = algToString(a);\n  escaped = escaped.replace(/_/g, \"&#95;\").replace(/ /g, \"_\");\n  escaped = escaped.replace(/\\+/g, \"&#2b;\");\n  escaped = escaped.replace(/-/g, \"&#45;\").replace(/'/g, \"-\");\n  return escaped;\n}\n\nexport function deserializeURLParam(a: string): Sequence {\n  let unescaped = a;\n  unescaped = unescaped.replace(/-/g, \"'\").replace(/&#45;/g, \"-\");\n  unescaped = unescaped.replace(/\\+/g, \" \").replace(/&#2b;/g, \"+\"); // Recognize + as space. Many URL encodings will do this.\n  unescaped = unescaped.replace(/_/g, \" \").replace(/&#95;/g, \"_\");\n  return parse(unescaped);\n}\n\n// Returns an empty sequence if the parameter is not present.\n// Throws an error if an alg is present but not valid.\nexport function getAlgURLParam(name: string): Sequence {\n  const s = new URLSearchParams(window.location.search).get(name) || \"\";\n  return deserializeURLParam(s);\n}\n\nexport interface AlgCubingNetOptions {\n  alg?: Sequence;\n  setup?: Sequence;\n  title?: string;\n  puzzle?:\n    | \"1x1x1\"\n    | \"2x2x2\"\n    | \"3x3x3\"\n    | \"4x4x4\"\n    | \"5x5x5\"\n    | \"6x6x6\"\n    | \"7x7x7\"\n    | \"8x8x8\"\n    | \"9x9x9\"\n    | \"10x10x10\"\n    | \"11x11x11\"\n    | \"12x12x12\"\n    | \"13x13x13\"\n    | \"14x14x14\"\n    | \"16x16x16\"\n    | \"17x17x17\";\n  stage?:\n    | \"full\"\n    | \"cross\"\n    | \"F2L\"\n    | \"LL\"\n    | \"OLL\"\n    | \"PLL\"\n    | \"CLS\"\n    | \"ELS\"\n    | \"L6E\"\n    | \"CMLL\"\n    | \"WV\"\n    | \"ZBLL\"\n    | \"void\";\n  view?: \"editor\" | \"playback\" | \"fullscreen\";\n  type?: \"moves\" | \"reconstruction\" | \"alg\" | \"reconstruction-end-with-setup\";\n}\n\n// TODO: runtime validation?\nexport function algCubingNetLink(options: AlgCubingNetOptions): string {\n  const url = new URL(\"https://alg.cubing.net\");\n  if (!options.alg) {\n    throw new Error(\"An alg parameter is required.\");\n  }\n  url.searchParams.set(\"alg\", serializeURLParam(options.alg));\n\n  if (options.setup) {\n    url.searchParams.set(\"setup\", serializeURLParam(options.setup));\n  }\n  if (options.title) {\n    url.searchParams.set(\"title\", options.title);\n  }\n  if (options.puzzle) {\n    if (\n      ![\n        \"1x1x1\",\n        \"2x2x2\",\n        \"3x3x3\",\n        \"4x4x4\",\n        \"5x5x5\",\n        \"6x6x6\",\n        \"7x7x7\",\n        \"8x8x8\",\n        \"9x9x9\",\n        \"10x10x10\",\n        \"11x11x11\",\n        \"12x12x12\",\n        \"13x13x13\",\n        \"14x14x14\",\n        \"16x16x16\",\n        \"17x17x17\",\n      ].includes(options.puzzle)\n    ) {\n      throw new Error(`Invalid puzzle parameter: ${options.puzzle}`);\n    }\n    url.searchParams.set(\"puzzle\", options.puzzle);\n  }\n  if (options.stage) {\n    if (\n      ![\n        \"full\",\n        \"cross\",\n        \"F2L\",\n        \"LL\",\n        \"OLL\",\n        \"PLL\",\n        \"CLS\",\n        \"ELS\",\n        \"L6E\",\n        \"CMLL\",\n        \"WV\",\n        \"ZBLL\",\n        \"void\",\n      ].includes(options.stage)\n    ) {\n      throw new Error(`Invalid stage parameter: ${options.stage}`);\n    }\n    url.searchParams.set(\"stage\", options.stage);\n  }\n  if (options.view) {\n    if (![\"editor\", \"playback\", \"fullscreen\"].includes(options.view)) {\n      throw new Error(`Invalid view parameter: ${options.view}`);\n    }\n    url.searchParams.set(\"view\", options.view);\n  }\n  if (options.type) {\n    if (\n      ![\n        \"moves\",\n        \"reconstruction\",\n        \"alg\",\n        \"reconstruction-end-with-setup\",\n      ].includes(options.type)\n    ) {\n      throw new Error(`Invalid type parameter: ${options.type}`);\n    }\n    url.searchParams.set(\"type\", options.type);\n  }\n  return url.toString();\n}\n","import \"regenerator-runtime/runtime\"; // Prevent `regeneratorRuntime is not defined` error. https://github.com/babel/babel/issues/5085\n\nexport {\n  AlgPart,\n  Unit,\n  WithAmount,\n  Move,\n  Container,\n  Annotation,\n  Sequence,\n  Group,\n  MoveFamily,\n  BlockMove,\n  BareBlockMove,\n  LayerBlockMove,\n  RangeBlockMove,\n  Commutator,\n  Conjugate,\n  Pause,\n  NewLine,\n  Comment,\n} from \"./algorithm\";\n\nexport {\n  modifiedBlockMove,\n  experimentalAppendBlockMove,\n  experimentalConcatAlgs,\n} from \"./operation\";\n\nexport {\n  TraversalDownUp,\n  TraversalUp,\n  invert,\n  expand,\n  structureEquals,\n  coalesceBaseMoves,\n  algToString,\n  algPartToStringForTesting,\n  blockMoveToString,\n} from \"./traversal\";\n\nexport { Example } from \"./example\";\n\nexport { AlgJSON, fromJSON } from \"./json\";\n\nexport { parse } from \"./parser\";\n\nexport { keyToMove } from \"./keyboard\";\n\nexport {\n  validateSiGNMoves,\n  validateFlatAlg,\n  validateSiGNAlg,\n  ValidationError,\n} from \"./validation\";\n\nexport {\n  serializeURLParam,\n  deserializeURLParam,\n  algCubingNetLink,\n  getAlgURLParam,\n} from \"./url\";\n\nexport { setAlgPartTypeMismatchReportingLevel } from \"./debug\";\n","import { KPuzzleDefinition, Transformation } from \"./definition_types\";\n\nexport function Combine(\n  def: KPuzzleDefinition,\n  t1: Transformation,\n  t2: Transformation,\n): Transformation {\n  const newTrans: Transformation = {} as Transformation;\n  for (const orbitName in def.orbits) {\n    const oDef = def.orbits[orbitName];\n    const o1 = t1[orbitName];\n    const o2 = t2[orbitName];\n    const newPerm = new Array(oDef.numPieces);\n    const newOri = new Array(oDef.numPieces);\n    for (let idx = 0; idx < oDef.numPieces; idx++) {\n      newOri[idx] =\n        (o1.orientation[o2.permutation[idx]] + o2.orientation[idx]) %\n        oDef.orientations;\n      newPerm[idx] = o1.permutation[o2.permutation[idx]];\n    }\n    newTrans[orbitName] = { permutation: newPerm, orientation: newOri };\n  }\n  return newTrans;\n}\n\nexport function Multiply(\n  def: KPuzzleDefinition,\n  t: Transformation,\n  amount: number,\n): Transformation {\n  if (amount < 0) {\n    return Multiply(def, Invert(def, t), -amount);\n  }\n  if (amount === 0) {\n    return IdentityTransformation(def);\n  }\n  if (amount === 1) {\n    return t;\n  }\n  const halfish = Multiply(def, t, Math.floor(amount / 2));\n  const twiceHalfish = Combine(def, halfish, halfish);\n  if (amount % 2 === 0) {\n    return twiceHalfish;\n  } else {\n    return Combine(def, t, twiceHalfish);\n  }\n}\nexport function IdentityTransformation(\n  definition: KPuzzleDefinition,\n): Transformation {\n  const transformation = {} as Transformation;\n  for (const orbitName in definition.orbits) {\n    const orbitDefinition = definition.orbits[orbitName];\n    const newPermutation = new Array(orbitDefinition.numPieces);\n    const newOrientation = new Array(orbitDefinition.numPieces);\n    for (let i = 0; i < orbitDefinition.numPieces; i++) {\n      newPermutation[i] = i;\n      newOrientation[i] = 0;\n    }\n    const orbitTransformation = {\n      permutation: newPermutation,\n      orientation: newOrientation,\n    };\n    transformation[orbitName] = orbitTransformation;\n  }\n  return transformation;\n}\n\nexport function Invert(\n  def: KPuzzleDefinition,\n  t: Transformation,\n): Transformation {\n  const newTrans: Transformation = {} as Transformation;\n  for (const orbitName in def.orbits) {\n    const oDef = def.orbits[orbitName];\n    const o = t[orbitName];\n    const newPerm = new Array(oDef.numPieces);\n    const newOri = new Array(oDef.numPieces);\n    for (let idx = 0; idx < oDef.numPieces; idx++) {\n      const fromIdx = o.permutation[idx] as number;\n      newPerm[fromIdx] = idx;\n      newOri[fromIdx] =\n        (oDef.orientations - o.orientation[idx] + oDef.orientations) %\n        oDef.orientations;\n    }\n    newTrans[orbitName] = { permutation: newPerm, orientation: newOri };\n  }\n  return newTrans;\n}\n\nfunction gcd(a: number, b: number): number {\n  if (b) {\n    return gcd(b, a % b);\n  }\n  return a;\n}\n/* calculate the order of a particular transformation. */\nexport function Order(def: KPuzzleDefinition, t: Transformation): number {\n  let r: number = 1;\n  for (const orbitName in def.orbits) {\n    const oDef = def.orbits[orbitName];\n    const o = t[orbitName];\n    const d = new Array(oDef.numPieces);\n    for (let idx = 0; idx < oDef.numPieces; idx++) {\n      if (!d[idx]) {\n        let w = idx;\n        let om = 0;\n        let pm = 0;\n        for (;;) {\n          d[w] = true;\n          om = om + o.orientation[w];\n          pm = pm + 1;\n          w = o.permutation[w];\n          if (w === idx) {\n            break;\n          }\n        }\n        if (om !== 0) {\n          pm = (pm * oDef.orientations) / gcd(oDef.orientations, om);\n        }\n        r = (r * pm) / gcd(r, pm);\n      }\n    }\n  }\n  return r;\n}\n\nexport function EquivalentTransformations(\n  def: KPuzzleDefinition,\n  t1: Transformation,\n  t2: Transformation,\n): boolean {\n  for (const orbitName in def.orbits) {\n    const oDef = def.orbits[orbitName];\n    const o1 = t1[orbitName];\n    const o2 = t2[orbitName];\n    for (let idx = 0; idx < oDef.numPieces; idx++) {\n      if (o1.orientation[idx] !== o2.orientation[idx]) {\n        return false;\n      }\n      if (o1.permutation[idx] !== o2.permutation[idx]) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nexport function EquivalentStates(\n  def: KPuzzleDefinition,\n  t1: Transformation,\n  t2: Transformation,\n): boolean {\n  // Turn transformations into states.\n  // This accounts for indistinguishable pieces.\n  return EquivalentTransformations(\n    def,\n    Combine(def, def.startPieces, t1),\n    Combine(def, def.startPieces, t2),\n  );\n}\n","//   This class supports expanding a set of slice moves (for instance,\n//   U, 2U, 3U, 2D, D on the 5x5x5) into a full set of outer block, inner\n//   slice, etc. moves such as 2-3u or 5U, automatically.  The addGrip()\n//   method informs us what grips exist and how many slices there are.\n//   The setFaceNames() method tells us what the names of the faces are\n//   so we can unswizzle swizzled grip names.\n\nimport { Transformation, KPuzzleDefinition } from \"./definition_types\";\nimport { Invert, Combine } from \"./transformations\";\nimport { BlockMove, parse } from \"../alg\";\n\nexport class MoveExpander {\n  private gripStash: { [key: string]: Transformation[] };\n  private moveStash: { [key: string]: Transformation };\n  private facenames?: string[];\n  private regrip: { [key: string]: string };\n  constructor() {\n    this.gripStash = {};\n    this.moveStash = {};\n    this.regrip = {};\n  }\n\n  public setFaceNames(fn: string[]): void {\n    this.facenames = fn;\n  }\n\n  public addGrip(\n    grip1: string,\n    grip2: string,\n    nslices: number,\n    def: KPuzzleDefinition,\n  ): void {\n    const slices = [];\n    const axes = this.gripStash;\n    const moves = def.moves;\n    for (let i = 1; i <= nslices; i++) {\n      let t = (i === 1 && moves[grip1]) || moves[\"\" + i + grip1];\n      if (!t) {\n        t =\n          (i === nslices && moves[grip2]) ||\n          moves[\"\" + (nslices + 1 - i) + grip2];\n        if (t) {\n          t = Invert(def, t);\n        }\n      }\n      if (!t) {\n        throw new Error(\n          \"Could not expand axis \" +\n            grip1 +\n            \" to \" +\n            grip2 +\n            \" because we are missing a move for slice \" +\n            i,\n        );\n      }\n      slices.push(t);\n    }\n    axes[grip1] = slices;\n    const aprime = slices.map((_: Transformation) => Invert(def, _));\n    aprime.reverse();\n    axes[grip2] = aprime;\n  }\n\n  public expandSlicesByName(\n    mv: string,\n    def: KPuzzleDefinition,\n  ): Transformation | undefined {\n    const t = this.moveStash[mv];\n    if (t) {\n      return t;\n    }\n    try {\n      const alg = parse(mv);\n      if (alg.nestedUnits.length !== 1) {\n        return undefined;\n      }\n      const signmove = alg.nestedUnits[0] as BlockMove; // need better way\n      return this.expandSlices(mv, signmove, def);\n    } catch (e) {\n      return undefined;\n    }\n  }\n\n  public unswizzle(grip: string): string {\n    if (this.regrip[grip]) {\n      return this.regrip[grip];\n    }\n    if (!this.facenames) {\n      return grip;\n    }\n    // permit unswizzle to strip w and p suffixes for callers\n    // other than the internal move expander below.\n    if (grip.length > 1) {\n      if (\n        grip[0] <= \"Z\" &&\n        (grip[grip.length - 1] === \"w\" || grip[grip.length - 1] === \"v\")\n      ) {\n        grip = grip.substr(0, grip.length - 1);\n      }\n    }\n    const faceSplit = this.splitByFaceNames(grip, this.facenames);\n    if (faceSplit) {\n      for (let i = 0; i < faceSplit.length; i++) {\n        let testGrip = \"\";\n        for (let j = 0; j < faceSplit.length; j++) {\n          testGrip += faceSplit[(i + j) % faceSplit.length];\n        }\n        if (this.gripStash[testGrip]) {\n          this.regrip[grip] = testGrip;\n          return testGrip;\n        }\n      }\n    }\n    return grip;\n  }\n\n  public expandSlices(\n    rep: string,\n    blockMove: BlockMove,\n    def: KPuzzleDefinition,\n  ): Transformation | undefined {\n    const t = this.moveStash[rep];\n    if (t) {\n      return t;\n    }\n    const axes = this.gripStash;\n    const family = blockMove.family;\n    let grip = family;\n    let isBlock = false;\n    let isPuzzle = false;\n    // the following \"reparse\" code is almost certainly wrong\n    if (/[a-z]/.test(family)) {\n      isBlock = true;\n      grip = family.toUpperCase();\n    }\n    if (family.length > 1 && family.endsWith(\"w\")) {\n      isBlock = true;\n      grip = family.substring(0, family.length - 1);\n    }\n    if (family.length > 1 && family.endsWith(\"v\")) {\n      isPuzzle = true;\n      grip = family.substring(0, family.length - 1);\n    }\n    let slices = axes[grip];\n    if (!slices && this.facenames) {\n      grip = this.unswizzle(grip);\n      slices = axes[grip];\n    }\n    if (!slices) {\n      return undefined;\n    } // don't throw here; let others catch it\n    let outer = blockMove.outerLayer;\n    let inner = blockMove.innerLayer;\n    if (inner === undefined) {\n      if (outer === undefined) {\n        outer = 1;\n        inner = isBlock ? 2 : 1;\n        if (isPuzzle) {\n          inner = axes[grip].length;\n        }\n      } else {\n        return undefined;\n      } // should never happen\n    } else if (outer === undefined) {\n      outer = isBlock ? 1 : inner;\n    }\n    if (inner < outer) {\n      return undefined;\n    }\n    if (outer > axes[grip].length) {\n      return undefined;\n    }\n    let t2 = slices[outer - 1];\n    for (let i = outer + 1; i <= inner; i++) {\n      t2 = Combine(def, t2, slices[i - 1]);\n    }\n    this.moveStash[rep] = t2;\n    return t2;\n  }\n\n  private splitByFaceNames(\n    s: string,\n    facenames: string[],\n  ): string[] | undefined {\n    const r: string[] = [];\n    let at = 0;\n    // we permit lowercase arguments, but face names are always upper case\n    s = s.toUpperCase();\n    while (at < s.length) {\n      let found = false;\n      for (const facename of facenames) {\n        if (s.substr(at).startsWith(facename)) {\n          r.push(facename);\n          at += facename.length;\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        return undefined;\n      }\n    }\n    return r;\n  }\n}\n","import { BlockMove, blockMoveToString, expand, Sequence } from \"../alg\";\nimport { KPuzzleDefinition, Transformation } from \"./definition_types\";\nimport { MoveExpander } from \"./move_expander\";\nimport { Multiply, IdentityTransformation, Combine } from \"./transformations\";\n\n// TODO: Move other helpers into the definition.\nexport function stateForBlockMove(\n  def: KPuzzleDefinition,\n  blockMove: BlockMove,\n): Transformation {\n  // TODO: Optimize this.\n  const repMoveString = blockMoveToString(\n    new BlockMove(\n      blockMove.outerLayer,\n      blockMove.innerLayer,\n      blockMove.family,\n      1,\n    ),\n  );\n  let move: Transformation | undefined = def.moves[repMoveString];\n  if (!move) {\n    move = new KPuzzle(def).expandSlices(repMoveString, blockMove);\n  }\n  if (!move) {\n    throw new Error(`Unknown move family: ${blockMove.family}`);\n  }\n  return Multiply(def, move, blockMove.amount);\n}\n\nexport class KPuzzle {\n  public state: Transformation;\n  constructor(public definition: KPuzzleDefinition) {\n    this.state = IdentityTransformation(definition);\n  }\n\n  public reset(): void {\n    this.state = IdentityTransformation(this.definition);\n  }\n\n  public serialize(): string {\n    let output = \"\";\n    for (const orbitName in this.definition.orbits) {\n      output += orbitName + \"\\n\";\n      output += this.state[orbitName].permutation.join(\" \") + \"\\n\";\n      output += this.state[orbitName].orientation.join(\" \") + \"\\n\";\n    }\n    output = output.slice(0, output.length - 1); // Trim last newline.\n    return output;\n  }\n\n  public applyBlockMove(blockMove: BlockMove): void {\n    this.state = Combine(\n      this.definition,\n      this.state,\n      stateForBlockMove(this.definition, blockMove),\n    );\n  }\n\n  public applyAlg(a: Sequence): void {\n    // TODO: Iterator instead of full expansion.\n    for (const move of expand(a).nestedUnits as BlockMove[]) {\n      this.applyBlockMove(move);\n    }\n  }\n\n  public applyMove(moveName: string): this {\n    let move: Transformation | undefined = this.definition.moves[moveName];\n    if (!move) {\n      move = this.expandSlicesByName(moveName);\n    }\n    if (!move) {\n      throw new Error(`Unknown move: ${moveName}`);\n    }\n\n    this.state = Combine(this.definition, this.state, move);\n    return this;\n  }\n\n  public getMoveExpander(create: boolean): MoveExpander | undefined {\n    let moveExpander = this.definition.moveExpander;\n    if (create && !moveExpander) {\n      moveExpander = new MoveExpander();\n      this.definition.moveExpander = moveExpander;\n    }\n    return moveExpander;\n  }\n\n  public setFaceNames(faceNames: string[]): void {\n    const me = this.getMoveExpander(true);\n    if (me) {\n      me.setFaceNames(faceNames);\n    }\n  }\n\n  public addGrip(grip1: string, grip2: string, nslices: number): void {\n    const me = this.getMoveExpander(true);\n    return me ? me.addGrip(grip1, grip2, nslices, this.definition) : undefined;\n  }\n\n  public expandSlices(\n    rep: string,\n    blockMove: BlockMove,\n  ): Transformation | undefined {\n    const me = this.getMoveExpander(false);\n    return me ? me.expandSlices(rep, blockMove, this.definition) : undefined;\n  }\n\n  public expandSlicesByName(mv: string): Transformation | undefined {\n    const me = this.getMoveExpander(false);\n    return me ? me.expandSlicesByName(mv, this.definition) : undefined;\n  }\n\n  public unswizzle(grip: string): string {\n    const me = this.getMoveExpander(true);\n    return me ? me.unswizzle(grip) : grip;\n  }\n\n  // TODO: Implement\n  // parseState(): this {}\n\n  // TODO: Alg parsing\n\n  // TODO: Implement.\n  // invert(): this {}\n}\n","/**\n *  This module manages canonical sequences.  You can merge sequences\n *  combining moves (fully respecting commuting moves), and you can\n *  generate canonical sequences efficiently.\n */\nimport { KPuzzleDefinition, Transformation } from \"./definition_types\";\nimport {\n  EquivalentTransformations,\n  Combine,\n  IdentityTransformation,\n} from \"./transformations\";\nimport {\n  modifiedBlockMove,\n  blockMoveToString,\n  BlockMove,\n  Sequence,\n} from \"../alg\";\n\nclass InternalMove {\n  constructor(public base: number, public twist: number) {}\n  public getTransformation(canon: Canonicalize): Transformation {\n    return canon.transforms[this.base][this.twist];\n  }\n\n  public asString(canon: Canonicalize): string {\n    const mod = canon.moveorder[this.base];\n    let tw = this.twist % mod;\n    while (tw + tw > mod) {\n      tw -= mod;\n    }\n    while (tw + tw <= -mod) {\n      tw += mod;\n    }\n    const nam = canon.movenames[this.base];\n    if (tw === 1) {\n      return nam;\n    } else if (tw === -1) {\n      return nam + \"'\";\n    } else if (tw > 0) {\n      return nam + tw;\n    } else if (tw < 0) {\n      return nam + -tw + \"'\";\n    } else {\n      throw new Error(\"Stringifying null move?\");\n    }\n  }\n}\n\n// represents puzzle move data and its commuting structure\nexport class Canonicalize {\n  public commutes: boolean[][] = [];\n  public moveorder: number[] = [];\n  public movenames: string[] = [];\n  public transforms: Transformation[][] = [];\n  public moveindex: { [key: string]: number } = {};\n  public baseMoveCount: number;\n  constructor(public def: KPuzzleDefinition) {\n    const basemoves = def.moves;\n    const id = IdentityTransformation(def);\n    for (const mv1 in basemoves) {\n      this.moveindex[mv1] = this.movenames.length;\n      this.movenames.push(mv1);\n      this.transforms.push([id, basemoves[mv1]]);\n    }\n    this.baseMoveCount = this.movenames.length;\n    for (let i = 0; i < this.baseMoveCount; i++) {\n      this.commutes.push([]);\n      const t1 = this.transforms[i][1];\n      for (let j = 0; j < this.baseMoveCount; j++) {\n        const t2 = this.transforms[j][1];\n        const ab = Combine(def, t1, t2);\n        const ba = Combine(def, t2, t1);\n        this.commutes[i][j] = EquivalentTransformations(def, ab, ba);\n      }\n    }\n    for (let i = 0; i < this.baseMoveCount; i++) {\n      const t1 = this.transforms[i][1];\n      let ct = t1;\n      let order = 1;\n      for (let mult = 2; !EquivalentTransformations(def, id, ct); mult++) {\n        order++;\n        ct = Combine(def, ct, t1);\n        this.transforms[i].push(ct);\n      }\n      this.moveorder[i] = order;\n    }\n  }\n\n  public blockMoveToInternalMove(mv: BlockMove): InternalMove {\n    const basemove = modifiedBlockMove(mv, { amount: 1 });\n    const s = blockMoveToString(basemove);\n    if (!(s in this.def.moves)) {\n      throw new Error(\"! move \" + s + \" not in def.\");\n    }\n    const ind = this.moveindex[s];\n    const mod = this.moveorder[ind];\n    let tw = mv.amount % mod;\n    if (tw < 0) {\n      tw = (tw + mod) % mod;\n    }\n    return new InternalMove(ind, tw);\n  }\n\n  // Sequence must be simple sequence of block moves\n  // this one does not attempt to merge.\n  public sequenceToSearchSequence(\n    s: Sequence,\n    tr?: Transformation,\n  ): SearchSequence {\n    const ss = new SearchSequence(this, tr);\n    for (const mv of s.nestedUnits) {\n      ss.appendOneMove(this.blockMoveToInternalMove(mv as BlockMove));\n    }\n    return ss;\n  }\n\n  // Sequence to simple sequence, with merging.\n  public mergeSequenceToSearchSequence(\n    s: Sequence,\n    tr?: Transformation,\n  ): SearchSequence {\n    const ss = new SearchSequence(this, tr);\n    for (const mv of s.nestedUnits) {\n      ss.mergeOneMove(this.blockMoveToInternalMove(mv as BlockMove));\n    }\n    return ss;\n  }\n}\n// represents a single sequence we are working on\n// this can be a search sequence, or it can be a\n// \"cooked\" sequence that we want to use efficiently.\nexport class SearchSequence {\n  public moveseq: InternalMove[] = [];\n  public trans: Transformation;\n  constructor(private canon: Canonicalize, tr?: Transformation) {\n    if (tr) {\n      this.trans = tr;\n    } else {\n      this.trans = IdentityTransformation(canon.def);\n    }\n  }\n\n  /*\n   *  A common use for search sequences is to extend them, but\n   *  sometimes we shouldn't modify the returned one.  This\n   *  method gives you a copy you can do whatever you want with.\n   */\n  public clone(): SearchSequence {\n    const r = new SearchSequence(this.canon, this.trans);\n    r.moveseq = [...this.moveseq];\n    return r;\n  }\n\n  // returns 1 if the move is added, 0 if it is merged, -1 if it cancels a move\n  public mergeOneMove(mv: InternalMove): number {\n    const r = this.onlyMergeOneMove(mv);\n    this.trans = Combine(\n      this.canon.def,\n      this.trans,\n      mv.getTransformation(this.canon),\n    );\n    return r;\n  }\n\n  // does not do merge work; just slaps the new move on\n  public appendOneMove(mv: InternalMove): number {\n    this.moveseq.push(mv);\n    this.trans = Combine(\n      this.canon.def,\n      this.trans,\n      mv.getTransformation(this.canon),\n    );\n    return 1;\n  }\n\n  // pop a move off.\n  public popMove(): number {\n    const mv = this.moveseq.pop();\n    if (!mv) {\n      throw new Error(\"Can't pop an empty sequence\");\n    }\n    this.trans = Combine(\n      this.canon.def,\n      this.trans,\n      this.canon.transforms[mv.base][this.canon.moveorder[mv.base] - mv.twist],\n    );\n    return 1;\n  }\n\n  // do one more twist of the last move\n  public oneMoreTwist(): number {\n    const lastmv = this.moveseq[this.moveseq.length - 1];\n    this.trans = Combine(\n      this.canon.def,\n      this.trans,\n      this.canon.transforms[lastmv.base][1],\n    );\n    this.moveseq[this.moveseq.length - 1] = new InternalMove(\n      lastmv.base,\n      lastmv.twist + 1,\n    );\n    return 0;\n  }\n\n  private onlyMergeOneMove(mv: InternalMove): number {\n    let j = this.moveseq.length - 1;\n    while (j >= 0) {\n      if (mv.base === this.moveseq[j].base) {\n        const mo = this.canon.moveorder[mv.base];\n        let twist = (mv.twist + this.moveseq[j].twist) % mo;\n        if (twist < 0) {\n          twist = (twist + mo) % mo;\n        }\n        if (twist === 0) {\n          // this splice should not be a performance problem because the\n          // typical number of following moves should be small\n          this.moveseq.splice(j, 1);\n          return -1;\n        } else {\n          this.moveseq[j] = new InternalMove(mv.base, twist);\n          return 0;\n        }\n      } else if (this.canon.commutes[mv.base][this.moveseq[j].base]) {\n        j--;\n      } else {\n        break;\n      }\n    }\n    this.moveseq.push(mv);\n    return 1;\n  }\n\n  // returns the length of the merged sequence.\n  public mergeSequence(seq: SearchSequence): number {\n    let r = this.moveseq.length;\n    for (let i = 0; i < seq.moveseq.length; i++) {\n      const mv = seq.moveseq[i];\n      const d = this.onlyMergeOneMove(mv);\n      r += d;\n    }\n    this.trans = Combine(this.canon.def, this.trans, seq.trans);\n    return r;\n  }\n\n  public getSequenceAsString(): string {\n    const r: string[] = [];\n    for (const mv of this.moveseq) {\n      r.push(mv.asString(this.canon));\n    }\n    return r.join(\" \");\n  }\n}\n/*\n *   Iterate through canonical sequences by length.  This version\n *   uses generators.\n */\nexport class CanonicalSequenceIterator {\n  public ss: SearchSequence;\n  public targetLength: number;\n  constructor(public canon: Canonicalize, state?: Transformation) {\n    this.ss = new SearchSequence(canon, state);\n    this.targetLength = 0;\n  }\n\n  public nextState(base: number, canonstate: number[]): null | number[] {\n    const newstate: number[] = [];\n    for (const prevbase of canonstate) {\n      if (prevbase === base) {\n        return null;\n      } else if (!this.canon.commutes[prevbase][base]) {\n        // don't do anything in this case\n      } else if (base < prevbase) {\n        return null;\n      } else {\n        newstate.push(prevbase);\n      }\n    }\n    return newstate;\n  }\n\n  public *genSequence(\n    togo: number,\n    canonstate: number[],\n  ): Generator<SearchSequence, null, void> {\n    if (togo === 0) {\n      yield this.ss;\n    } else {\n      for (let base = 0; base < this.canon.baseMoveCount; base++) {\n        const newstate = this.nextState(base, canonstate);\n        if (newstate) {\n          newstate.push(base);\n          for (let tw = 1; tw < this.canon.moveorder[base]; tw++) {\n            this.ss.appendOneMove(new InternalMove(base, tw));\n            yield* this.genSequence(togo - 1, newstate);\n            this.ss.popMove();\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n  public *generator(): Generator<SearchSequence, SearchSequence, void> {\n    for (let d = 0; ; d++) {\n      yield* this.genSequence(d, []);\n    }\n  }\n\n  public *genSequenceTree(\n    canonstate: number[],\n  ): Generator<SearchSequence, null, number> {\n    const r = yield this.ss;\n    if (r > 0) {\n      return null;\n    }\n    for (let base = 0; base < this.canon.baseMoveCount; base++) {\n      const newstate = this.nextState(base, canonstate);\n      if (newstate) {\n        newstate.push(base);\n        for (let tw = 1; tw < this.canon.moveorder[base]; tw++) {\n          this.ss.appendOneMove(new InternalMove(base, tw));\n          yield* this.genSequenceTree(newstate);\n          this.ss.popMove();\n        }\n      }\n    }\n    return null;\n  }\n}\n","module.exports={name:\"2x2x2\",orbits:{CORNER:{numPieces:8,orientations:3}},startPieces:{CORNER:{permutation:[0,1,2,3,4,5,6,7],orientation:[0,0,0,0,0,0,0,0]}},moves:{U:{CORNER:{permutation:[1,2,3,0,4,5,6,7],orientation:[0,0,0,0,0,0,0,0]}},y:{CORNER:{permutation:[1,2,3,0,7,4,5,6],orientation:[0,0,0,0,0,0,0,0]}},x:{CORNER:{permutation:[4,0,3,5,7,6,2,1],orientation:[2,1,2,1,1,2,1,2]}},L:{CORNER:{permutation:[0,1,6,2,4,3,5,7],orientation:[0,0,2,1,0,2,1,0]}},F:{CORNER:{permutation:[3,1,2,5,0,4,6,7],orientation:[1,0,0,2,2,1,0,0]}},R:{CORNER:{permutation:[4,0,2,3,7,5,6,1],orientation:[2,1,0,0,1,0,0,2]}},B:{CORNER:{permutation:[0,7,1,3,4,5,2,6],orientation:[0,2,1,0,0,0,2,1]}},D:{CORNER:{permutation:[0,1,2,3,5,6,7,4],orientation:[0,0,0,0,0,0,0,0]}},z:{CORNER:{permutation:[3,2,6,5,0,4,7,1],orientation:[1,2,1,2,2,1,2,1]}}}};","module.exports = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.0//EN\"\n       \"http://www.w3.org/TR/2001/REC-SVG-20050904/DTD/svg11.dtd\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 490 370\" preserveAspectRatio=\"xMidYMid meet\">\n  <title>2x2x2</title>\n  <defs>\n    <g id=\"sticker\">\n        <rect x=\"0\" y=\"0\" width=\"1\" height=\"1\" stroke=\"black\" stroke-width=\"0.04px\" />\n    </g>\n  </defs>\n  <g id=\"puzzle\" transform=\"translate(5, 5) scale(60)\">\n    <use id=\"CORNER-l0-o0\" xlink:href=\"#sticker\" transform=\"translate(3, 1)\" style=\"fill: white\"/>\n    <use id=\"CORNER-l0-o1\" xlink:href=\"#sticker\" transform=\"translate(4, 2)\" style=\"fill: red\"/>\n    <use id=\"CORNER-l0-o2\" xlink:href=\"#sticker\" transform=\"translate(3, 2)\" style=\"fill: limegreen\"/>\n\n    <use id=\"CORNER-l1-o0\" xlink:href=\"#sticker\" transform=\"translate(3, 0)\" style=\"fill: white\"/>\n    <use id=\"CORNER-l1-o1\" xlink:href=\"#sticker\" transform=\"translate(6, 2)\" style=\"fill: blue\"/>\n    <use id=\"CORNER-l1-o2\" xlink:href=\"#sticker\" transform=\"translate(5, 2)\" style=\"fill: red\"/>\n\n    <use id=\"CORNER-l2-o0\" xlink:href=\"#sticker\" transform=\"translate(2, 0)\" style=\"fill: white\"/>\n    <use id=\"CORNER-l2-o1\" xlink:href=\"#sticker\" transform=\"translate(0, 2)\" style=\"fill: orange\"/>\n    <use id=\"CORNER-l2-o2\" xlink:href=\"#sticker\" transform=\"translate(7, 2)\" style=\"fill: blue\"/>\n\n    <use id=\"CORNER-l3-o0\" xlink:href=\"#sticker\" transform=\"translate(2, 1)\" style=\"fill: white\"/>\n    <use id=\"CORNER-l3-o1\" xlink:href=\"#sticker\" transform=\"translate(2, 2)\" style=\"fill: limegreen\"/>\n    <use id=\"CORNER-l3-o2\" xlink:href=\"#sticker\" transform=\"translate(1, 2)\" style=\"fill: orange\"/>\n\n    <use id=\"CORNER-l4-o0\" xlink:href=\"#sticker\" transform=\"translate(3, 4)\" style=\"fill: yellow\"/>\n    <use id=\"CORNER-l4-o1\" xlink:href=\"#sticker\" transform=\"translate(3, 3)\" style=\"fill: limegreen\"/>\n    <use id=\"CORNER-l4-o2\" xlink:href=\"#sticker\" transform=\"translate(4, 3)\" style=\"fill: red\"/>\n\n    <use id=\"CORNER-l5-o0\" xlink:href=\"#sticker\" transform=\"translate(2, 4)\" style=\"fill: yellow\"/>\n    <use id=\"CORNER-l5-o1\" xlink:href=\"#sticker\" transform=\"translate(1, 3)\" style=\"fill: orange\"/>\n    <use id=\"CORNER-l5-o2\" xlink:href=\"#sticker\" transform=\"translate(2, 3)\" style=\"fill: limegreen\"/>\n\n    <use id=\"CORNER-l6-o0\" xlink:href=\"#sticker\" transform=\"translate(2, 5)\" style=\"fill: yellow\"/>\n    <use id=\"CORNER-l6-o1\" xlink:href=\"#sticker\" transform=\"translate(7, 3)\" style=\"fill: blue\"/>\n    <use id=\"CORNER-l6-o2\" xlink:href=\"#sticker\" transform=\"translate(0, 3)\"  style=\"fill: orange\"/>\n\n    <use id=\"CORNER-l7-o0\" xlink:href=\"#sticker\" transform=\"translate(3, 5)\" style=\"fill: yellow\"/>\n    <use id=\"CORNER-l7-o1\" xlink:href=\"#sticker\" transform=\"translate(5, 3)\" style=\"fill: red\"/>\n    <use id=\"CORNER-l7-o2\" xlink:href=\"#sticker\" transform=\"translate(6, 3)\" style=\"fill: blue\"/>\n  </g>\n\n</svg>\n`","module.exports={name:\"3x3x3\",orbits:{EDGE:{numPieces:12,orientations:2},CORNER:{numPieces:8,orientations:3},CENTER:{numPieces:6,orientations:4}},startPieces:{EDGE:{permutation:[0,1,2,3,4,5,6,7,8,9,10,11],orientation:[0,0,0,0,0,0,0,0,0,0,0,0]},CORNER:{permutation:[0,1,2,3,4,5,6,7],orientation:[0,0,0,0,0,0,0,0]},CENTER:{permutation:[0,1,2,3,4,5],orientation:[0,0,0,0,0,0]}},moves:{U:{EDGE:{permutation:[1,2,3,0,4,5,6,7,8,9,10,11],orientation:[0,0,0,0,0,0,0,0,0,0,0,0]},CORNER:{permutation:[1,2,3,0,4,5,6,7],orientation:[0,0,0,0,0,0,0,0]},CENTER:{permutation:[0,1,2,3,4,5],orientation:[1,0,0,0,0,0]}},y:{EDGE:{permutation:[1,2,3,0,5,6,7,4,10,8,11,9],orientation:[0,0,0,0,0,0,0,0,1,1,1,1]},CORNER:{permutation:[1,2,3,0,7,4,5,6],orientation:[0,0,0,0,0,0,0,0]},CENTER:{permutation:[0,2,3,4,1,5],orientation:[1,0,0,0,0,3]}},x:{EDGE:{permutation:[4,8,0,9,6,10,2,11,5,7,1,3],orientation:[1,0,1,0,1,0,1,0,0,0,0,0]},CORNER:{permutation:[4,0,3,5,7,6,2,1],orientation:[2,1,2,1,1,2,1,2]},CENTER:{permutation:[2,1,5,3,0,4],orientation:[0,3,0,1,2,2]}},L:{EDGE:{permutation:[0,1,2,11,4,5,6,9,8,3,10,7],orientation:[0,0,0,0,0,0,0,0,0,0,0,0]},CORNER:{permutation:[0,1,6,2,4,3,5,7],orientation:[0,0,2,1,0,2,1,0]},CENTER:{permutation:[0,1,2,3,4,5],orientation:[0,1,0,0,0,0]}},F:{EDGE:{permutation:[9,1,2,3,8,5,6,7,0,4,10,11],orientation:[1,0,0,0,1,0,0,0,1,1,0,0]},CORNER:{permutation:[3,1,2,5,0,4,6,7],orientation:[1,0,0,2,2,1,0,0]},CENTER:{permutation:[0,1,2,3,4,5],orientation:[0,0,1,0,0,0]}},R:{EDGE:{permutation:[0,8,2,3,4,10,6,7,5,9,1,11],orientation:[0,0,0,0,0,0,0,0,0,0,0,0]},CORNER:{permutation:[4,0,2,3,7,5,6,1],orientation:[2,1,0,0,1,0,0,2]},CENTER:{permutation:[0,1,2,3,4,5],orientation:[0,0,0,1,0,0]}},B:{EDGE:{permutation:[0,1,10,3,4,5,11,7,8,9,6,2],orientation:[0,0,1,0,0,0,1,0,0,0,1,1]},CORNER:{permutation:[0,7,1,3,4,5,2,6],orientation:[0,2,1,0,0,0,2,1]},CENTER:{permutation:[0,1,2,3,4,5],orientation:[0,0,0,0,1,0]}},D:{EDGE:{permutation:[0,1,2,3,7,4,5,6,8,9,10,11],orientation:[0,0,0,0,0,0,0,0,0,0,0,0]},CORNER:{permutation:[0,1,2,3,5,6,7,4],orientation:[0,0,0,0,0,0,0,0]},CENTER:{permutation:[0,1,2,3,4,5],orientation:[0,0,0,0,0,1]}},z:{EDGE:{permutation:[9,3,11,7,8,1,10,5,0,4,2,6],orientation:[1,1,1,1,1,1,1,1,1,1,1,1]},CORNER:{permutation:[3,2,6,5,0,4,7,1],orientation:[1,2,1,2,2,1,2,1]},CENTER:{permutation:[1,5,2,0,4,3],orientation:[1,1,1,1,3,1]}},M:{EDGE:{permutation:[2,1,6,3,0,5,4,7,8,9,10,11],orientation:[1,0,1,0,1,0,1,0,0,0,0,0]},CORNER:{permutation:[0,1,2,3,4,5,6,7],orientation:[0,0,0,0,0,0,0,0]},CENTER:{permutation:[4,1,0,3,5,2],orientation:[2,0,0,0,2,0]}},E:{EDGE:{permutation:[0,1,2,3,4,5,6,7,9,11,8,10],orientation:[0,0,0,0,0,0,0,0,1,1,1,1]},CORNER:{permutation:[0,1,2,3,4,5,6,7],orientation:[0,0,0,0,0,0,0,0]},CENTER:{permutation:[0,4,1,2,3,5],orientation:[0,0,0,0,0,0]}},S:{EDGE:{permutation:[0,3,2,7,4,1,6,5,8,9,10,11],orientation:[0,1,0,1,0,1,0,1,0,0,0,0]},CORNER:{permutation:[0,1,2,3,4,5,6,7],orientation:[0,0,0,0,0,0,0,0]},CENTER:{permutation:[1,5,2,0,4,3],orientation:[1,1,0,1,0,1]}},u:{EDGE:{permutation:[1,2,3,0,4,5,6,7,10,8,11,9],orientation:[0,0,0,0,0,0,0,0,1,1,1,1]},CORNER:{permutation:[1,2,3,0,4,5,6,7],orientation:[0,0,0,0,0,0,0,0]},CENTER:{permutation:[0,2,3,4,1,5],orientation:[1,0,0,0,0,0]}},l:{EDGE:{permutation:[2,1,6,11,0,5,4,9,8,3,10,7],orientation:[1,0,1,0,1,0,1,0,0,0,0,0]},CORNER:{permutation:[0,1,6,2,4,3,5,7],orientation:[0,0,2,1,0,2,1,0]},CENTER:{permutation:[4,1,0,3,5,2],orientation:[2,1,0,0,2,0]}},f:{EDGE:{permutation:[9,3,2,7,8,1,6,5,0,4,10,11],orientation:[1,1,0,1,1,1,0,1,1,1,0,0]},CORNER:{permutation:[3,1,2,5,0,4,6,7],orientation:[1,0,0,2,2,1,0,0]},CENTER:{permutation:[1,5,2,0,4,3],orientation:[1,1,1,1,0,1]}},r:{EDGE:{permutation:[4,8,0,3,6,10,2,7,5,9,1,11],orientation:[1,0,1,0,1,0,1,0,0,0,0,0]},CORNER:{permutation:[4,0,2,3,7,5,6,1],orientation:[2,1,0,0,1,0,0,2]},CENTER:{permutation:[2,1,5,3,0,4],orientation:[0,0,0,1,2,2]}},b:{EDGE:{permutation:[8,5,2,1,9,7,6,3,4,0,10,11],orientation:[1,1,0,1,1,1,0,1,1,1,0,0]},CORNER:{permutation:[4,1,2,0,5,3,6,7],orientation:[1,0,0,2,2,1,0,0]},CENTER:{permutation:[3,0,2,5,4,1],orientation:[3,3,3,3,0,3]}},d:{EDGE:{permutation:[0,1,2,3,7,4,5,6,9,11,8,10],orientation:[0,0,0,0,0,0,0,0,1,1,1,1]},CORNER:{permutation:[0,1,2,3,5,6,7,4],orientation:[0,0,0,0,0,0,0,0]},CENTER:{permutation:[0,4,1,2,3,5],orientation:[0,0,0,0,0,1]}}}};","module.exports = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.0//EN\"\n       \"http://www.w3.org/TR/2001/REC-SVG-20050904/DTD/svg11.dtd\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 490 370\" preserveAspectRatio=\"xMidYMid meet\">\n  <title>3x3x3</title>\n  <defs>\n    <g id=\"sticker\">\n        <rect x=\"0\" y=\"0\" width=\"1\" height=\"1\" stroke=\"black\" stroke-width=\"0.04px\" />\n    </g>\n  </defs>\n\n<!--        0 1 2 3 4 5 6 7 8 9 10 11  -->\n<!--        | | | | | | | | | | | |<-  -->\n<!--    0 -       . . .                -->\n<!--    1 -       . . .                -->\n<!--    2 -       . . .                -->\n<!--    3 - . . . . . . . . . . . .    -->\n<!--    4 - . . . . . . . . . . . .    -->\n<!--    5 - . . . . . . . . . . . .    -->\n<!--    6 -       . . .                -->\n<!--    7 -       . . .                -->\n<!--    8 -       . . .                -->\n\n  <g id=\"puzzle\" transform=\"translate(5, 5) scale(40)\">\n    <!-- CORNER -->\n    <use id=\"CORNER-l0-o0\" xlink:href=\"#sticker\" transform=\"translate(5,  2)\" style=\"fill: white\"/>\n    <use id=\"CORNER-l0-o1\" xlink:href=\"#sticker\" transform=\"translate(6,  3)\" style=\"fill: red\"/>\n    <use id=\"CORNER-l0-o2\" xlink:href=\"#sticker\" transform=\"translate(5,  3)\" style=\"fill: limegreen\"/>\n\n    <use id=\"CORNER-l1-o0\" xlink:href=\"#sticker\" transform=\"translate(5,  0)\" style=\"fill: white\"/>\n    <use id=\"CORNER-l1-o1\" xlink:href=\"#sticker\" transform=\"translate(9,  3)\" style=\"fill: blue\"/>\n    <use id=\"CORNER-l1-o2\" xlink:href=\"#sticker\" transform=\"translate(8,  3)\" style=\"fill: red\"/>\n\n    <use id=\"CORNER-l2-o0\" xlink:href=\"#sticker\" transform=\"translate(3,  0)\" style=\"fill: white\"/>\n    <use id=\"CORNER-l2-o1\" xlink:href=\"#sticker\" transform=\"translate(0,  3)\" style=\"fill: orange\"/>\n    <use id=\"CORNER-l2-o2\" xlink:href=\"#sticker\" transform=\"translate(11, 3)\" style=\"fill: blue\"/>\n\n    <use id=\"CORNER-l3-o0\" xlink:href=\"#sticker\" transform=\"translate(3,  2)\" style=\"fill: white\"/>\n    <use id=\"CORNER-l3-o1\" xlink:href=\"#sticker\" transform=\"translate(3,  3)\" style=\"fill: limegreen\"/>\n    <use id=\"CORNER-l3-o2\" xlink:href=\"#sticker\" transform=\"translate(2,  3)\" style=\"fill: orange\"/>\n\n    <use id=\"CORNER-l4-o0\" xlink:href=\"#sticker\" transform=\"translate(5,  6)\" style=\"fill: yellow\"/>\n    <use id=\"CORNER-l4-o1\" xlink:href=\"#sticker\" transform=\"translate(5,  5)\" style=\"fill: limegreen\"/>\n    <use id=\"CORNER-l4-o2\" xlink:href=\"#sticker\" transform=\"translate(6,  5)\" style=\"fill: red\"/>\n\n    <use id=\"CORNER-l5-o0\" xlink:href=\"#sticker\" transform=\"translate(3,  6)\" style=\"fill: yellow\"/>\n    <use id=\"CORNER-l5-o1\" xlink:href=\"#sticker\" transform=\"translate(2,  5)\" style=\"fill: orange\"/>\n    <use id=\"CORNER-l5-o2\" xlink:href=\"#sticker\" transform=\"translate(3,  5)\" style=\"fill: limegreen\"/>\n\n    <use id=\"CORNER-l6-o0\" xlink:href=\"#sticker\" transform=\"translate(3,  8)\" style=\"fill: yellow\"/>\n    <use id=\"CORNER-l6-o1\" xlink:href=\"#sticker\" transform=\"translate(11, 5)\" style=\"fill: blue\"/>\n    <use id=\"CORNER-l6-o2\" xlink:href=\"#sticker\" transform=\"translate(0, 5)\"  style=\"fill: orange\"/>\n\n    <use id=\"CORNER-l7-o0\" xlink:href=\"#sticker\" transform=\"translate(5,  8)\" style=\"fill: yellow\"/>\n    <use id=\"CORNER-l7-o1\" xlink:href=\"#sticker\" transform=\"translate(8,  5)\" style=\"fill: red\"/>\n    <use id=\"CORNER-l7-o2\" xlink:href=\"#sticker\" transform=\"translate(9,  5)\" style=\"fill: blue\"/>\n\n    <!-- EDGE -->\n    <use id=\"EDGE-l0-o0\"  xlink:href=\"#sticker\" transform=\"translate(4,  2)\" style=\"fill: white\"/>\n    <use id=\"EDGE-l0-o1\"  xlink:href=\"#sticker\" transform=\"translate(4,  3)\" style=\"fill: limegreen\"/>\n\n    <use id=\"EDGE-l1-o0\"  xlink:href=\"#sticker\" transform=\"translate(5,  1)\" style=\"fill: white\"/>\n    <use id=\"EDGE-l1-o1\"  xlink:href=\"#sticker\" transform=\"translate(7,  3)\" style=\"fill: red\"/>\n\n    <use id=\"EDGE-l2-o0\"  xlink:href=\"#sticker\" transform=\"translate(4,  0)\" style=\"fill: white\"/>\n    <use id=\"EDGE-l2-o1\"  xlink:href=\"#sticker\" transform=\"translate(10, 3)\" style=\"fill: blue\"/>\n\n    <use id=\"EDGE-l3-o0\"  xlink:href=\"#sticker\" transform=\"translate(3,  1)\" style=\"fill: white\"/>\n    <use id=\"EDGE-l3-o1\"  xlink:href=\"#sticker\" transform=\"translate(1,  3)\" style=\"fill: orange\"/>\n\n    <use id=\"EDGE-l4-o0\"  xlink:href=\"#sticker\" transform=\"translate(4,  6)\" style=\"fill: yellow\"/>\n    <use id=\"EDGE-l4-o1\"  xlink:href=\"#sticker\" transform=\"translate(4,  5)\" style=\"fill: limegreen\"/>\n\n    <use id=\"EDGE-l5-o0\" xlink:href=\"#sticker\" transform=\"translate(5,  7)\" style=\"fill: yellow\"/>\n    <use id=\"EDGE-l5-o1\" xlink:href=\"#sticker\" transform=\"translate(7,  5)\" style=\"fill: red\"/>\n\n    <use id=\"EDGE-l6-o0\" xlink:href=\"#sticker\" transform=\"translate(4,  8)\" style=\"fill: yellow\"/>\n    <use id=\"EDGE-l6-o1\" xlink:href=\"#sticker\" transform=\"translate(10, 5)\" style=\"fill: blue\"/>\n\n    <use id=\"EDGE-l7-o0\"  xlink:href=\"#sticker\" transform=\"translate(3,  7)\" style=\"fill: yellow\"/>\n    <use id=\"EDGE-l7-o1\"  xlink:href=\"#sticker\" transform=\"translate(1,  5)\" style=\"fill: orange\"/>\n\n    <use id=\"EDGE-l8-o0\"  xlink:href=\"#sticker\" transform=\"translate(5,  4)\" style=\"fill: limegreen\"/>\n    <use id=\"EDGE-l8-o1\"  xlink:href=\"#sticker\" transform=\"translate(6,  4)\" style=\"fill: red\"/>\n\n    <use id=\"EDGE-l9-o0\"  xlink:href=\"#sticker\" transform=\"translate(3,  4)\" style=\"fill: limegreen\"/>\n    <use id=\"EDGE-l9-o1\"  xlink:href=\"#sticker\" transform=\"translate(2,  4)\" style=\"fill: orange\"/>\n\n    <use id=\"EDGE-l10-o0\" xlink:href=\"#sticker\" transform=\"translate(9,  4)\" style=\"fill: blue\"/>\n    <use id=\"EDGE-l10-o1\" xlink:href=\"#sticker\" transform=\"translate(8,  4)\" style=\"fill: red\"/>\n\n    <use id=\"EDGE-l11-o0\" xlink:href=\"#sticker\" transform=\"translate(11, 4)\" style=\"fill: blue\"/>\n    <use id=\"EDGE-l11-o1\" xlink:href=\"#sticker\" transform=\"translate(0,  4)\" style=\"fill: orange\"/>\n\n    <!-- CENTER -->\n    <!-- TODO: Allow the same sticker to be reused for multiple orientations -->\n    <use id=\"CENTER-l0-o0\" xlink:href=\"#sticker\" transform=\"translate(4,  1)\" style=\"fill: white\"/>\n    <use id=\"CENTER-l0-o1\" xlink:href=\"#sticker\" transform=\"translate(4,  1)\" style=\"fill: white\"/>\n    <use id=\"CENTER-l0-o2\" xlink:href=\"#sticker\" transform=\"translate(4,  1)\" style=\"fill: white\"/>\n    <use id=\"CENTER-l0-o3\" xlink:href=\"#sticker\" transform=\"translate(4,  1)\" style=\"fill: white\"/>\n\n    <use id=\"CENTER-l1-o0\" xlink:href=\"#sticker\" transform=\"translate(1,  4)\" style=\"fill: orange\"/>\n    <use id=\"CENTER-l1-o1\" xlink:href=\"#sticker\" transform=\"translate(1,  4)\" style=\"fill: orange\"/>\n    <use id=\"CENTER-l1-o2\" xlink:href=\"#sticker\" transform=\"translate(1,  4)\" style=\"fill: orange\"/>\n    <use id=\"CENTER-l1-o3\" xlink:href=\"#sticker\" transform=\"translate(1,  4)\" style=\"fill: orange\"/>\n\n    <use id=\"CENTER-l2-o0\" xlink:href=\"#sticker\" transform=\"translate(4,  4)\" style=\"fill: limegreen\"/>\n    <use id=\"CENTER-l2-o1\" xlink:href=\"#sticker\" transform=\"translate(4,  4)\" style=\"fill: limegreen\"/>\n    <use id=\"CENTER-l2-o2\" xlink:href=\"#sticker\" transform=\"translate(4,  4)\" style=\"fill: limegreen\"/>\n    <use id=\"CENTER-l2-o3\" xlink:href=\"#sticker\" transform=\"translate(4,  4)\" style=\"fill: limegreen\"/>\n\n    <use id=\"CENTER-l3-o0\" xlink:href=\"#sticker\" transform=\"translate(7,  4)\" style=\"fill: red\"/>\n    <use id=\"CENTER-l3-o1\" xlink:href=\"#sticker\" transform=\"translate(7,  4)\" style=\"fill: red\"/>\n    <use id=\"CENTER-l3-o2\" xlink:href=\"#sticker\" transform=\"translate(7,  4)\" style=\"fill: red\"/>\n    <use id=\"CENTER-l3-o3\" xlink:href=\"#sticker\" transform=\"translate(7,  4)\" style=\"fill: red\"/>\n\n    <use id=\"CENTER-l4-o0\" xlink:href=\"#sticker\" transform=\"translate(10, 4)\" style=\"fill: blue\"/>\n    <use id=\"CENTER-l4-o1\" xlink:href=\"#sticker\" transform=\"translate(10, 4)\" style=\"fill: blue\"/>\n    <use id=\"CENTER-l4-o2\" xlink:href=\"#sticker\" transform=\"translate(10, 4)\" style=\"fill: blue\"/>\n    <use id=\"CENTER-l4-o3\" xlink:href=\"#sticker\" transform=\"translate(10, 4)\" style=\"fill: blue\"/>\n\n    <use id=\"CENTER-l5-o0\" xlink:href=\"#sticker\" transform=\"translate(4,  7)\" style=\"fill: yellow\"/>\n    <use id=\"CENTER-l5-o1\" xlink:href=\"#sticker\" transform=\"translate(4,  7)\" style=\"fill: yellow\"/>\n    <use id=\"CENTER-l5-o2\" xlink:href=\"#sticker\" transform=\"translate(4,  7)\" style=\"fill: yellow\"/>\n    <use id=\"CENTER-l5-o3\" xlink:href=\"#sticker\" transform=\"translate(4,  7)\" style=\"fill: yellow\"/>\n  </g>\n\n</svg>\n`","module.exports={name:\"Pyraminx\",orbits:{CENTER:{numPieces:4,orientations:3},TIP:{numPieces:4,orientations:3},EDGE:{numPieces:6,orientations:2}},startPieces:{CENTER:{permutation:[0,1,2,3],orientation:[0,0,0,0]},TIP:{permutation:[0,1,2,3],orientation:[0,0,0,0]},EDGE:{permutation:[0,1,2,3,4,5],orientation:[0,0,0,0,0,0]}},moves:{U:{CENTER:{permutation:[0,1,2,3],orientation:[1,0,0,0]},TIP:{permutation:[0,1,2,3],orientation:[1,0,0,0]},EDGE:{permutation:[1,2,0,3,4,5],orientation:[1,0,1,0,0,0]}},L:{CENTER:{permutation:[0,1,2,3],orientation:[0,1,0,0]},TIP:{permutation:[0,1,2,3],orientation:[0,1,0,0]},EDGE:{permutation:[5,1,2,0,4,3],orientation:[1,0,0,0,0,1]}},R:{CENTER:{permutation:[0,1,2,3],orientation:[0,0,1,0]},TIP:{permutation:[0,1,2,3],orientation:[0,0,1,0]},EDGE:{permutation:[0,3,2,4,1,5],orientation:[0,0,0,1,1,0]}},B:{CENTER:{permutation:[0,1,2,3],orientation:[0,0,0,1]},TIP:{permutation:[0,1,2,3],orientation:[0,0,0,1]},EDGE:{permutation:[0,1,4,3,5,2],orientation:[0,0,0,0,1,1]}},u:{CENTER:{permutation:[0,1,2,3],orientation:[0,0,0,0]},TIP:{permutation:[0,1,2,3],orientation:[1,0,0,0]},EDGE:{permutation:[0,1,2,3,4,5],orientation:[0,0,0,0,0,0]}},l:{CENTER:{permutation:[0,1,2,3],orientation:[0,0,0,0]},TIP:{permutation:[0,1,2,3],orientation:[0,1,0,0]},EDGE:{permutation:[0,1,2,3,4,5],orientation:[0,0,0,0,0,0]}},r:{CENTER:{permutation:[0,1,2,3],orientation:[0,0,0,0]},TIP:{permutation:[0,1,2,3],orientation:[0,0,1,0]},EDGE:{permutation:[0,1,2,3,4,5],orientation:[0,0,0,0,0,0]}},b:{CENTER:{permutation:[0,1,2,3],orientation:[0,0,0,0]},TIP:{permutation:[0,1,2,3],orientation:[0,0,0,1]},EDGE:{permutation:[0,1,2,3,4,5],orientation:[0,0,0,0,0,0]}}}};","module.exports = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.0//EN\"\n       \"http://www.w3.org/TR/2001/REC-SVG-20050904/DTD/svg11.dtd\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 490 420.69219392\" preserveAspectRatio=\"xMidYMid meet\">\n  <defs>\n  </defs>\n  <title>2x2x2</title>\n  <defs>\n    <g id=\"stickerA\" transform=\"scale(1, 0.577350269)\">\n      <path\n         d=\"m 0,1.732050808 1,-1.732050808 1,1.732050808 z\"\n         stroke=\"black\" stroke-width=\"0.04px\" stroke-linecap=\"butt\" stroke-linejoin=\"round\"\n      />\n    </g>\n    <g id=\"stickerV\" transform=\"scale(1, 0.577350269)\">\n      <path\n         d=\"m 0,0 1,1.732050808 1,-1.732050808 z\"\n         stroke=\"black\" stroke-width=\"0.04px\" stroke-linecap=\"butt\" stroke-linejoin=\"round\"\n      />\n    </g>\n  </defs>\n\n<!--        0 1 2 3 4 5 6 7 8 9 10   -->\n<!--        | | | | | | | | | | |    -->\n<!--    0 - L L L L L F R R R R R    -->\n<!--    1 -   L L L F F F R R R      -->\n<!--    2 -     L F F F F F R        -->\n<!--    3 -       D D D D D          -->\n<!--    4 -         D D D            -->\n<!--    5 -           D              -->\n\n  <g id=\"puzzle\" transform=\"translate(5, 5) scale(40, 69.28203232)\">\n    <!-- CENTER -->\n    <use id=\"CENTER-l0-o0\" xlink:href=\"#stickerV\" transform=\"translate(5, 1)\" style=\"fill: limegreen\"/>\n    <use id=\"CENTER-l0-o1\" xlink:href=\"#stickerA\" transform=\"translate(3, 0)\" style=\"fill: red\"/>\n    <use id=\"CENTER-l0-o2\" xlink:href=\"#stickerA\" transform=\"translate(7, 0)\" style=\"fill: blue\"/>\n\n    <use id=\"CENTER-l1-o0\" xlink:href=\"#stickerV\" transform=\"translate(4, 2)\" style=\"fill: limegreen\"/>\n    <use id=\"CENTER-l1-o1\" xlink:href=\"#stickerA\" transform=\"translate(4, 3)\" style=\"fill: yellow\"/>\n    <use id=\"CENTER-l1-o2\" xlink:href=\"#stickerA\" transform=\"translate(2, 1)\" style=\"fill: red\"/>\n\n    <use id=\"CENTER-l2-o0\" xlink:href=\"#stickerV\" transform=\"translate(6, 2)\" style=\"fill: limegreen\"/>\n    <use id=\"CENTER-l2-o1\" xlink:href=\"#stickerA\" transform=\"translate(8, 1)\" style=\"fill: blue\"/>\n    <use id=\"CENTER-l2-o2\" xlink:href=\"#stickerA\" transform=\"translate(6, 3)\" style=\"fill: yellow\"/>\n\n    <use id=\"CENTER-l3-o0\" xlink:href=\"#stickerA\" transform=\"translate(9, 0)\" style=\"fill: blue\"/>\n    <use id=\"CENTER-l3-o1\" xlink:href=\"#stickerA\" transform=\"translate(1, 0)\" style=\"fill: red\"/>\n    <use id=\"CENTER-l3-o2\" xlink:href=\"#stickerA\" transform=\"translate(5, 4)\" style=\"fill: yellow\"/>\n\n    <!-- TIP -->\n    <use id=\"TIP-l0-o0\" xlink:href=\"#stickerA\" transform=\"translate(5, 0)\" style=\"fill: limegreen\"/>\n    <use id=\"TIP-l0-o1\" xlink:href=\"#stickerV\" transform=\"translate(4, 0)\" style=\"fill: red\"/>\n    <use id=\"TIP-l0-o2\" xlink:href=\"#stickerV\" transform=\"translate(6, 0)\" style=\"fill: blue\"/>\n\n    <use id=\"TIP-l1-o0\" xlink:href=\"#stickerA\" transform=\"translate(3, 2)\" style=\"fill: limegreen\"/>\n    <use id=\"TIP-l1-o1\" xlink:href=\"#stickerV\" transform=\"translate(3, 3)\" style=\"fill: yellow\"/>\n    <use id=\"TIP-l1-o2\" xlink:href=\"#stickerV\" transform=\"translate(2, 2)\" style=\"fill: red\"/>\n\n    <use id=\"TIP-l2-o0\" xlink:href=\"#stickerV\" transform=\"translate(8, 2)\" style=\"fill: blue\"/>\n    <use id=\"TIP-l2-o1\" xlink:href=\"#stickerV\" transform=\"translate(7, 3)\" style=\"fill: yellow\"/>\n    <use id=\"TIP-l2-o2\" xlink:href=\"#stickerA\" transform=\"translate(7, 2)\" style=\"fill: limegreen\"/>\n\n    <use id=\"TIP-l3-o0\" xlink:href=\"#stickerV\" transform=\"translate(10,0)\" style=\"fill: blue\"/>\n    <use id=\"TIP-l3-o1\" xlink:href=\"#stickerV\" transform=\"translate(0, 0)\" style=\"fill: red\"/>\n    <use id=\"TIP-l3-o2\" xlink:href=\"#stickerV\" transform=\"translate(5, 5)\" style=\"fill: yellow\"/>\n\n    <!-- EDGE -->\n    <use id=\"EDGE-l0-o0\" xlink:href=\"#stickerA\" transform=\"translate(4, 1)\" style=\"fill: limegreen\"/>\n    <use id=\"EDGE-l0-o1\" xlink:href=\"#stickerV\" transform=\"translate(3, 1)\" style=\"fill: red\"/>\n\n    <use id=\"EDGE-l1-o0\" xlink:href=\"#stickerA\" transform=\"translate(6, 1)\" style=\"fill: limegreen\"/>\n    <use id=\"EDGE-l1-o1\" xlink:href=\"#stickerV\" transform=\"translate(7, 1)\" style=\"fill: blue\"/>\n\n    <use id=\"EDGE-l2-o0\" xlink:href=\"#stickerV\" transform=\"translate(8, 0)\" style=\"fill: blue\"/>\n    <use id=\"EDGE-l2-o1\" xlink:href=\"#stickerV\" transform=\"translate(2, 0)\" style=\"fill: red\"/>\n\n    <use id=\"EDGE-l3-o0\" xlink:href=\"#stickerV\" transform=\"translate(5, 3)\" style=\"fill: yellow\"/>\n    <use id=\"EDGE-l3-o1\" xlink:href=\"#stickerA\" transform=\"translate(5, 2)\" style=\"fill: limegreen\"/>\n\n    <use id=\"EDGE-l4-o0\" xlink:href=\"#stickerV\" transform=\"translate(6, 4)\" style=\"fill: yellow\"/>\n    <use id=\"EDGE-l4-o1\" xlink:href=\"#stickerV\" transform=\"translate(9, 1)\" style=\"fill: blue\"/>\n\n    <use id=\"EDGE-l5-o0\" xlink:href=\"#stickerV\" transform=\"translate(4, 4)\" style=\"fill: yellow\"/>\n    <use id=\"EDGE-l5-o1\" xlink:href=\"#stickerV\" transform=\"translate(1, 1)\" style=\"fill: red\"/>\n  </g>\n\n</svg>\n`","module.exports={name:\"Square-1\",orbits:{WEDGE:{numPieces:24,orientations:9},EQUATOR:{numPieces:2,orientations:6}},startPieces:{WEDGE:{permutation:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],orientation:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},EQUATOR:{permutation:[0,1],orientation:[0,0]}},moves:{U:{WEDGE:{permutation:[11,0,1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23],orientation:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},EQUATOR:{permutation:[0,1],orientation:[0,0]}},D:{WEDGE:{permutation:[0,1,2,3,4,5,6,7,8,9,10,11,23,12,13,14,15,16,17,18,19,20,21,22],orientation:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},EQUATOR:{permutation:[0,1],orientation:[0,0]}},SLICE:{WEDGE:{permutation:[0,1,2,3,4,5,12,13,14,15,16,17,6,7,8,9,10,11,18,19,20,21,22,23],orientation:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},EQUATOR:{permutation:[0,1],orientation:[0,3]}}}};","module.exports = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<svg width=\"360px\" height=\"552px\" viewBox=\"0 0 360 552\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n    <!-- Generator: Sketch 59.1 (86144) - https://sketch.com -->\n    <title>sq1-fancy</title>\n    <desc>Created with Sketch.</desc>\n    <!-- stroke=\"none\" -->\n    <g id=\"sq1-fancy\" stroke=\"#888\" stroke-width=\"0.25\" fill=\"none\" fill-rule=\"evenodd\">\n        <g id=\"EQUATOR\" transform=\"translate(24.000000, 264.000000)\">\n            <rect id=\"EQUATOR-l1-o3\" style=\"fill: red\" x=\"168\" y=\"0\" width=\"24\" height=\"24\"></rect>\n            <rect id=\"EQUATOR-l1-o4\" style=\"fill: red\" x=\"192\" y=\"0\" width=\"24\" height=\"24\"></rect>\n            <rect id=\"EQUATOR-l1-o5\" style=\"fill: limegreen\" x=\"216\" y=\"0\" width=\"24\" height=\"24\"></rect>\n            <rect id=\"EQUATOR-l1-o2\" style=\"fill: limegreen\" x=\"240\" y=\"0\" width=\"24\" height=\"24\"></rect>\n            <rect id=\"EQUATOR-l1-o1\" style=\"fill: limegreen\" x=\"264\" y=\"0\" width=\"24\" height=\"24\"></rect>\n            <rect id=\"EQUATOR-l1-o0\" style=\"fill: orange\" x=\"288\" y=\"0\" width=\"24\" height=\"24\"></rect>\n            <rect id=\"EQUATOR-l0-o3\" style=\"fill: orange\" x=\"0\" y=\"0\" width=\"24\" height=\"24\"></rect>\n            <rect id=\"EQUATOR-l0-o4\" style=\"fill: orange\" x=\"24\" y=\"0\" width=\"24\" height=\"24\"></rect>\n            <rect id=\"EQUATOR-l0-o5\" style=\"fill: limegreen\" x=\"48\" y=\"0\" width=\"24\" height=\"24\"></rect>\n            <rect id=\"EQUATOR-l0-o2\" style=\"fill: limegreen\" x=\"72\" y=\"0\" width=\"24\" height=\"24\"></rect>\n            <rect id=\"EQUATOR-l0-o1\" style=\"fill: limegreen\" x=\"96\" y=\"0\" width=\"24\" height=\"24\"></rect>\n            <rect id=\"EQUATOR-l0-o0\" style=\"fill: red\" x=\"120\" y=\"0\" width=\"24\" height=\"24\"></rect>\n        </g>\n        <g id=\"BOTTOM\" transform=\"translate(41.000000, 257.000000)\" stroke-linejoin=\"round\">\n            <g id=\"WEDGE-23\" transform=\"translate(130.000000, 88.588457) rotate(120.000000) translate(-130.000000, -88.588457) translate(82.000000, 22.588457)\">\n                <polygon id=\"WEDGE-l23-o8\" style=\"fill: #D8D8D8\" points=\"25.723 70.277 40.574 95.999 -2.27373675e-13 96\"></polygon>\n                <polygon id=\"WEDGE-l23-o7\" style=\"fill: red\" points=\"70.2768775 96 60.8615612 131.138439 40.5741225 95.9988775\"></polygon>\n                <polygon id=\"WEDGE-l23-o6\" style=\"fill: red\" points=\"70.2768775 96 40.574 95.999 25.7231225 70.2768775\"></polygon>\n                <polygon id=\"WEDGE-l23-o5\" style=\"fill: red\" points=\"48.0001225 47.9995 68.287 47.9995 78.4307806 65.5692194\"></polygon>\n                <polygon id=\"WEDGE-l23-o4\" style=\"fill: red\" points=\"60.8615 35.1385 68.287 47.9995 48 48\"></polygon>\n                <polygon id=\"WEDGE-l23-o3\" style=\"fill: white\" points=\"83.1384388 48 78.4307806 65.5692194 68.2870612 47.9994388\"></polygon>\n                <polygon id=\"WEDGE-l23-o2\" style=\"fill: white\" points=\"83.1384388 48 68.287 47.9995 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l23-o1\" style=\"fill: white\" points=\"96 0 83.1384388 48 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l23-o0\" style=\"fill: red\" points=\"70.2768775 96 25.7231225 70.2768775 48.0001225 47.9995 78.4307806 65.5692194\"></polygon>\n            </g>\n            <g id=\"WEDGE-22\" transform=\"translate(97.157677, 115.157677) rotate(90.000000) translate(-97.157677, -115.157677) translate(49.157677, 49.157677)\">\n                <polygon id=\"WEDGE-l22-o8\" style=\"fill: blue\" points=\"25.723 70.277 40.574 95.999 -2.27373675e-13 96\"></polygon>\n                <polygon id=\"WEDGE-l22-o7\" style=\"fill: #D8D8D8\" points=\"70.2768775 96 60.8615612 131.138439 40.5741225 95.9988775\"></polygon>\n                <polygon id=\"WEDGE-l22-o6\" style=\"fill: blue\" points=\"70.2768775 96 40.574 95.999 25.7231225 70.2768775\"></polygon>\n                <polygon id=\"WEDGE-l22-o5\" style=\"fill: blue\" points=\"48.0001225 47.9995 68.287 47.9995 78.4307806 65.5692194\"></polygon>\n                <polygon id=\"WEDGE-l22-o4\" style=\"fill: white\" points=\"60.8615 35.1385 68.287 47.9995 48 48\"></polygon>\n                <polygon id=\"WEDGE-l22-o3\" style=\"fill: blue\" points=\"83.1384388 48 78.4307806 65.5692194 68.2870612 47.9994388\"></polygon>\n                <polygon id=\"WEDGE-l22-o2\" style=\"fill: white\" points=\"83.1384388 48 68.287 47.9995 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l22-o1\" style=\"fill: white\" points=\"96 0 83.1384388 48 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l22-o0\" style=\"fill: blue\" points=\"70.2768775 96 25.7231225 70.2768775 48.0001225 47.9995 78.4307806 65.5692194\"></polygon>\n            </g>\n            <g id=\"WEDGE-21\" transform=\"translate(82.000000, 154.588457) rotate(60.000000) translate(-82.000000, -154.588457) translate(34.000000, 88.588457)\">\n                <polygon id=\"WEDGE-l21-o8\" style=\"fill: #D8D8D8\" points=\"25.723 70.277 40.574 95.999 -2.27373675e-13 96\"></polygon>\n                <polygon id=\"WEDGE-l21-o7\" style=\"fill: #D8D8D8\" points=\"70.2768775 96 60.8615612 131.138439 40.5741225 95.9988775\"></polygon>\n                <polygon id=\"WEDGE-l21-o6\" style=\"fill: #D8D8D8\" points=\"70.2768775 96 40.574 95.999 25.7231225 70.2768775\"></polygon>\n                <polygon id=\"WEDGE-l21-o5\" style=\"fill: blue\" points=\"48.0001225 47.9995 68.287 47.9995 78.4307806 65.5692194\"></polygon>\n                <polygon id=\"WEDGE-l21-o4\" style=\"fill: blue\" points=\"60.8615 35.1385 68.287 47.9995 48 48\"></polygon>\n                <polygon id=\"WEDGE-l21-o3\" style=\"fill: blue\" points=\"83.1384388 48 78.4307806 65.5692194 68.2870612 47.9994388\"></polygon>\n                <polygon id=\"WEDGE-l21-o2\" style=\"fill: blue\" points=\"83.1384388 48 68.287 47.9995 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l21-o1\" style=\"fill: white\" points=\"96 0 83.1384388 48 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l21-o0\" style=\"fill: blue\" points=\"70.2768775 96 25.7231225 70.2768775 48.0001225 47.9995 78.4307806 65.5692194\"></polygon>\n            </g>\n            <g id=\"WEDGE-20\" transform=\"translate(88.588457, 196.315353) rotate(30.000000) translate(-88.588457, -196.315353) translate(40.588457, 130.315353)\">\n                <polygon id=\"WEDGE-l20-o8\" style=\"fill: #D8D8D8\" points=\"25.723 70.277 40.574 95.999 -2.27373675e-13 96\"></polygon>\n                <polygon id=\"WEDGE-l20-o7\" style=\"fill: blue\" points=\"70.2768775 96 60.8615612 131.138439 40.5741225 95.9988775\"></polygon>\n                <polygon id=\"WEDGE-l20-o6\" style=\"fill: blue\" points=\"70.2768775 96 40.574 95.999 25.7231225 70.2768775\"></polygon>\n                <polygon id=\"WEDGE-l20-o5\" style=\"fill: blue\" points=\"48.0001225 47.9995 68.287 47.9995 78.4307806 65.5692194\"></polygon>\n                <polygon id=\"WEDGE-l20-o4\" style=\"fill: blue\" points=\"60.8615 35.1385 68.287 47.9995 48 48\"></polygon>\n                <polygon id=\"WEDGE-l20-o3\" style=\"fill: white\" points=\"83.1384388 48 78.4307806 65.5692194 68.2870612 47.9994388\"></polygon>\n                <polygon id=\"WEDGE-l20-o2\" style=\"fill: white\" points=\"83.1384388 48 68.287 47.9995 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l20-o1\" style=\"fill: white\" points=\"96 0 83.1384388 48 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l20-o0\" style=\"fill: blue\" points=\"70.2768775 96 25.7231225 70.2768775 48.0001225 47.9995 78.4307806 65.5692194\"></polygon>\n            </g>\n            <g id=\"WEDGE-19\" transform=\"translate(67.157677, 163.157677)\">\n                <polygon id=\"WEDGE-l19-o8\" style=\"fill: orange\" points=\"25.723 70.277 40.574 95.999 -2.27373675e-13 96\"></polygon>\n                <polygon id=\"WEDGE-l19-o7\" style=\"fill: #D8D8D8\" points=\"70.2768775 96 60.8615612 131.138439 40.5741225 95.9988775\"></polygon>\n                <polygon id=\"WEDGE-l19-o6\" style=\"fill: orange\" points=\"70.2768775 96 40.574 95.999 25.7231225 70.2768775\"></polygon>\n                <polygon id=\"WEDGE-l19-o5\" style=\"fill: orange\" points=\"48.0001225 47.9995 68.287 47.9995 78.4307806 65.5692194\"></polygon>\n                <polygon id=\"WEDGE-l19-o4\" style=\"fill: white\" points=\"60.8615 35.1385 68.287 47.9995 48 48\"></polygon>\n                <polygon id=\"WEDGE-l19-o3\" style=\"fill: orange\" points=\"83.1384388 48 78.4307806 65.5692194 68.2870612 47.9994388\"></polygon>\n                <polygon id=\"WEDGE-l19-o2\" style=\"fill: white\" points=\"83.1384388 48 68.287 47.9995 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l19-o1\" style=\"fill: white\" points=\"96 0 83.1384388 48 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l19-o0\" style=\"fill: orange\" points=\"70.2768775 96 25.7231225 70.2768775 48.0001225 47.9995 78.4307806 65.5692194\"></polygon>\n            </g>\n            <g id=\"WEDGE-18\" transform=\"translate(154.588457, 244.315353) scale(-1, -1) rotate(150.000000) translate(-154.588457, -244.315353) translate(106.588457, 178.315353)\">\n                <polygon id=\"WEDGE-l18-o8\" style=\"fill: #D8D8D8\" points=\"25.723 70.277 40.574 95.999 -2.27373675e-13 96\"></polygon>\n                <polygon id=\"WEDGE-l18-o7\" style=\"fill: #D8D8D8\" points=\"70.2768775 96 60.8615612 131.138439 40.5741225 95.9988775\"></polygon>\n                <polygon id=\"WEDGE-l18-o6\" style=\"fill: #D8D8D8\" points=\"70.2768775 96 40.574 95.999 25.7231225 70.2768775\"></polygon>\n                <polygon id=\"WEDGE-l18-o5\" style=\"fill: orange\" points=\"48.0001225 47.9995 68.287 47.9995 78.4307806 65.5692194\"></polygon>\n                <polygon id=\"WEDGE-l18-o4\" style=\"fill: orange\" points=\"60.8615 35.1385 68.287 47.9995 48 48\"></polygon>\n                <polygon id=\"WEDGE-l18-o3\" style=\"fill: orange\" points=\"83.1384388 48 78.4307806 65.5692194 68.2870612 47.9994388\"></polygon>\n                <polygon id=\"WEDGE-l18-o2\" style=\"fill: orange\" points=\"83.1384388 48 68.287 47.9995 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l18-o1\" style=\"fill: white\" points=\"96 0 83.1384388 48 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l18-o0\" style=\"fill: orange\" points=\"70.2768775 96 25.7231225 70.2768775 48.0001225 47.9995 78.4307806 65.5692194\"></polygon>\n            </g>\n            <g id=\"WEDGE-17\" transform=\"translate(196.315353, 237.726896) scale(-1, -1) rotate(120.000000) translate(-196.315353, -237.726896) translate(148.315353, 171.726896)\">\n                <polygon id=\"WEDGE-l17-o8\" style=\"fill: #D8D8D8\" points=\"25.723 70.277 40.574 95.999 -2.27373675e-13 96\"></polygon>\n                <polygon id=\"WEDGE-l17-o7\" style=\"fill: orange\" points=\"70.2768775 96 60.8615612 131.138439 40.5741225 95.9988775\"></polygon>\n                <polygon id=\"WEDGE-l17-o6\" style=\"fill: orange\" points=\"70.2768775 96 40.574 95.999 25.7231225 70.2768775\"></polygon>\n                <polygon id=\"WEDGE-l17-o5\" style=\"fill: orange\" points=\"48.0001225 47.9995 68.287 47.9995 78.4307806 65.5692194\"></polygon>\n                <polygon id=\"WEDGE-l17-o4\" style=\"fill: orange\" points=\"60.8615 35.1385 68.287 47.9995 48 48\"></polygon>\n                <polygon id=\"WEDGE-l17-o3\" style=\"fill: white\" points=\"83.1384388 48 78.4307806 65.5692194 68.2870612 47.9994388\"></polygon>\n                <polygon id=\"WEDGE-l17-o2\" style=\"fill: white\" points=\"83.1384388 48 68.287 47.9995 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l17-o1\" style=\"fill: white\" points=\"96 0 83.1384388 48 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l17-o0\" style=\"fill: orange\" points=\"70.2768775 96 25.7231225 70.2768775 48.0001225 47.9995 78.4307806 65.5692194\"></polygon>\n            </g>\n            <g id=\"WEDGE-16\" transform=\"translate(229.157677, 211.157677) scale(-1, -1) rotate(90.000000) translate(-229.157677, -211.157677) translate(181.157677, 145.157677)\">\n                <polygon id=\"WEDGE-l16-o8\" style=\"fill: limegreen\" points=\"25.723 70.277 40.574 95.999 -2.27373675e-13 96\"></polygon>\n                <polygon id=\"WEDGE-l16-o7\" style=\"fill: #D8D8D8\" points=\"70.2768775 96 60.8615612 131.138439 40.5741225 95.9988775\"></polygon>\n                <polygon id=\"WEDGE-l16-o6\" style=\"fill: limegreen\" points=\"70.2768775 96 40.574 95.999 25.7231225 70.2768775\"></polygon>\n                <polygon id=\"WEDGE-l16-o5\" style=\"fill: limegreen\" points=\"48.0001225 47.9995 68.287 47.9995 78.4307806 65.5692194\"></polygon>\n                <polygon id=\"WEDGE-l16-o4\" style=\"fill: white\" points=\"60.8615 35.1385 68.287 47.9995 48 48\"></polygon>\n                <polygon id=\"WEDGE-l16-o3\" style=\"fill: limegreen\" points=\"83.1384388 48 78.4307806 65.5692194 68.2870612 47.9994388\"></polygon>\n                <polygon id=\"WEDGE-l16-o2\" style=\"fill: white\" points=\"83.1384388 48 68.287 47.9995 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l16-o1\" style=\"fill: white\" points=\"96 0 83.1384388 48 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l16-o0\" style=\"fill: limegreen\" points=\"70.2768775 96 25.7231225 70.2768775 48.0001225 47.9995 78.4307806 65.5692194\"></polygon>\n            </g>\n            <g id=\"WEDGE-15\" transform=\"translate(244.315353, 171.726896) scale(-1, -1) rotate(60.000000) translate(-244.315353, -171.726896) translate(196.315353, 105.726896)\">\n                <polygon id=\"WEDGE-l15-o8\" style=\"fill: #D8D8D8\" points=\"25.723 70.277 40.574 95.999 -2.27373675e-13 96\"></polygon>\n                <polygon id=\"WEDGE-l15-o7\" style=\"fill: #D8D8D8\" points=\"70.2768775 96 60.8615612 131.138439 40.5741225 95.9988775\"></polygon>\n                <polygon id=\"WEDGE-l15-o6\" style=\"fill: #D8D8D8\" points=\"70.2768775 96 40.574 95.999 25.7231225 70.2768775\"></polygon>\n                <polygon id=\"WEDGE-l15-o5\" style=\"fill: limegreen\" points=\"48.0001225 47.9995 68.287 47.9995 78.4307806 65.5692194\"></polygon>\n                <polygon id=\"WEDGE-l15-o4\" style=\"fill: limegreen\" points=\"60.8615 35.1385 68.287 47.9995 48 48\"></polygon>\n                <polygon id=\"WEDGE-l15-o3\" style=\"fill: limegreen\" points=\"83.1384388 48 78.4307806 65.5692194 68.2870612 47.9994388\"></polygon>\n                <polygon id=\"WEDGE-l15-o2\" style=\"fill: limegreen\" points=\"83.1384388 48 68.287 47.9995 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l15-o1\" style=\"fill: white\" points=\"96 0 83.1384388 48 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l15-o0\" style=\"fill: limegreen\" points=\"70.2768775 96 25.7231225 70.2768775 48.0001225 47.9995 78.4307806 65.5692194\"></polygon>\n            </g>\n            <g id=\"WEDGE-14\" transform=\"translate(237.726896, 130.000000) scale(-1, -1) rotate(30.000000) translate(-237.726896, -130.000000) translate(189.726896, 64.000000)\">\n                <polygon id=\"WEDGE-l14-o8\" style=\"fill: #D8D8D8\" points=\"25.723 70.277 40.574 95.999 -2.27373675e-13 96\"></polygon>\n                <polygon id=\"WEDGE-l14-o7\" style=\"fill: limegreen\" points=\"70.2768775 96 60.8615612 131.138439 40.5741225 95.9988775\"></polygon>\n                <polygon id=\"WEDGE-l14-o6\" style=\"fill: limegreen\" points=\"70.2768775 96 40.574 95.999 25.7231225 70.2768775\"></polygon>\n                <polygon id=\"WEDGE-l14-o5\" style=\"fill: limegreen\" points=\"48.0001225 47.9995 68.287 47.9995 78.4307806 65.5692194\"></polygon>\n                <polygon id=\"WEDGE-l14-o4\" style=\"fill: limegreen\" points=\"60.8615 35.1385 68.287 47.9995 48 48\"></polygon>\n                <polygon id=\"WEDGE-l14-o3\" style=\"fill: white\" points=\"83.1384388 48 78.4307806 65.5692194 68.2870612 47.9994388\"></polygon>\n                <polygon id=\"WEDGE-l14-o2\" style=\"fill: white\" points=\"83.1384388 48 68.287 47.9995 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l14-o1\" style=\"fill: white\" points=\"96 0 83.1384388 48 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l14-o0\" style=\"fill: limegreen\" points=\"70.2768775 96 25.7231225 70.2768775 48.0001225 47.9995 78.4307806 65.5692194\"></polygon>\n            </g>\n            <g id=\"WEDGE-13\" transform=\"translate(211.157677, 97.157677) scale(-1, -1) translate(-211.157677, -97.157677) translate(163.157677, 31.157677)\">\n                <polygon id=\"WEDGE-l13-o8\" style=\"fill: red\" points=\"25.723 70.277 40.574 95.999 -2.27373675e-13 96\"></polygon>\n                <polygon id=\"WEDGE-l13-o7\" style=\"fill: #D8D8D8\" points=\"70.2768775 96 60.8615612 131.138439 40.5741225 95.9988775\"></polygon>\n                <polygon id=\"WEDGE-l13-o6\" style=\"fill: red\" points=\"70.2768775 96 40.574 95.999 25.7231225 70.2768775\"></polygon>\n                <polygon id=\"WEDGE-l13-o5\" style=\"fill: red\" points=\"48.0001225 47.9995 68.287 47.9995 78.4307806 65.5692194\"></polygon>\n                <polygon id=\"WEDGE-l13-o4\" style=\"fill: white\" points=\"60.8615 35.1385 68.287 47.9995 48 48\"></polygon>\n                <polygon id=\"WEDGE-l13-o3\" style=\"fill: red\" points=\"83.1384388 48 78.4307806 65.5692194 68.2870612 47.9994388\"></polygon>\n                <polygon id=\"WEDGE-l13-o2\" style=\"fill: white\" points=\"83.1384388 48 68.287 47.9995 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l13-o1\" style=\"fill: white\" points=\"96 0 83.1384388 48 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l13-o0\" style=\"fill: red\" points=\"70.2768775 96 25.7231225 70.2768775 48.0001225 47.9995 78.4307806 65.5692194\"></polygon>\n            </g>\n            <g id=\"WEDGE-12\" transform=\"translate(171.726896, 82.000000) rotate(150.000000) translate(-171.726896, -82.000000) translate(123.726896, 16.000000)\">\n                <polygon id=\"WEDGE-l12-o8\" style=\"fill: #D8D8D8\" points=\"25.723 70.277 40.574 95.999 -2.27373675e-13 96\"></polygon>\n                <polygon id=\"WEDGE-l12-o7\" style=\"fill: #D8D8D8\" points=\"70.2768775 96 60.8615612 131.138439 40.5741225 95.9988775\"></polygon>\n                <polygon id=\"WEDGE-l12-o6\" style=\"fill: #D8D8D8\" points=\"70.2768775 96 40.574 95.999 25.7231225 70.2768775\"></polygon>\n                <polygon id=\"WEDGE-l12-o5\" style=\"fill: red\" points=\"48.0001225 47.9995 68.287 47.9995 78.4307806 65.5692194\"></polygon>\n                <polygon id=\"WEDGE-l12-o4\" style=\"fill: red\" points=\"60.8615 35.1385 68.287 47.9995 48 48\"></polygon>\n                <polygon id=\"WEDGE-l12-o3\" style=\"fill: red\" points=\"83.1384388 48 78.4307806 65.5692194 68.2870612 47.9994388\"></polygon>\n                <polygon id=\"WEDGE-l12-o2\" style=\"fill: red\" points=\"83.1384388 48 68.287 47.9995 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l12-o1\" style=\"fill: white\" points=\"96 0 83.1384388 48 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l12-o0\" style=\"fill: red\" points=\"70.2768775 96 25.7231225 70.2768775 48.0001225 47.9995 78.4307806 65.5692194\"></polygon>\n            </g>\n        </g>\n        <g id=\"TOP\" transform=\"translate(41.000000, -31.000000)\" stroke-linejoin=\"round\">\n            <g id=\"WEDGE-11\" transform=\"translate(154.588457, 244.315353) scale(-1, -1) rotate(150.000000) translate(-154.588457, -244.315353) translate(106.588457, 178.315353)\">\n                <polygon id=\"WEDGE-l11-o8\" style=\"fill: #D8D8D8\" points=\"25.723 70.277 40.574 95.999 -2.27373675e-13 96\"></polygon>\n                <polygon id=\"WEDGE-l11-o7\" style=\"fill: #D8D8D8\" points=\"70.2768775 96 60.8615612 131.138439 40.5741225 95.9988775\"></polygon>\n                <polygon id=\"WEDGE-l11-o6\" style=\"fill: #D8D8D8\" points=\"70.2768775 96 40.574 95.999 25.7231225 70.2768775\"></polygon>\n                <polygon id=\"WEDGE-l11-o5\" style=\"fill: red\" points=\"48.0001225 47.9995 68.287 47.9995 78.4307806 65.5692194\"></polygon>\n                <polygon id=\"WEDGE-l11-o4\" style=\"fill: red\" points=\"60.8615 35.1385 68.287 47.9995 48 48\"></polygon>\n                <polygon id=\"WEDGE-l11-o3\" style=\"fill: red\" points=\"83.1384388 48 78.4307806 65.5692194 68.2870612 47.9994388\"></polygon>\n                <polygon id=\"WEDGE-l11-o2\" style=\"fill: red\" points=\"83.1384388 48 68.287 47.9995 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l11-o1\" style=\"fill: yellow\" points=\"96 0 83.1384388 48 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l11-o0\" style=\"fill: red\" points=\"70.2768775 96 25.7231225 70.2768775 48.0001225 47.9995 78.4307806 65.5692194\"></polygon>\n            </g>\n            <g id=\"WEDGE-10\" transform=\"translate(196.315353, 237.726896) scale(-1, -1) rotate(120.000000) translate(-196.315353, -237.726896) translate(148.315353, 171.726896)\">\n                <polygon id=\"WEDGE-l10-o8\" style=\"fill: #D8D8D8\" points=\"25.723 70.277 40.574 95.999 -2.27373675e-13 96\"></polygon>\n                <polygon id=\"WEDGE-l10-o7\" style=\"fill: red\" points=\"70.2768775 96 60.8615612 131.138439 40.5741225 95.9988775\"></polygon>\n                <polygon id=\"WEDGE-l10-o6\" style=\"fill: red\" points=\"70.2768775 96 40.574 95.999 25.7231225 70.2768775\"></polygon>\n                <polygon id=\"WEDGE-l10-o5\" style=\"fill: red\" points=\"48.0001225 47.9995 68.287 47.9995 78.4307806 65.5692194\"></polygon>\n                <polygon id=\"WEDGE-l10-o4\" style=\"fill: red\" points=\"60.8615 35.1385 68.287 47.9995 48 48\"></polygon>\n                <polygon id=\"WEDGE-l10-o3\" style=\"fill: yellow\" points=\"83.1384388 48 78.4307806 65.5692194 68.2870612 47.9994388\"></polygon>\n                <polygon id=\"WEDGE-l10-o2\" style=\"fill: yellow\" points=\"83.1384388 48 68.287 47.9995 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l10-o1\" style=\"fill: yellow\" points=\"96 0 83.1384388 48 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l10-o0\" style=\"fill: red\" points=\"70.2768775 96 25.7231225 70.2768775 48.0001225 47.9995 78.4307806 65.5692194\"></polygon>\n            </g>\n            <g id=\"WEDGE-9\" transform=\"translate(229.157677, 211.157677) scale(-1, -1) rotate(90.000000) translate(-229.157677, -211.157677) translate(181.157677, 145.157677)\">\n                <polygon id=\"WEDGE-l9-o8\" style=\"fill: limegreen\" points=\"25.723 70.277 40.574 95.999 -2.27373675e-13 96\"></polygon>\n                <polygon id=\"WEDGE-l9-o7\" style=\"fill: #D8D8D8\" points=\"70.2768775 96 60.8615612 131.138439 40.5741225 95.9988775\"></polygon>\n                <polygon id=\"WEDGE-l9-o6\" style=\"fill: limegreen\" points=\"70.2768775 96 40.574 95.999 25.7231225 70.2768775\"></polygon>\n                <polygon id=\"WEDGE-l9-o5\" style=\"fill: limegreen\" points=\"48.0001225 47.9995 68.287 47.9995 78.4307806 65.5692194\"></polygon>\n                <polygon id=\"WEDGE-l9-o4\" style=\"fill: yellow\" points=\"60.8615 35.1385 68.287 47.9995 48 48\"></polygon>\n                <polygon id=\"WEDGE-l9-o3\" style=\"fill: limegreen\" points=\"83.1384388 48 78.4307806 65.5692194 68.2870612 47.9994388\"></polygon>\n                <polygon id=\"WEDGE-l9-o2\" style=\"fill: yellow\" points=\"83.1384388 48 68.287 47.9995 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l9-o1\" style=\"fill: yellow\" points=\"96 0 83.1384388 48 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l9-o0\" style=\"fill: limegreen\" points=\"70.2768775 96 25.7231225 70.2768775 48.0001225 47.9995 78.4307806 65.5692194\"></polygon>\n            </g>\n            <g id=\"WEDGE-8\" transform=\"translate(244.315353, 171.726896) scale(-1, -1) rotate(60.000000) translate(-244.315353, -171.726896) translate(196.315353, 105.726896)\">\n                <polygon id=\"WEDGE-l8-o8\" style=\"fill: #D8D8D8\" points=\"25.723 70.277 40.574 95.999 -2.27373675e-13 96\"></polygon>\n                <polygon id=\"WEDGE-l8-o7\" style=\"fill: #D8D8D8\" points=\"70.2768775 96 60.8615612 131.138439 40.5741225 95.9988775\"></polygon>\n                <polygon id=\"WEDGE-l8-o6\" style=\"fill: #D8D8D8\" points=\"70.2768775 96 40.574 95.999 25.7231225 70.2768775\"></polygon>\n                <polygon id=\"WEDGE-l8-o5\" style=\"fill: limegreen\" points=\"48.0001225 47.9995 68.287 47.9995 78.4307806 65.5692194\"></polygon>\n                <polygon id=\"WEDGE-l8-o4\" style=\"fill: limegreen\" points=\"60.8615 35.1385 68.287 47.9995 48 48\"></polygon>\n                <polygon id=\"WEDGE-l8-o3\" style=\"fill: limegreen\" points=\"83.1384388 48 78.4307806 65.5692194 68.2870612 47.9994388\"></polygon>\n                <polygon id=\"WEDGE-l8-o2\" style=\"fill: limegreen\" points=\"83.1384388 48 68.287 47.9995 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l8-o1\" style=\"fill: yellow\" points=\"96 0 83.1384388 48 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l8-o0\" style=\"fill: limegreen\" points=\"70.2768775 96 25.7231225 70.2768775 48.0001225 47.9995 78.4307806 65.5692194\"></polygon>\n            </g>\n            <g id=\"WEDGE-7\" transform=\"translate(237.726896, 130.000000) scale(-1, -1) rotate(30.000000) translate(-237.726896, -130.000000) translate(189.726896, 64.000000)\">\n                <polygon id=\"WEDGE-l7-o8\" style=\"fill: #D8D8D8\" points=\"25.723 70.277 40.574 95.999 -2.27373675e-13 96\"></polygon>\n                <polygon id=\"WEDGE-l7-o7\" style=\"fill: limegreen\" points=\"70.2768775 96 60.8615612 131.138439 40.5741225 95.9988775\"></polygon>\n                <polygon id=\"WEDGE-l7-o6\" style=\"fill: limegreen\" points=\"70.2768775 96 40.574 95.999 25.7231225 70.2768775\"></polygon>\n                <polygon id=\"WEDGE-l7-o5\" style=\"fill: limegreen\" points=\"48.0001225 47.9995 68.287 47.9995 78.4307806 65.5692194\"></polygon>\n                <polygon id=\"WEDGE-l7-o4\" style=\"fill: limegreen\" points=\"60.8615 35.1385 68.287 47.9995 48 48\"></polygon>\n                <polygon id=\"WEDGE-l7-o3\" style=\"fill: yellow\" points=\"83.1384388 48 78.4307806 65.5692194 68.2870612 47.9994388\"></polygon>\n                <polygon id=\"WEDGE-l7-o2\" style=\"fill: yellow\" points=\"83.1384388 48 68.287 47.9995 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l7-o1\" style=\"fill: yellow\" points=\"96 0 83.1384388 48 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l7-o0\" style=\"fill: limegreen\" points=\"70.2768775 96 25.7231225 70.2768775 48.0001225 47.9995 78.4307806 65.5692194\"></polygon>\n            </g>\n            <g id=\"WEDGE-6\" transform=\"translate(211.157677, 97.157677) scale(-1, -1) translate(-211.157677, -97.157677) translate(163.157677, 31.157677)\">\n                <polygon id=\"WEDGE-l6-o8\" style=\"fill: orange\" points=\"25.723 70.277 40.574 95.999 -2.27373675e-13 96\"></polygon>\n                <polygon id=\"WEDGE-l6-o7\" style=\"fill: #D8D8D8\" points=\"70.2768775 96 60.8615612 131.138439 40.5741225 95.9988775\"></polygon>\n                <polygon id=\"WEDGE-l6-o6\" style=\"fill: orange\" points=\"70.2768775 96 40.574 95.999 25.7231225 70.2768775\"></polygon>\n                <polygon id=\"WEDGE-l6-o5\" style=\"fill: orange\" points=\"48.0001225 47.9995 68.287 47.9995 78.4307806 65.5692194\"></polygon>\n                <polygon id=\"WEDGE-l6-o4\" style=\"fill: yellow\" points=\"60.8615 35.1385 68.287 47.9995 48 48\"></polygon>\n                <polygon id=\"WEDGE-l6-o3\" style=\"fill: orange\" points=\"83.1384388 48 78.4307806 65.5692194 68.2870612 47.9994388\"></polygon>\n                <polygon id=\"WEDGE-l6-o2\" style=\"fill: yellow\" points=\"83.1384388 48 68.287 47.9995 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l6-o1\" style=\"fill: yellow\" points=\"96 0 83.1384388 48 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l6-o0\" style=\"fill: orange\" points=\"70.2768775 96 25.7231225 70.2768775 48.0001225 47.9995 78.4307806 65.5692194\"></polygon>\n            </g>\n            <g id=\"WEDGE-5\" transform=\"translate(171.726896, 82.000000) rotate(150.000000) translate(-171.726896, -82.000000) translate(123.726896, 16.000000)\">\n                <polygon id=\"WEDGE-l5-o8\" style=\"fill: #D8D8D8\" points=\"25.723 70.277 40.574 95.999 -2.27373675e-13 96\"></polygon>\n                <polygon id=\"WEDGE-l5-o7\" style=\"fill: #D8D8D8\" points=\"70.2768775 96 60.8615612 131.138439 40.5741225 95.9988775\"></polygon>\n                <polygon id=\"WEDGE-l5-o6\" style=\"fill: #D8D8D8\" points=\"70.2768775 96 40.574 95.999 25.7231225 70.2768775\"></polygon>\n                <polygon id=\"WEDGE-l5-o5\" style=\"fill: orange\" points=\"48.0001225 47.9995 68.287 47.9995 78.4307806 65.5692194\"></polygon>\n                <polygon id=\"WEDGE-l5-o4\" style=\"fill: orange\" points=\"60.8615 35.1385 68.287 47.9995 48 48\"></polygon>\n                <polygon id=\"WEDGE-l5-o3\" style=\"fill: orange\" points=\"83.1384388 48 78.4307806 65.5692194 68.2870612 47.9994388\"></polygon>\n                <polygon id=\"WEDGE-l5-o2\" style=\"fill: orange\" points=\"83.1384388 48 68.287 47.9995 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l5-o1\" style=\"fill: yellow\" points=\"96 0 83.1384388 48 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l5-o0\" style=\"fill: orange\" points=\"70.2768775 96 25.7231225 70.2768775 48.0001225 47.9995 78.4307806 65.5692194\"></polygon>\n            </g>\n            <g id=\"WEDGE-4\" transform=\"translate(130.000000, 88.588457) rotate(120.000000) translate(-130.000000, -88.588457) translate(82.000000, 22.588457)\">\n                <polygon id=\"WEDGE-l4-o8\" style=\"fill: #D8D8D8\" points=\"25.723 70.277 40.574 95.999 -2.27373675e-13 96\"></polygon>\n                <polygon id=\"WEDGE-l4-o7\" style=\"fill: orange\" points=\"70.2768775 96 60.8615612 131.138439 40.5741225 95.9988775\"></polygon>\n                <polygon id=\"WEDGE-l4-o6\" style=\"fill: orange\" points=\"70.2768775 96 40.574 95.999 25.7231225 70.2768775\"></polygon>\n                <polygon id=\"WEDGE-l4-o5\" style=\"fill: orange\" points=\"48.0001225 47.9995 68.287 47.9995 78.4307806 65.5692194\"></polygon>\n                <polygon id=\"WEDGE-l4-o4\" style=\"fill: orange\" points=\"60.8615 35.1385 68.287 47.9995 48 48\"></polygon>\n                <polygon id=\"WEDGE-l4-o3\" style=\"fill: yellow\" points=\"83.1384388 48 78.4307806 65.5692194 68.2870612 47.9994388\"></polygon>\n                <polygon id=\"WEDGE-l4-o2\" style=\"fill: yellow\" points=\"83.1384388 48 68.287 47.9995 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l4-o1\" style=\"fill: yellow\" points=\"96 0 83.1384388 48 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l4-o0\" style=\"fill: orange\" points=\"70.2768775 96 25.7231225 70.2768775 48.0001225 47.9995 78.4307806 65.5692194\"></polygon>\n            </g>\n            <g id=\"WEDGE-3\" transform=\"translate(97.157677, 115.157677) rotate(90.000000) translate(-97.157677, -115.157677) translate(49.157677, 49.157677)\">\n                <polygon id=\"WEDGE-l3-o8\" style=\"fill: blue\" points=\"25.723 70.277 40.574 95.999 -2.27373675e-13 96\"></polygon>\n                <polygon id=\"WEDGE-l3-o7\" style=\"fill: #D8D8D8\" points=\"70.2768775 96 60.8615612 131.138439 40.5741225 95.9988775\"></polygon>\n                <polygon id=\"WEDGE-l3-o6\" style=\"fill: blue\" points=\"70.2768775 96 40.574 95.999 25.7231225 70.2768775\"></polygon>\n                <polygon id=\"WEDGE-l3-o5\" style=\"fill: blue\" points=\"48.0001225 47.9995 68.287 47.9995 78.4307806 65.5692194\"></polygon>\n                <polygon id=\"WEDGE-l3-o4\" style=\"fill: yellow\" points=\"60.8615 35.1385 68.287 47.9995 48 48\"></polygon>\n                <polygon id=\"WEDGE-l3-o3\" style=\"fill: blue\" points=\"83.1384388 48 78.4307806 65.5692194 68.2870612 47.9994388\"></polygon>\n                <polygon id=\"WEDGE-l3-o2\" style=\"fill: yellow\" points=\"83.1384388 48 68.287 47.9995 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l3-o1\" style=\"fill: yellow\" points=\"96 0 83.1384388 48 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l3-o0\" style=\"fill: blue\" points=\"70.2768775 96 25.7231225 70.2768775 48.0001225 47.9995 78.4307806 65.5692194\"></polygon>\n            </g>\n            <g id=\"WEDGE-2\" transform=\"translate(82.000000, 154.588457) rotate(60.000000) translate(-82.000000, -154.588457) translate(34.000000, 88.588457)\">\n                <polygon id=\"WEDGE-l2-o8\" style=\"fill: #D8D8D8\" points=\"25.723 70.277 40.574 95.999 -2.27373675e-13 96\"></polygon>\n                <polygon id=\"WEDGE-l2-o7\" style=\"fill: #D8D8D8\" points=\"70.2768775 96 60.8615612 131.138439 40.5741225 95.9988775\"></polygon>\n                <polygon id=\"WEDGE-l2-o6\" style=\"fill: #D8D8D8\" points=\"70.2768775 96 40.574 95.999 25.7231225 70.2768775\"></polygon>\n                <polygon id=\"WEDGE-l2-o5\" style=\"fill: blue\" points=\"48.0001225 47.9995 68.287 47.9995 78.4307806 65.5692194\"></polygon>\n                <polygon id=\"WEDGE-l2-o4\" style=\"fill: blue\" points=\"60.8615 35.1385 68.287 47.9995 48 48\"></polygon>\n                <polygon id=\"WEDGE-l2-o3\" style=\"fill: blue\" points=\"83.1384388 48 78.4307806 65.5692194 68.2870612 47.9994388\"></polygon>\n                <polygon id=\"WEDGE-l2-o2\" style=\"fill: blue\" points=\"83.1384388 48 68.287 47.9995 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l2-o1\" style=\"fill: yellow\" points=\"96 0 83.1384388 48 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l2-o0\" style=\"fill: blue\" points=\"70.2768775 96 25.7231225 70.2768775 48.0001225 47.9995 78.4307806 65.5692194\"></polygon>\n            </g>\n            <g id=\"WEDGE-1\" transform=\"translate(88.588457, 196.315353) rotate(30.000000) translate(-88.588457, -196.315353) translate(40.588457, 130.315353)\">\n                <polygon id=\"WEDGE-l1-o8\" style=\"fill: #D8D8D8\" points=\"25.723 70.277 40.574 95.999 -2.27373675e-13 96\"></polygon>\n                <polygon id=\"WEDGE-l1-o7\" style=\"fill: blue\" points=\"70.2768775 96 60.8615612 131.138439 40.5741225 95.9988775\"></polygon>\n                <polygon id=\"WEDGE-l1-o6\" style=\"fill: blue\" points=\"70.2768775 96 40.574 95.999 25.7231225 70.2768775\"></polygon>\n                <polygon id=\"WEDGE-l1-o5\" style=\"fill: blue\" points=\"48.0001225 47.9995 68.287 47.9995 78.4307806 65.5692194\"></polygon>\n                <polygon id=\"WEDGE-l1-o4\" style=\"fill: blue\" points=\"60.8615 35.1385 68.287 47.9995 48 48\"></polygon>\n                <polygon id=\"WEDGE-l1-o3\" style=\"fill: yellow\" points=\"83.1384388 48 78.4307806 65.5692194 68.2870612 47.9994388\"></polygon>\n                <polygon id=\"WEDGE-l1-o2\" style=\"fill: yellow\" points=\"83.1384388 48 68.287 47.9995 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l1-o1\" style=\"fill: yellow\" points=\"96 0 83.1384388 48 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l1-o0\" style=\"fill: blue\" points=\"70.2768775 96 25.7231225 70.2768775 48.0001225 47.9995 78.4307806 65.5692194\"></polygon>\n            </g>\n            <g id=\"WEDGE-0\" transform=\"translate(67.157677, 163.157677)\">\n                <polygon id=\"WEDGE-l0-o8\" style=\"fill: red\" points=\"25.723 70.277 40.574 95.999 -2.27373675e-13 96\"></polygon>\n                <polygon id=\"WEDGE-l0-o7\" style=\"fill: #D8D8D8\" points=\"70.2768775 96 60.8615612 131.138439 40.5741225 95.9988775\"></polygon>\n                <polygon id=\"WEDGE-l0-o6\" style=\"fill: red\" points=\"70.2768775 96 40.574 95.999 25.7231225 70.2768775\"></polygon>\n                <polygon id=\"WEDGE-l0-o5\" style=\"fill: red\" points=\"48.0001225 47.9995 68.287 47.9995 78.4307806 65.5692194\"></polygon>\n                <polygon id=\"WEDGE-l0-o4\" style=\"fill: yellow\" points=\"60.8615 35.1385 68.287 47.9995 48 48\"></polygon>\n                <polygon id=\"WEDGE-l0-o3\" style=\"fill: red\" points=\"83.1384388 48 78.4307806 65.5692194 68.2870612 47.9994388\"></polygon>\n                <polygon id=\"WEDGE-l0-o2\" style=\"fill: yellow\" points=\"83.1384388 48 68.287 47.9995 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l0-o1\" style=\"fill: yellow\" points=\"96 0 83.1384388 48 60.8615612 35.1384388\"></polygon>\n                <polygon id=\"WEDGE-l0-o0\" style=\"fill: red\" points=\"70.2768775 96 25.7231225 70.2768775 48.0001225 47.9995 78.4307806 65.5692194\"></polygon>\n            </g>\n        </g>\n        <g id=\"DIAGONALS\" transform=\"translate(168.861561, 1.019238)\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\">\n            <line x1=\"0\" y1=\"287.842323\" x2=\"70.2768775\" y2=\"550.119201\" id=\"BOTTOM\"></line>\n            <line x1=\"0.15767665\" y1=\"262.276878\" x2=\"70.4345542\" y2=\"2.27488928e-16\" id=\"TOP\"></line>\n        </g>\n    </g>\n</svg>\n`","module.exports={name:\"Clock\",orbits:{DIAL:{numPieces:18,orientations:12},FACE:{numPieces:18,orientations:1},FRAME:{numPieces:1,orientations:2}},startPieces:{DIAL:{permutation:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],orientation:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},FACE:{permutation:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],orientation:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},FRAME:{permutation:[0],orientation:[0]}},moves:{UR:{DIAL:{permutation:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],orientation:[0,1,1,0,1,1,0,0,0,-1,0,0,0,0,0,0,0,0]},FACE:{permutation:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],orientation:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},FRAME:{permutation:[0],orientation:[0]}},DR:{DIAL:{permutation:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],orientation:[0,0,0,0,1,1,0,1,1,0,0,0,0,0,0,-1,0,0]},FACE:{permutation:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],orientation:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},FRAME:{permutation:[0],orientation:[0]}},DL:{DIAL:{permutation:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],orientation:[0,0,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,-1]},FACE:{permutation:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],orientation:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},FRAME:{permutation:[0],orientation:[0]}},UL:{DIAL:{permutation:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],orientation:[1,1,0,1,1,0,0,0,0,0,0,-1,0,0,0,0,0,0]},FACE:{permutation:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],orientation:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},FRAME:{permutation:[0],orientation:[0]}},U:{DIAL:{permutation:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],orientation:[1,1,1,1,1,1,0,0,0,-1,0,-1,0,0,0,0,0,0]},FACE:{permutation:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],orientation:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},FRAME:{permutation:[0],orientation:[0]}},R:{DIAL:{permutation:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],orientation:[0,1,1,0,1,1,0,1,1,-1,0,0,0,0,0,-1,0,0]},FACE:{permutation:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],orientation:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},FRAME:{permutation:[0],orientation:[0]}},D:{DIAL:{permutation:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],orientation:[0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,-1,0,-1]},FACE:{permutation:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],orientation:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},FRAME:{permutation:[0],orientation:[0]}},L:{DIAL:{permutation:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],orientation:[1,1,0,1,1,0,1,1,0,0,0,-1,0,0,0,0,0,-1]},FACE:{permutation:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],orientation:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},FRAME:{permutation:[0],orientation:[0]}},ALL:{DIAL:{permutation:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],orientation:[1,1,1,1,1,1,1,1,1,-1,0,-1,0,0,0,-1,0,-1]},FACE:{permutation:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],orientation:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},FRAME:{permutation:[0],orientation:[0]}},FLIP:{DIAL:{permutation:[9,10,11,12,13,14,15,16,17,0,1,2,3,4,5,6,7,8],orientation:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},FACE:{permutation:[9,10,11,12,13,14,15,16,17,0,1,2,3,4,5,6,7,8],orientation:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},FRAME:{permutation:[0],orientation:[1]}}}};","module.exports = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 480 240\" preserveAspectRatio=\"xMidYMid meet\">\n  <title>clock</title>\n  <defs>\n    <g id=\"hand\" transform=\"translate(-20, -20)\">\n      <path d=\"M19.9995197,2.22079449 L23.8791657,19.0203611 C23.9580836,19.3338406 24,19.6620253 24,20 C24,22.209139 22.209139,24 20,24 C17.790861,24 16,22.209139 16,20 C16,19.6620253 16.0419164,19.3338406 16.1208343,19.0203611 L19.9995197,2.22079449 Z\"></path>\n    </g>\n    <g id=\"cardinal_hours\" style=\"fill: #FFFFFF\">\n      <circle cx=\"0\" cy=\"24\" r=\"2\"></circle>\n      <circle cx=\"-24\" cy=\"0\" r=\"2\"></circle>\n      <circle cx=\"24\" cy=\"0\" r=\"2\"></circle>\n      <circle cx=\"0\" cy=\"-24\" r=\"2\"></circle>\n    </g>\n    <g id=\"face_hours\">\n      <g>\n        <use xlink:href=\"#cardinal_hours\"/>\n      </g>\n      <g transform=\"rotate(30)\">\n        <use xlink:href=\"#cardinal_hours\"/>\n      </g>\n      <g  transform=\"rotate(60)\">\n        <use xlink:href=\"#cardinal_hours\"/>\n      </g>\n    </g>\n    <g id=\"pegs\" stroke=\"#000000\" style=\"fill: #FFD000\">\n      <circle id=\"PEG4\" cx=\"90\" cy=\"90\" r=\"10\"></circle>\n      <circle id=\"PEG3\" cx=\"30\" cy=\"90\" r=\"10\"></circle>\n      <circle id=\"PEG2\" cx=\"90\" cy=\"30\" r=\"10\"></circle>\n      <circle id=\"PEG1\" cx=\"30\" cy=\"30\" r=\"10\"></circle>\n    </g>\n    <g id=\"frame\" transform=\"translate(-24, -24)\">\n      <path stroke=\"#000000\" d=\"M120,20 C137.495665,20 153.941932,24.4930026 168.247913,32.3881183 C171.855881,30.8514056 175.828512,30 180,30 C196.568542,30 210,43.4314575 210,60 C210,64.1714878 209.148594,68.1441192 207.610077,71.7536009 C215.506997,86.0580678 220,102.504335 220,120 C220,137.495665 215.506997,153.941932 207.611882,168.247913 C209.148594,171.855881 210,175.828512 210,180 C210,196.568542 196.568542,210 180,210 C175.828512,210 171.855881,209.148594 168.246399,207.610077 C153.941932,215.506997 137.495665,220 120,220 C102.504335,220 86.0580678,215.506997 71.7520869,207.611882 C68.1441192,209.148594 64.1714878,210 60,210 C43.4314575,210 30,196.568542 30,180 C30,175.828512 30.8514056,171.855881 32.3899234,168.246399 C24.4930026,153.941932 20,137.495665 20,120 C20,102.504335 24.4930026,86.0580678 32.3881183,71.7520869 C30.8514056,68.1441192 30,64.1714878 30,60 C30,43.4314575 43.4314575,30 60,30 C64.1714878,30 68.1441192,30.8514056 71.7536009,32.3899234 C86.0580678,24.4930026 102.504335,20 120,20 Z\"></path>\n    </g>\n  </defs>\n  <g>\n    <g transform=\"translate(24, 24)\">\n      <use xlink:href=\"#frame\" id=\"FRAME-l0-o0\" style=\"fill: #0C5093\"/>\n      <use xlink:href=\"#pegs\" transform=\"translate(36, 36)\"/>\n      <g transform=\"translate(36, 36)\">\n        <circle id=\"FACE-l0-o0\" stroke=\"#000000\" style=\"fill: #90B8DF\" r=\"20\"></circle>\n        <use xlink:href=\"#face_hours\"/>\n        <g>\n          <use id=\"DIAL-l0-o0\"  xlink:href=\"#hand\" transform=\"rotate(0)\" style=\"fill: #FFD000\"/>\n          <use id=\"DIAL-l0-o1\"  xlink:href=\"#hand\" transform=\"rotate(30)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l0-o2\"  xlink:href=\"#hand\" transform=\"rotate(60)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l0-o3\"  xlink:href=\"#hand\" transform=\"rotate(90)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l0-o4\"  xlink:href=\"#hand\" transform=\"rotate(120)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l0-o5\"  xlink:href=\"#hand\" transform=\"rotate(150)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l0-o6\"  xlink:href=\"#hand\" transform=\"rotate(180)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l0-o7\"  xlink:href=\"#hand\" transform=\"rotate(210)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l0-o8\"  xlink:href=\"#hand\" transform=\"rotate(240)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l0-o9\"  xlink:href=\"#hand\" transform=\"rotate(270)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l0-o10\" xlink:href=\"#hand\" transform=\"rotate(300)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l0-o11\" xlink:href=\"#hand\" transform=\"rotate(330)\" style=\"fill: #0000\"/>\n        </g>\n      </g>\n      <g transform=\"translate(96, 36)\">\n        <circle id=\"FACE-l1-o0\" stroke=\"#000000\" style=\"fill: #90B8DF\" r=\"20\"></circle>\n        <use xlink:href=\"#face_hours\"/>\n        <g>\n          <use id=\"DIAL-l1-o0\"  xlink:href=\"#hand\" transform=\"rotate(0)\" style=\"fill: #FFD000\"/>\n          <use id=\"DIAL-l1-o1\"  xlink:href=\"#hand\" transform=\"rotate(30)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l1-o2\"  xlink:href=\"#hand\" transform=\"rotate(60)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l1-o3\"  xlink:href=\"#hand\" transform=\"rotate(90)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l1-o4\"  xlink:href=\"#hand\" transform=\"rotate(120)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l1-o5\"  xlink:href=\"#hand\" transform=\"rotate(150)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l1-o6\"  xlink:href=\"#hand\" transform=\"rotate(180)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l1-o7\"  xlink:href=\"#hand\" transform=\"rotate(210)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l1-o8\"  xlink:href=\"#hand\" transform=\"rotate(240)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l1-o9\"  xlink:href=\"#hand\" transform=\"rotate(270)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l1-o10\" xlink:href=\"#hand\" transform=\"rotate(300)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l1-o11\" xlink:href=\"#hand\" transform=\"rotate(330)\" style=\"fill: #0000\"/>\n        </g>\n      </g>\n      <g transform=\"translate(156, 36)\">\n        <circle id=\"FACE-l2-o0\" stroke=\"#000000\" style=\"fill: #90B8DF\" r=\"20\"></circle>\n        <use xlink:href=\"#face_hours\"/>\n        <g>\n          <use id=\"DIAL-l2-o0\"  xlink:href=\"#hand\" transform=\"rotate(0)\" style=\"fill: #FFD000\"/>\n          <use id=\"DIAL-l2-o1\"  xlink:href=\"#hand\" transform=\"rotate(30)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l2-o2\"  xlink:href=\"#hand\" transform=\"rotate(60)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l2-o3\"  xlink:href=\"#hand\" transform=\"rotate(90)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l2-o4\"  xlink:href=\"#hand\" transform=\"rotate(120)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l2-o5\"  xlink:href=\"#hand\" transform=\"rotate(150)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l2-o6\"  xlink:href=\"#hand\" transform=\"rotate(180)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l2-o7\"  xlink:href=\"#hand\" transform=\"rotate(210)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l2-o8\"  xlink:href=\"#hand\" transform=\"rotate(240)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l2-o9\"  xlink:href=\"#hand\" transform=\"rotate(270)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l2-o10\" xlink:href=\"#hand\" transform=\"rotate(300)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l2-o11\" xlink:href=\"#hand\" transform=\"rotate(330)\" style=\"fill: #0000\"/>\n        </g>\n      </g>\n      <g transform=\"translate(36, 96)\">\n        <circle id=\"FACE-l3-o0\" stroke=\"#000000\" style=\"fill: #90B8DF\" r=\"20\"></circle>\n        <use xlink:href=\"#face_hours\"/>\n        <g>\n          <use id=\"DIAL-l3-o0\"  xlink:href=\"#hand\" transform=\"rotate(0)\" style=\"fill: #FFD000\"/>\n          <use id=\"DIAL-l3-o1\"  xlink:href=\"#hand\" transform=\"rotate(30)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l3-o2\"  xlink:href=\"#hand\" transform=\"rotate(60)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l3-o3\"  xlink:href=\"#hand\" transform=\"rotate(90)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l3-o4\"  xlink:href=\"#hand\" transform=\"rotate(120)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l3-o5\"  xlink:href=\"#hand\" transform=\"rotate(150)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l3-o6\"  xlink:href=\"#hand\" transform=\"rotate(180)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l3-o7\"  xlink:href=\"#hand\" transform=\"rotate(210)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l3-o8\"  xlink:href=\"#hand\" transform=\"rotate(240)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l3-o9\"  xlink:href=\"#hand\" transform=\"rotate(270)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l3-o10\" xlink:href=\"#hand\" transform=\"rotate(300)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l3-o11\" xlink:href=\"#hand\" transform=\"rotate(330)\" style=\"fill: #0000\"/>\n        </g>\n      </g>\n      <g transform=\"translate(96, 96)\">\n        <circle id=\"FACE-l4-o0\" stroke=\"#000000\" style=\"fill: #90B8DF\" r=\"20\"></circle>\n        <use xlink:href=\"#face_hours\"/>\n        <g>\n          <use id=\"DIAL-l4-o0\"  xlink:href=\"#hand\" transform=\"rotate(0)\" style=\"fill: #FFD000\"/>\n          <use id=\"DIAL-l4-o1\"  xlink:href=\"#hand\" transform=\"rotate(30)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l4-o2\"  xlink:href=\"#hand\" transform=\"rotate(60)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l4-o3\"  xlink:href=\"#hand\" transform=\"rotate(90)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l4-o4\"  xlink:href=\"#hand\" transform=\"rotate(120)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l4-o5\"  xlink:href=\"#hand\" transform=\"rotate(150)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l4-o6\"  xlink:href=\"#hand\" transform=\"rotate(180)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l4-o7\"  xlink:href=\"#hand\" transform=\"rotate(210)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l4-o8\"  xlink:href=\"#hand\" transform=\"rotate(240)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l4-o9\"  xlink:href=\"#hand\" transform=\"rotate(270)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l4-o10\" xlink:href=\"#hand\" transform=\"rotate(300)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l4-o11\" xlink:href=\"#hand\" transform=\"rotate(330)\" style=\"fill: #0000\"/>\n        </g>\n      </g>\n      <g transform=\"translate(156, 96)\">\n        <circle id=\"FACE-l5-o0\" stroke=\"#000000\" style=\"fill: #90B8DF\" r=\"20\"></circle>\n        <use xlink:href=\"#face_hours\"/>\n        <g>\n          <use id=\"DIAL-l5-o0\"  xlink:href=\"#hand\" transform=\"rotate(0)\" style=\"fill: #FFD000\"/>\n          <use id=\"DIAL-l5-o1\"  xlink:href=\"#hand\" transform=\"rotate(30)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l5-o2\"  xlink:href=\"#hand\" transform=\"rotate(60)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l5-o3\"  xlink:href=\"#hand\" transform=\"rotate(90)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l5-o4\"  xlink:href=\"#hand\" transform=\"rotate(120)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l5-o5\"  xlink:href=\"#hand\" transform=\"rotate(150)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l5-o6\"  xlink:href=\"#hand\" transform=\"rotate(180)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l5-o7\"  xlink:href=\"#hand\" transform=\"rotate(210)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l5-o8\"  xlink:href=\"#hand\" transform=\"rotate(240)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l5-o9\"  xlink:href=\"#hand\" transform=\"rotate(270)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l5-o10\" xlink:href=\"#hand\" transform=\"rotate(300)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l5-o11\" xlink:href=\"#hand\" transform=\"rotate(330)\" style=\"fill: #0000\"/>\n        </g>\n      </g>\n      <g transform=\"translate(36, 156)\">\n        <circle id=\"FACE-l6-o0\" stroke=\"#000000\" style=\"fill: #90B8DF\" r=\"20\"></circle>\n        <use xlink:href=\"#face_hours\"/>\n        <g>\n          <use id=\"DIAL-l6-o0\"  xlink:href=\"#hand\" transform=\"rotate(0)\" style=\"fill: #FFD000\"/>\n          <use id=\"DIAL-l6-o1\"  xlink:href=\"#hand\" transform=\"rotate(30)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l6-o2\"  xlink:href=\"#hand\" transform=\"rotate(60)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l6-o3\"  xlink:href=\"#hand\" transform=\"rotate(90)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l6-o4\"  xlink:href=\"#hand\" transform=\"rotate(120)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l6-o5\"  xlink:href=\"#hand\" transform=\"rotate(150)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l6-o6\"  xlink:href=\"#hand\" transform=\"rotate(180)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l6-o7\"  xlink:href=\"#hand\" transform=\"rotate(210)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l6-o8\"  xlink:href=\"#hand\" transform=\"rotate(240)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l6-o9\"  xlink:href=\"#hand\" transform=\"rotate(270)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l6-o10\" xlink:href=\"#hand\" transform=\"rotate(300)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l6-o11\" xlink:href=\"#hand\" transform=\"rotate(330)\" style=\"fill: #0000\"/>\n        </g>\n      </g>\n      <g transform=\"translate(96, 156)\">\n        <circle id=\"FACE-l7-o0\" stroke=\"#000000\" style=\"fill: #90B8DF\" r=\"20\"></circle>\n        <use xlink:href=\"#face_hours\"/>\n        <g>\n          <use id=\"DIAL-l7-o0\"  xlink:href=\"#hand\" transform=\"rotate(0)\" style=\"fill: #FFD000\"/>\n          <use id=\"DIAL-l7-o1\"  xlink:href=\"#hand\" transform=\"rotate(30)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l7-o2\"  xlink:href=\"#hand\" transform=\"rotate(60)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l7-o3\"  xlink:href=\"#hand\" transform=\"rotate(90)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l7-o4\"  xlink:href=\"#hand\" transform=\"rotate(120)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l7-o5\"  xlink:href=\"#hand\" transform=\"rotate(150)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l7-o6\"  xlink:href=\"#hand\" transform=\"rotate(180)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l7-o7\"  xlink:href=\"#hand\" transform=\"rotate(210)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l7-o8\"  xlink:href=\"#hand\" transform=\"rotate(240)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l7-o9\"  xlink:href=\"#hand\" transform=\"rotate(270)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l7-o10\" xlink:href=\"#hand\" transform=\"rotate(300)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l7-o11\" xlink:href=\"#hand\" transform=\"rotate(330)\" style=\"fill: #0000\"/>\n        </g>\n      </g>\n      <g transform=\"translate(156, 156)\">\n        <circle id=\"FACE-l8-o0\" stroke=\"#000000\" style=\"fill: #90B8DF\" r=\"20\"></circle>\n        <use xlink:href=\"#face_hours\"/>\n        <g>\n          <use id=\"DIAL-l8-o0\"  xlink:href=\"#hand\" transform=\"rotate(0)\" style=\"fill: #FFD000\"/>\n          <use id=\"DIAL-l8-o1\"  xlink:href=\"#hand\" transform=\"rotate(30)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l8-o2\"  xlink:href=\"#hand\" transform=\"rotate(60)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l8-o3\"  xlink:href=\"#hand\" transform=\"rotate(90)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l8-o4\"  xlink:href=\"#hand\" transform=\"rotate(120)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l8-o5\"  xlink:href=\"#hand\" transform=\"rotate(150)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l8-o6\"  xlink:href=\"#hand\" transform=\"rotate(180)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l8-o7\"  xlink:href=\"#hand\" transform=\"rotate(210)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l8-o8\"  xlink:href=\"#hand\" transform=\"rotate(240)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l8-o9\"  xlink:href=\"#hand\" transform=\"rotate(270)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l8-o10\" xlink:href=\"#hand\" transform=\"rotate(300)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l8-o11\" xlink:href=\"#hand\" transform=\"rotate(330)\" style=\"fill: #0000\"/>\n        </g>\n      </g>\n    </g>\n    <g transform=\"translate(264, 24)\">\n      <use xlink:href=\"#frame\" id=\"FRAME-l0-o1\" style=\"fill: #90B8DF\"/>\n      <use xlink:href=\"#pegs\" transform=\"translate(36, 36)\"/>\n      <g transform=\"translate(36, 36)\">\n        <circle id=\"FACE-l9-o0\" stroke=\"#000000\" style=\"fill: #0C5093\" r=\"20\"></circle>\n        <use xlink:href=\"#face_hours\"/>\n        <g>\n          <use id=\"DIAL-l9-o0\"  xlink:href=\"#hand\" transform=\"rotate(0)\" style=\"fill: #FFD000\"/>\n          <use id=\"DIAL-l9-o1\"  xlink:href=\"#hand\" transform=\"rotate(30)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l9-o2\"  xlink:href=\"#hand\" transform=\"rotate(60)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l9-o3\"  xlink:href=\"#hand\" transform=\"rotate(90)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l9-o4\"  xlink:href=\"#hand\" transform=\"rotate(120)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l9-o5\"  xlink:href=\"#hand\" transform=\"rotate(150)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l9-o6\"  xlink:href=\"#hand\" transform=\"rotate(180)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l9-o7\"  xlink:href=\"#hand\" transform=\"rotate(210)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l9-o8\"  xlink:href=\"#hand\" transform=\"rotate(240)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l9-o9\"  xlink:href=\"#hand\" transform=\"rotate(270)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l9-o10\" xlink:href=\"#hand\" transform=\"rotate(300)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l9-o11\" xlink:href=\"#hand\" transform=\"rotate(330)\" style=\"fill: #0000\"/>\n        </g>\n      </g>\n      <g transform=\"translate(96, 36)\">\n        <circle id=\"FACE-l10-o0\" stroke=\"#000000\" style=\"fill: #0C5093\" r=\"20\"></circle>\n        <use xlink:href=\"#face_hours\"/>\n        <g>\n          <use id=\"DIAL-l10-o0\"  xlink:href=\"#hand\" transform=\"rotate(0)\" style=\"fill: #FFD000\"/>\n          <use id=\"DIAL-l10-o1\"  xlink:href=\"#hand\" transform=\"rotate(30)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l10-o2\"  xlink:href=\"#hand\" transform=\"rotate(60)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l10-o3\"  xlink:href=\"#hand\" transform=\"rotate(90)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l10-o4\"  xlink:href=\"#hand\" transform=\"rotate(120)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l10-o5\"  xlink:href=\"#hand\" transform=\"rotate(150)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l10-o6\"  xlink:href=\"#hand\" transform=\"rotate(180)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l10-o7\"  xlink:href=\"#hand\" transform=\"rotate(210)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l10-o8\"  xlink:href=\"#hand\" transform=\"rotate(240)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l10-o9\"  xlink:href=\"#hand\" transform=\"rotate(270)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l10-o10\" xlink:href=\"#hand\" transform=\"rotate(300)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l10-o11\" xlink:href=\"#hand\" transform=\"rotate(330)\" style=\"fill: #0000\"/>\n        </g>\n      </g>\n      <g transform=\"translate(156, 36)\">\n        <circle id=\"FACE-l11-o0\" stroke=\"#000000\" style=\"fill: #0C5093\" r=\"20\"></circle>\n        <use xlink:href=\"#face_hours\"/>\n        <g>\n          <use id=\"DIAL-l11-o0\"  xlink:href=\"#hand\" transform=\"rotate(0)\" style=\"fill: #FFD000\"/>\n          <use id=\"DIAL-l11-o1\"  xlink:href=\"#hand\" transform=\"rotate(30)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l11-o2\"  xlink:href=\"#hand\" transform=\"rotate(60)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l11-o3\"  xlink:href=\"#hand\" transform=\"rotate(90)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l11-o4\"  xlink:href=\"#hand\" transform=\"rotate(120)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l11-o5\"  xlink:href=\"#hand\" transform=\"rotate(150)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l11-o6\"  xlink:href=\"#hand\" transform=\"rotate(180)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l11-o7\"  xlink:href=\"#hand\" transform=\"rotate(210)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l11-o8\"  xlink:href=\"#hand\" transform=\"rotate(240)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l11-o9\"  xlink:href=\"#hand\" transform=\"rotate(270)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l11-o10\" xlink:href=\"#hand\" transform=\"rotate(300)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l11-o11\" xlink:href=\"#hand\" transform=\"rotate(330)\" style=\"fill: #0000\"/>\n        </g>\n      </g>\n      <g transform=\"translate(36, 96)\">\n        <circle id=\"FACE-l12-o0\" stroke=\"#000000\" style=\"fill: #0C5093\" r=\"20\"></circle>\n        <use xlink:href=\"#face_hours\"/>\n        <g>\n          <use id=\"DIAL-l12-o0\"  xlink:href=\"#hand\" transform=\"rotate(0)\" style=\"fill: #FFD000\"/>\n          <use id=\"DIAL-l12-o1\"  xlink:href=\"#hand\" transform=\"rotate(30)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l12-o2\"  xlink:href=\"#hand\" transform=\"rotate(60)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l12-o3\"  xlink:href=\"#hand\" transform=\"rotate(90)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l12-o4\"  xlink:href=\"#hand\" transform=\"rotate(120)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l12-o5\"  xlink:href=\"#hand\" transform=\"rotate(150)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l12-o6\"  xlink:href=\"#hand\" transform=\"rotate(180)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l12-o7\"  xlink:href=\"#hand\" transform=\"rotate(210)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l12-o8\"  xlink:href=\"#hand\" transform=\"rotate(240)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l12-o9\"  xlink:href=\"#hand\" transform=\"rotate(270)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l12-o10\" xlink:href=\"#hand\" transform=\"rotate(300)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l12-o11\" xlink:href=\"#hand\" transform=\"rotate(330)\" style=\"fill: #0000\"/>\n        </g>\n      </g>\n      <g transform=\"translate(96, 96)\">\n        <circle id=\"FACE-l13-o0\" stroke=\"#000000\" style=\"fill: #0C5093\" r=\"20\"></circle>\n        <use xlink:href=\"#face_hours\"/>\n        <g>\n          <use id=\"DIAL-l13-o0\"  xlink:href=\"#hand\" transform=\"rotate(0)\" style=\"fill: #FFD000\"/>\n          <use id=\"DIAL-l13-o1\"  xlink:href=\"#hand\" transform=\"rotate(30)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l13-o2\"  xlink:href=\"#hand\" transform=\"rotate(60)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l13-o3\"  xlink:href=\"#hand\" transform=\"rotate(90)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l13-o4\"  xlink:href=\"#hand\" transform=\"rotate(120)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l13-o5\"  xlink:href=\"#hand\" transform=\"rotate(150)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l13-o6\"  xlink:href=\"#hand\" transform=\"rotate(180)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l13-o7\"  xlink:href=\"#hand\" transform=\"rotate(210)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l13-o8\"  xlink:href=\"#hand\" transform=\"rotate(240)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l13-o9\"  xlink:href=\"#hand\" transform=\"rotate(270)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l13-o10\" xlink:href=\"#hand\" transform=\"rotate(300)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l13-o11\" xlink:href=\"#hand\" transform=\"rotate(330)\" style=\"fill: #0000\"/>\n        </g>\n      </g>\n      <g transform=\"translate(156, 96)\">\n        <circle id=\"FACE-l14-o0\" stroke=\"#000000\" style=\"fill: #0C5093\" r=\"20\"></circle>\n        <use xlink:href=\"#face_hours\"/>\n        <g>\n          <use id=\"DIAL-l14-o0\"  xlink:href=\"#hand\" transform=\"rotate(0)\" style=\"fill: #FFD000\"/>\n          <use id=\"DIAL-l14-o1\"  xlink:href=\"#hand\" transform=\"rotate(30)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l14-o2\"  xlink:href=\"#hand\" transform=\"rotate(60)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l14-o3\"  xlink:href=\"#hand\" transform=\"rotate(90)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l14-o4\"  xlink:href=\"#hand\" transform=\"rotate(120)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l14-o5\"  xlink:href=\"#hand\" transform=\"rotate(150)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l14-o6\"  xlink:href=\"#hand\" transform=\"rotate(180)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l14-o7\"  xlink:href=\"#hand\" transform=\"rotate(210)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l14-o8\"  xlink:href=\"#hand\" transform=\"rotate(240)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l14-o9\"  xlink:href=\"#hand\" transform=\"rotate(270)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l14-o10\" xlink:href=\"#hand\" transform=\"rotate(300)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l14-o11\" xlink:href=\"#hand\" transform=\"rotate(330)\" style=\"fill: #0000\"/>\n        </g>\n      </g>\n      <g transform=\"translate(36, 156)\">\n        <circle id=\"FACE-l15-o0\" stroke=\"#000000\" style=\"fill: #0C5093\" r=\"20\"></circle>\n        <use xlink:href=\"#face_hours\"/>\n        <g>\n          <use id=\"DIAL-l15-o0\"  xlink:href=\"#hand\" transform=\"rotate(0)\" style=\"fill: #FFD000\"/>\n          <use id=\"DIAL-l15-o1\"  xlink:href=\"#hand\" transform=\"rotate(30)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l15-o2\"  xlink:href=\"#hand\" transform=\"rotate(60)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l15-o3\"  xlink:href=\"#hand\" transform=\"rotate(90)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l15-o4\"  xlink:href=\"#hand\" transform=\"rotate(120)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l15-o5\"  xlink:href=\"#hand\" transform=\"rotate(150)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l15-o6\"  xlink:href=\"#hand\" transform=\"rotate(180)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l15-o7\"  xlink:href=\"#hand\" transform=\"rotate(210)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l15-o8\"  xlink:href=\"#hand\" transform=\"rotate(240)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l15-o9\"  xlink:href=\"#hand\" transform=\"rotate(270)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l15-o10\" xlink:href=\"#hand\" transform=\"rotate(300)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l15-o11\" xlink:href=\"#hand\" transform=\"rotate(330)\" style=\"fill: #0000\"/>\n        </g>\n      </g>\n      <g transform=\"translate(96, 156)\">\n        <circle id=\"FACE-l16-o0\" stroke=\"#000000\" style=\"fill: #0C5093\" r=\"20\"></circle>\n        <use xlink:href=\"#face_hours\"/>\n        <g>\n          <use id=\"DIAL-l16-o0\"  xlink:href=\"#hand\" transform=\"rotate(0)\" style=\"fill: #FFD000\"/>\n          <use id=\"DIAL-l16-o1\"  xlink:href=\"#hand\" transform=\"rotate(30)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l16-o2\"  xlink:href=\"#hand\" transform=\"rotate(60)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l16-o3\"  xlink:href=\"#hand\" transform=\"rotate(90)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l16-o4\"  xlink:href=\"#hand\" transform=\"rotate(120)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l16-o5\"  xlink:href=\"#hand\" transform=\"rotate(150)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l16-o6\"  xlink:href=\"#hand\" transform=\"rotate(180)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l16-o7\"  xlink:href=\"#hand\" transform=\"rotate(210)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l16-o8\"  xlink:href=\"#hand\" transform=\"rotate(240)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l16-o9\"  xlink:href=\"#hand\" transform=\"rotate(270)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l16-o10\" xlink:href=\"#hand\" transform=\"rotate(300)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l16-o11\" xlink:href=\"#hand\" transform=\"rotate(330)\" style=\"fill: #0000\"/>\n        </g>\n      </g>\n      <g transform=\"translate(156, 156)\">\n        <circle id=\"FACE-l17-o0\" stroke=\"#000000\" style=\"fill: #0C5093\" r=\"20\"></circle>\n        <use xlink:href=\"#face_hours\"/>\n        <g>\n          <use id=\"DIAL-l17-o0\"  xlink:href=\"#hand\" transform=\"rotate(0)\" style=\"fill: #FFD000\"/>\n          <use id=\"DIAL-l17-o1\"  xlink:href=\"#hand\" transform=\"rotate(30)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l17-o2\"  xlink:href=\"#hand\" transform=\"rotate(60)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l17-o3\"  xlink:href=\"#hand\" transform=\"rotate(90)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l17-o4\"  xlink:href=\"#hand\" transform=\"rotate(120)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l17-o5\"  xlink:href=\"#hand\" transform=\"rotate(150)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l17-o6\"  xlink:href=\"#hand\" transform=\"rotate(180)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l17-o7\"  xlink:href=\"#hand\" transform=\"rotate(210)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l17-o8\"  xlink:href=\"#hand\" transform=\"rotate(240)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l17-o9\"  xlink:href=\"#hand\" transform=\"rotate(270)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l17-o10\" xlink:href=\"#hand\" transform=\"rotate(300)\" style=\"fill: #0000\"/>\n          <use id=\"DIAL-l17-o11\" xlink:href=\"#hand\" transform=\"rotate(330)\" style=\"fill: #0000\"/>\n        </g>\n      </g>\n    </g>\n  </g>\n</svg>\n`","import { KPuzzleDefinition } from \"../definition_types\";\n\ndeclare module \"*.svg\";\n\n// TODO: Figure out how to import SVGs directly, in a way that works with all our build systems.\n\nimport cube222JSON from \"./2x2x2.kpuzzle.json\";\nexport const Cube222: KPuzzleDefinition = cube222JSON;\nimport cube222SVG from \"./svg/2x2x2.kpuzzle.svg\";\nCube222.svg = cube222SVG;\n// Cube222.svg = svgJSON[\"2x2x2.kpuzzle.svg\"];\n\nimport cube333JSON from \"./3x3x3.kpuzzle.json\";\nexport const Cube333: KPuzzleDefinition = cube333JSON;\nimport cube333SVG from \"./svg/3x3x3.kpuzzle.svg\";\nCube333.svg = cube333SVG;\n// Cube333.svg = svgJSON[\"3x3x3.kpuzzle.svg\"];\n\nimport PyraminxJSON from \"./pyraminx.kpuzzle.json\";\nexport const Pyraminx: KPuzzleDefinition = PyraminxJSON;\nimport pyraminxSVG from \"./svg/pyraminx.kpuzzle.svg\";\nPyraminx.svg = pyraminxSVG;\n\nimport square1JSON from \"./sq1-hyperorbit.kpuzzle.json\";\nexport const Square1: KPuzzleDefinition = square1JSON;\nimport square1SVG from \"./svg/sq1-hyperorbit.kpuzzle.svg\";\nSquare1.svg = square1SVG;\n\nimport clockJSON from \"./clock.kpuzzle.json\";\nexport const Clock: KPuzzleDefinition = clockJSON;\nimport clockSVG from \"./svg/clock.kpuzzle.svg\";\nClock.svg = clockSVG;\n","import { KPuzzleDefinition } from \"./definition_types\";\nimport { Clock, Cube222, Cube333, Pyraminx, Square1 } from \"./definitions\";\n\nexport const Puzzles: { [key: string]: KPuzzleDefinition } = {\n  \"2x2x2\": Cube222,\n  \"3x3x3\": Cube333,\n  \"pyraminx\": Pyraminx,\n  \"sq1\": Square1,\n  \"clock\": Clock,\n};\n","// Workaround per https://github.com/pegjs/pegjs/pull/481\nimport parser from \"./parser.pegjs\";\nconst { parse } = parser;\nexport { parse };\n","import { KPuzzleDefinition } from \"../definition_types\";\nimport { parse as importedParse } from \"./parser-shim\";\n\nconst parse: (s: string) => KPuzzleDefinition = importedParse;\n\nexport { parse };\n","export { parse } from \"./parser\";\n","import { KPuzzleDefinition, Transformation } from \"./definition_types\";\nimport { KPuzzle } from \"./kpuzzle\";\n\nconst xmlns = \"http://www.w3.org/2000/svg\";\n\n// Unique ID mechanism to keep SVG gradient element IDs unique. TODO: Is there\n// something more performant, and that can't be broken by other elements of the\n// page? (And also doesn't break if this library is run in parallel.)\nlet svgCounter = 0;\nfunction nextSVGID(): string {\n  svgCounter += 1;\n  return \"svg\" + svgCounter.toString();\n}\n\nexport class SVG {\n  public element: HTMLElement;\n  public gradientDefs: SVGDefsElement;\n  private originalColors: { [type: string]: string } = {};\n  private gradients: { [type: string]: SVGGradientElement } = {};\n  private svgID: string;\n  constructor(public kPuzzleDefinition: KPuzzleDefinition) {\n    if (!kPuzzleDefinition.svg) {\n      throw new Error(\n        `No SVG definition for puzzle type: ${kPuzzleDefinition.name}`,\n      );\n    }\n\n    this.svgID = nextSVGID();\n\n    this.element = document.createElement(\"div\");\n    this.element.classList.add(\"svg-wrapper\");\n    // TODO: Sanitization.\n    this.element.innerHTML = kPuzzleDefinition.svg;\n\n    const svgElem = this.element.querySelector(\"svg\");\n    if (!svgElem) {\n      throw new Error(\"Could not get SVG element\");\n    }\n    if (xmlns !== svgElem.namespaceURI) {\n      throw new Error(\"Unexpected XML namespace\");\n    }\n    svgElem.style.maxWidth = \"100%\";\n    svgElem.style.maxHeight = \"100%\";\n    this.gradientDefs = document.createElementNS(\n      xmlns,\n      \"defs\",\n    ) as SVGDefsElement;\n    svgElem.insertBefore(this.gradientDefs, svgElem.firstChild);\n\n    for (const orbitName in kPuzzleDefinition.orbits) {\n      const orbitDefinition = kPuzzleDefinition.orbits[orbitName];\n\n      for (let idx = 0; idx < orbitDefinition.numPieces; idx++) {\n        for (\n          let orientation = 0;\n          orientation < orbitDefinition.orientations;\n          orientation++\n        ) {\n          const id = this.elementID(orbitName, idx, orientation);\n          const elem = this.elementByID(id);\n          const originalColor = elem.style.fill as string;\n          this.originalColors[id] = originalColor;\n          this.gradients[id] = this.newGradient(id, originalColor);\n          this.gradientDefs.appendChild(this.gradients[id]);\n          elem.setAttribute(\"style\", `fill: url(#grad-${this.svgID}-${id})`);\n        }\n      }\n    }\n  }\n\n  public drawKPuzzle(\n    kpuzzle: KPuzzle,\n    nextState?: Transformation,\n    fraction?: number,\n  ): void {\n    this.draw(kpuzzle.definition, kpuzzle.state, nextState, fraction);\n  }\n\n  // TODO: save definition in the constructor?\n  public draw(\n    definition: KPuzzleDefinition,\n    state: Transformation,\n    nextState?: Transformation,\n    fraction?: number,\n  ): void {\n    for (const orbitName in definition.orbits) {\n      const orbitDefinition = definition.orbits[orbitName];\n\n      const curOrbitState = state[orbitName];\n      const nextOrbitState = nextState\n        ? (nextState as Transformation)[orbitName]\n        : null;\n      for (let idx = 0; idx < orbitDefinition.numPieces; idx++) {\n        for (\n          let orientation = 0;\n          orientation < orbitDefinition.orientations;\n          orientation++\n        ) {\n          const id = this.elementID(orbitName, idx, orientation);\n          const fromCur = this.elementID(\n            orbitName,\n            curOrbitState.permutation[idx],\n            (orbitDefinition.orientations -\n              curOrbitState.orientation[idx] +\n              orientation) %\n              orbitDefinition.orientations,\n          );\n          let singleColor = false;\n          if (nextOrbitState) {\n            const fromNext = this.elementID(\n              orbitName,\n              nextOrbitState.permutation[idx],\n              (orbitDefinition.orientations -\n                nextOrbitState.orientation[idx] +\n                orientation) %\n                orbitDefinition.orientations,\n            );\n            if (fromCur === fromNext) {\n              singleColor = true; // TODO: Avoid redundant work during move.\n            }\n            fraction = fraction || 0; // TODO Use the type system to tie this to nextState?\n            const easedBackwardsPercent =\n              100 * (1 - fraction * fraction * (2 - fraction * fraction)); // TODO: Move easing up the stack.\n            this.gradients[id].children[0].setAttribute(\n              \"stop-color\",\n              this.originalColors[fromCur],\n            );\n            this.gradients[id].children[1].setAttribute(\n              \"stop-color\",\n              this.originalColors[fromCur],\n            );\n            this.gradients[id].children[1].setAttribute(\n              \"offset\",\n              `${Math.max(easedBackwardsPercent - 5, 0)}%`,\n            );\n            this.gradients[id].children[2].setAttribute(\n              \"offset\",\n              `${Math.max(easedBackwardsPercent - 5, 0)}%`,\n            );\n            this.gradients[id].children[3].setAttribute(\n              \"offset\",\n              `${easedBackwardsPercent}%`,\n            );\n            this.gradients[id].children[4].setAttribute(\n              \"offset\",\n              `${easedBackwardsPercent}%`,\n            );\n            this.gradients[id].children[4].setAttribute(\n              \"stop-color\",\n              this.originalColors[fromNext],\n            );\n            this.gradients[id].children[5].setAttribute(\n              \"stop-color\",\n              this.originalColors[fromNext],\n            );\n          } else {\n            singleColor = true; // TODO: Avoid redundant work during move.\n          }\n          if (singleColor) {\n            this.gradients[id].children[0].setAttribute(\n              \"stop-color\",\n              this.originalColors[fromCur],\n            );\n            this.gradients[id].children[1].setAttribute(\n              \"stop-color\",\n              this.originalColors[fromCur],\n            );\n            this.gradients[id].children[1].setAttribute(\"offset\", `100%`);\n            this.gradients[id].children[2].setAttribute(\"offset\", `100%`);\n            this.gradients[id].children[3].setAttribute(\"offset\", `100%`);\n            this.gradients[id].children[4].setAttribute(\"offset\", `100%`);\n          }\n          // this.gradients[id]\n          // this.elementByID(id).style.fill = this.originalColors[from];\n        }\n      }\n    }\n  }\n\n  private newGradient(id: string, originalColor: string): SVGGradientElement {\n    const grad = document.createElementNS(\n      xmlns,\n      \"radialGradient\",\n    ) as SVGGradientElement;\n    grad.setAttribute(\"id\", `grad-${this.svgID}-${id}`);\n    grad.setAttribute(\"r\", `70.7107%`); // TODO: Adapt to puzzle.\n    const stopDefs = [\n      { offset: 0, color: originalColor },\n      { offset: 0, color: originalColor },\n      { offset: 0, color: \"black\" },\n      { offset: 0, color: \"black\" },\n      { offset: 0, color: originalColor },\n      { offset: 100, color: originalColor },\n    ];\n    for (const stopDef of stopDefs) {\n      const stop = document.createElementNS(xmlns, \"stop\") as SVGStopElement;\n      stop.setAttribute(\"offset\", `${stopDef.offset}%`);\n      stop.setAttribute(\"stop-color\", stopDef.color);\n      stop.setAttribute(\"stop-opacity\", \"1\");\n      grad.appendChild(stop);\n    }\n    return grad;\n  }\n\n  private elementID(\n    orbitName: string,\n    idx: number,\n    orientation: number,\n  ): string {\n    return orbitName + \"-l\" + idx + \"-o\" + orientation;\n  }\n\n  private elementByID(id: string): HTMLElement {\n    // TODO: Use classes and scope selector to SVG element.\n    return this.element.querySelector(\"#\" + id) as HTMLElement;\n  }\n}\n","import \"regenerator-runtime/runtime\"; // Prevent `regeneratorRuntime is not defined` error. https://github.com/babel/babel/issues/5085\n\nexport {\n  KPuzzleDefinition,\n  OrbitTransformation,\n  Transformation,\n} from \"./definition_types\";\n\nexport { KPuzzle, stateForBlockMove } from \"./kpuzzle\";\n\nexport {\n  Canonicalize,\n  SearchSequence,\n  CanonicalSequenceIterator,\n} from \"./canonicalize\";\n\nexport {\n  Combine,\n  Multiply,\n  IdentityTransformation,\n  Invert,\n  EquivalentTransformations,\n  EquivalentStates,\n  Order,\n} from \"./transformations\";\n\nexport { Puzzles } from \"./puzzle_definitions\";\n\nexport { parse } from \"./parser\";\n\nexport { SVG } from \"./svg\";\n","export function identityPermutation(numElems: number): number[] {\n  const arr = new Array(numElems);\n  for (let i = 0; i < numElems; i++) {\n    arr[i] = i;\n  }\n  return arr;\n}\n\n// Inclusive start, exclusive end (similar to `Array.prototype.slice`)\nexport function orientationsToMask(\n  radix: number,\n  orientations: number[],\n): number {\n  let val = 0;\n  for (const orientation of orientations) {\n    val *= radix;\n    val += orientation;\n  }\n  return val;\n}\n\n// Inclusive start, exclusive end (similar to `Array.prototype.slice`)\nexport function maskToOrientations(\n  radix: number,\n  numElems: number,\n  mask: number,\n): number[] {\n  const arr = [];\n  while (mask > 0) {\n    arr.push(mask % radix);\n    mask = Math.floor(mask / radix);\n  }\n  return new Array(numElems - arr.length).fill(0).concat(arr.reverse());\n}\n\n// From https://www.jaapsch.net/puzzles/compindx.htm#perm\nexport function permutationToLex(permutation: number[]): number {\n  const n = permutation.length;\n  let lexicographicIdx = 0;\n  for (let i = 0; i < n - 1; i++) {\n    lexicographicIdx = lexicographicIdx * (n - i);\n    for (let j = i + 1; j < n; j++) {\n      if (permutation[i] > permutation[j]) {\n        lexicographicIdx += 1;\n      }\n    }\n  }\n  return lexicographicIdx;\n}\n\n// From https://www.jaapsch.net/puzzles/compindx.htm#perm\nexport function lexToPermutation(\n  numPieces: number,\n  lexicographicIdx: number,\n): number[] {\n  const permutation: number[] = new Array(numPieces);\n  permutation[numPieces - 1] = 0;\n  for (let i = numPieces - 2; i >= 0; i--) {\n    permutation[i] = lexicographicIdx % (numPieces - i);\n    lexicographicIdx = Math.floor(lexicographicIdx / (numPieces - i));\n    for (let j = i + 1; j < numPieces; j++) {\n      if (permutation[j] >= permutation[i]) {\n        permutation[j] = permutation[j] + 1;\n      }\n    }\n  }\n  return permutation;\n}\n","import { parse, Sequence } from \"../../alg\";\nimport {\n  Combine,\n  Invert,\n  KPuzzle,\n  Puzzles,\n  Transformation,\n} from \"../../kpuzzle\";\nimport {\n  identityPermutation,\n  lexToPermutation,\n  maskToOrientations,\n  orientationsToMask,\n  permutationToLex,\n} from \"./orbit-indexing\";\n\ntype Binary3x3x3State = ArrayBuffer;\n\n// Bit lengths of the encoded components, in order.\nconst BIT_LENGTHS = [16, 13, 3, 29, 2, 1, 12, 12];\n\n// These fields are sorted by the order in which they appear in the binary format.\nexport interface Binary3x3x3Components {\n  cpLex: number; // 16 bits, corner permutation\n  coMask: number; // 13 bits, corner orientation\n  poIdxU: number; // 3 bits, puzzle orientation (U face)\n  epLex: number; // 29 bits, edge permutation\n  poIdxL: number; // 2 bits, puzzle orientation (L face)\n  moSupport: number; // 1 bit, center orientation support\n  eoMask: number; // 12 bits, edge orientation\n  moMask: number; // 12 bits, center orientation\n}\n\n// There are various clever ways to do this, but this is simple and efficient.\nfunction arraySum(arr: number[]): number {\n  let total = 0;\n  for (const entry of arr) {\n    total += entry;\n  }\n  return total;\n}\n\n// Due to limitations in JS bit operations, this is unsafe if any of the bit lengths span across the contents of more than 4 bytes.\n// - Safe: [8, 32]\n// - Unsafe: [4, 32, 4]\n// - Unsafe: [40, 4]\nfunction splitBinary(bitLengths: number[], buffy: ArrayBuffer): number[] {\n  const u8buffy = new Uint8Array(buffy);\n  let at = 0;\n  let bits = 0;\n  let accum = 0;\n  const values: number[] = [];\n  for (const bitLength of bitLengths) {\n    while (bits < bitLength) {\n      accum = (accum << 8) | u8buffy[at++];\n      bits += 8;\n    }\n    values.push((accum >> (bits - bitLength)) & ((1 << bitLength) - 1));\n    bits -= bitLength;\n  }\n  return values;\n}\n\n// See above for safety notes.\nfunction concatBinary(bitLengths: number[], values: number[]): ArrayBuffer {\n  const buffy = new Uint8Array(Math.ceil(arraySum(bitLengths) / 8));\n  let at = 0;\n  let bits = 0;\n  let accum = 0;\n  for (let i = 0; i < bitLengths.length; i++) {\n    accum = (accum << bitLengths[i]) | values[i];\n    bits += bitLengths[i];\n    while (bits >= 8) {\n      buffy[at++] = accum >> (bits - 8);\n      bits -= 8;\n    }\n  }\n  if (bits > 0) {\n    buffy[at++] = accum << (8 - bits);\n  }\n  return buffy;\n}\n\nfunction puzzleOrientationIdx(state: Transformation): [number, number] {\n  const idxU = state[\"CENTER\"].permutation[0];\n  const idxD = state[\"CENTER\"].permutation[5];\n  const unadjustedIdxL = state[\"CENTER\"].permutation[1];\n  let idxL = unadjustedIdxL;\n  if (idxU < unadjustedIdxL) {\n    idxL--;\n  }\n  if (idxD < unadjustedIdxL) {\n    idxL--;\n  }\n  return [idxU, idxL];\n}\n\nconst puzzleOrientationCache: Transformation[][] = new Array(6)\n  .fill(0)\n  .map(() => {\n    return new Array(6);\n  });\n\n// We use a new block to avoid keeping a reference to temporary vars.\n{\n  const orientationKpuzzle = new KPuzzle(Puzzles[\"3x3x3\"]);\n  const uAlgs: Sequence[] = [\"\", \"z\", \"x\", \"z'\", \"x'\", \"x2\"].map((s) =>\n    parse(s),\n  );\n  const yAlg = parse(\"y\");\n  for (const uAlg of uAlgs) {\n    orientationKpuzzle.reset();\n    orientationKpuzzle.applyAlg(uAlg);\n    for (let i = 0; i < 4; i++) {\n      orientationKpuzzle.applyAlg(yAlg);\n      const [idxU, idxL] = puzzleOrientationIdx(orientationKpuzzle.state);\n      puzzleOrientationCache[idxU][idxL] = Invert(\n        Puzzles[\"3x3x3\"],\n        orientationKpuzzle.state,\n      );\n    }\n  }\n}\n\nfunction normalizePuzzleOrientation(s: Transformation): Transformation {\n  const [idxU, idxL] = puzzleOrientationIdx(s);\n  const orientationTransformation = puzzleOrientationCache[idxU][idxL];\n  return Combine(Puzzles[\"3x3x3\"], s, orientationTransformation);\n}\n\n// TODO: combine with `orientPuzzle`?\nfunction reorientPuzzle(\n  s: Transformation,\n  idxU: number,\n  idxL: number,\n): Transformation {\n  const orientationTransformation = Invert(\n    Puzzles[\"3x3x3\"],\n    puzzleOrientationCache[idxU][idxL],\n  );\n  return Combine(Puzzles[\"3x3x3\"], s, orientationTransformation);\n}\n// 0x111 (for idxU) means \"not supported\"\nfunction supportsPuzzleOrientation(components: Binary3x3x3Components): boolean {\n  return components.poIdxU !== 7;\n}\n\nexport function reid3x3x3ToBinaryComponents(\n  state: Transformation,\n): Binary3x3x3Components {\n  const normedState = normalizePuzzleOrientation(state);\n\n  const epLex = permutationToLex(normedState[\"EDGE\"].permutation);\n  const [poIdxU, poIdxL] = puzzleOrientationIdx(state);\n  const moSupport = 1; // Required for now.\n  const coMask = orientationsToMask(3, normedState[\"CORNER\"].orientation);\n  const cpLex = permutationToLex(normedState[\"CORNER\"].permutation);\n  const eoMask = orientationsToMask(2, normedState[\"EDGE\"].orientation);\n  const moMask = orientationsToMask(4, normedState[\"CENTER\"].orientation);\n\n  return {\n    cpLex,\n    coMask,\n    poIdxU,\n    epLex,\n    poIdxL,\n    moSupport,\n    eoMask,\n    moMask,\n  };\n}\n\nexport function binaryComponentsToTwizzleBinary(\n  components: Binary3x3x3Components,\n): Binary3x3x3State {\n  const {\n    cpLex,\n    coMask,\n    poIdxU,\n    epLex,\n    poIdxL,\n    moSupport,\n    eoMask,\n    moMask,\n  } = components;\n\n  return concatBinary(BIT_LENGTHS, [\n    cpLex,\n    coMask,\n    poIdxU,\n    epLex,\n    poIdxL,\n    moSupport,\n    eoMask,\n    moMask,\n  ]);\n}\n\nexport function reid3x3x3ToTwizzleBinary(\n  state: Transformation,\n): Binary3x3x3State {\n  const components: Binary3x3x3Components = reid3x3x3ToBinaryComponents(state);\n  return binaryComponentsToTwizzleBinary(components);\n}\n\nexport function twizzleBinaryToBinaryComponents(\n  buffer: ArrayBuffer,\n): Binary3x3x3Components {\n  const [\n    cpLex,\n    coMask,\n    poIdxU,\n    epLex,\n    poIdxL,\n    moSupport,\n    eoMask,\n    moMask,\n  ] = splitBinary(BIT_LENGTHS, buffer);\n\n  return {\n    cpLex,\n    coMask,\n    poIdxU,\n    epLex,\n    poIdxL,\n    moSupport,\n    eoMask,\n    moMask,\n  };\n}\n\nexport function binaryComponentsToReid3x3x3(\n  components: Binary3x3x3Components,\n): Transformation {\n  if (components.moSupport !== 1) {\n    throw new Error(\"Must support center orientation.\");\n  }\n\n  const normedState = {\n    EDGE: {\n      permutation: lexToPermutation(12, components.epLex),\n      orientation: maskToOrientations(2, 12, components.eoMask),\n    },\n    CORNER: {\n      permutation: lexToPermutation(8, components.cpLex),\n      orientation: maskToOrientations(3, 8, components.coMask),\n    },\n    CENTER: {\n      permutation: identityPermutation(6),\n      orientation: maskToOrientations(4, 6, components.moMask),\n    },\n  };\n\n  if (!supportsPuzzleOrientation(components)) {\n    return normedState;\n  }\n\n  return reorientPuzzle(normedState, components.poIdxU, components.poIdxL);\n}\n\n// Returns a list of error string.\n// An empty list means validation success.\nfunction validateComponents(components: Binary3x3x3Components): string[] {\n  const errors = [];\n  if (components.epLex < 0 || components.epLex >= 479001600) {\n    errors.push(`epLex (${components.epLex}) out of range`);\n  }\n  if (components.cpLex < 0 || components.cpLex >= 40320) {\n    errors.push(`cpLex (${components.cpLex}) out of range`);\n  }\n  if (components.coMask < 0 || components.coMask >= 6561) {\n    errors.push(`coMask (${components.coMask}) out of range`);\n  }\n  if (components.poIdxU < 0 || components.poIdxU >= 6) {\n    // 0x111 (for idxU) means \"not supported\"\n    if (supportsPuzzleOrientation(components)) {\n      errors.push(`poIdxU (${components.poIdxU}) out of range`);\n    }\n  }\n  // The following cannot be (f decoded from binary properl) out of rangey.\n  if (components.eoMask < 0 || components.eoMask >= 4096) {\n    errors.push(`eoMask (${components.eoMask}) out of range`);\n  }\n  if (components.moMask < 0 || components.moMask >= 4096) {\n    errors.push(`moMask (${components.moMask}) out of range`);\n  }\n  if (components.poIdxL < 0 || components.poIdxL >= 4) {\n    errors.push(`poIdxL (${components.poIdxL}) out of range`);\n  }\n  if (components.moSupport < 0 || components.moSupport >= 2) {\n    errors.push(`moSupport (${components.moSupport}) out of range`);\n  }\n  return errors;\n}\n\nexport function twizzleBinaryToReid3x3x3(buffy: ArrayBuffer): Transformation {\n  const components = twizzleBinaryToBinaryComponents(buffy);\n  const errors = validateComponents(components);\n  if (errors.length !== 0) {\n    throw new Error(`Invalid binary state components: ${errors.join(\", \")}`);\n  }\n  return binaryComponentsToReid3x3x3(components);\n}\n","import {\n  Transformation,\n  Puzzles,\n  OrbitTransformation,\n} from \"../../src/kpuzzle\";\n\nexport function kpuzzleToString(state: Transformation): string {\n  return JSON.stringify(state, null, \"  \")\n    .replace(/\\n +(\\d+),/g, \"$1, \")\n    .replace(/\\n +(\\d+)\\n +/g, \"$1\");\n}\n\nconst def = Puzzles[\"3x3x3\"];\n\nconst pieceNames: Record<string, string[]> = {\n  EDGE: \"UF UR UB UL DF DR DB DL FR FL BR BL\".split(\" \"),\n  CORNER: \"UFR URB UBL ULF DRF DFL DLB DBR\".split(\" \"),\n  CENTER: \"ULFRBD\".split(\"\"),\n};\n\ninterface PieceInfo {\n  piece: number;\n  orientation: number;\n}\n\nfunction rotateLeft(s: string, i: number): string {\n  return s.slice(i) + s.slice(0, i);\n}\n\nconst pieceMap: { [s: string]: PieceInfo } = {};\n// TODO: Condense the for loops.\n\nconst orbits = Object.keys(def.orbits);\nfor (const orbit of orbits) {\n  pieceNames[orbit].forEach((piece, idx) => {\n    const numOri = orbit === \"CENTER\" ? 1 : def.orbits[orbit].orientations;\n    for (let i = 0; i < numOri; i++) {\n      const name = rotateLeft(piece, i);\n      pieceMap[name] = { piece: idx, orientation: i };\n      if (numOri === 3) {\n        const altName = name[0] + name[2] + name[1];\n        pieceMap[altName] = { piece: idx, orientation: i };\n      }\n    }\n  });\n}\n\nexport function kpuzzleToReidString(state: Transformation): string {\n  const pieces: string[] = [];\n\n  const addOrbit = (orbitName: string): void => {\n    for (let i = 0; i < state[orbitName].permutation.length; i++) {\n      pieces.push(\n        rotateLeft(\n          pieceNames[orbitName][state[orbitName].permutation[i]],\n          state[orbitName].orientation[i],\n        ),\n      );\n    }\n  };\n\n  for (const orbit of orbits) {\n    addOrbit(orbit);\n  }\n\n  return pieces.join(\" \");\n}\n\nconst reidStringStickerIdx = Array.prototype.concat.apply(Array.prototype, [\n  [44, 6, 40, 9, 68, 3, 48, 0, 36], // end of U\n  [46, 10, 49, 34, 70, 28, 61, 22, 58], // end of L\n  [50, 1, 37, 27, 72, 24, 57, 13, 54], // end of F\n  [38, 4, 41, 25, 74, 31, 53, 16, 66], // end of R\n  [42, 7, 45, 30, 76, 33, 65, 19, 62], // end of B\n  [56, 12, 52, 21, 78, 15, 60, 18, 64], // end of D\n]);\n\nexport function reidStringToStickers(s: string): number[] {\n  const arr: number[] = [];\n  for (let i = 0; i < reidStringStickerIdx.length; i++) {\n    const stickerColorFaceName = s[reidStringStickerIdx[i]];\n    const stickerColorIdx = pieceNames[\"CENTER\"].indexOf(stickerColorFaceName);\n    arr.push(stickerColorIdx);\n  }\n  return arr;\n}\n\nexport function stickersToReidString(stickers: number[]): string {\n  const reidStringChars = new Array(79).fill(\" \");\n\n  for (let i = 0; i < reidStringStickerIdx.length; i++) {\n    const stickerColorIdx = stickers[i];\n    reidStringChars[reidStringStickerIdx[i]] =\n      pieceNames[\"CENTER\"][stickerColorIdx];\n  }\n  return reidStringChars.join(\"\");\n}\n\nexport function kpuzzleToStickers(state: Transformation): number[] {\n  return reidStringToStickers(kpuzzleToReidString(state));\n}\n\nexport function stickersToKPuzzle(stickers: number[]): Transformation {\n  return reidStringToKPuzzle(stickersToReidString(stickers));\n}\n\nexport function reidStringToKPuzzle(s: string): Transformation {\n  const pieces = s.split(\" \");\n\n  const orbit = (pieces: string[]): OrbitTransformation => {\n    const orbitTransformation: OrbitTransformation = {\n      permutation: [],\n      orientation: [],\n    };\n    for (const piece of pieces) {\n      orbitTransformation.permutation.push(pieceMap[piece].piece);\n      orbitTransformation.orientation.push(pieceMap[piece].orientation);\n    }\n    return orbitTransformation;\n  };\n\n  const x = {\n    EDGE: orbit(pieces.slice(0, 12)),\n    CORNER: orbit(pieces.slice(12, 20)),\n    CENTER: orbit(pieces.slice(20, 26)),\n  };\n  return x;\n}\n","import { parse } from \"../../src/alg\";\nimport { KPuzzle, Puzzles, SVG, Transformation } from \"../../src/kpuzzle\";\nimport {\n  binaryComponentsToReid3x3x3,\n  reid3x3x3ToBinaryComponents,\n  reid3x3x3ToTwizzleBinary,\n  twizzleBinaryToReid3x3x3,\n} from \"../../src/protocol/binary/binary3x3x3\";\nimport {\n  kpuzzleToReidString,\n  kpuzzleToStickers,\n  kpuzzleToString,\n  reidStringToKPuzzle,\n  stickersToKPuzzle,\n} from \"./convert\";\n\nexport function bufferToSpacedHex(buffer: ArrayBuffer): string {\n  // buffer is an ArrayBuffer\n  return Array.prototype.map\n    .call(new Uint8Array(buffer), (x: number) =>\n      (\"00\" + x.toString(16)).slice(-2),\n    )\n    .join(\" \");\n}\n\nexport function spacedHexToBuffer(hex: string): Uint8Array {\n  return new Uint8Array(hex.split(\" \").map((c) => parseInt(c, 16)));\n}\n\nconst def = Puzzles[\"3x3x3\"];\n\nclass App {\n  kpuzzle = new KPuzzle(def);\n  svg = new SVG(def);\n  algTextarea = document.querySelector(\"#alg\")! as HTMLTextAreaElement;\n  kpuzzleTextarea = document.querySelector(\"#kpuzzle\")! as HTMLTextAreaElement;\n  reidStringTextarea = document.querySelector(\n    \"#reid-string\",\n  )! as HTMLTextAreaElement;\n\n  stickersTextarea = document.querySelector(\n    \"#stickers\",\n  )! as HTMLTextAreaElement;\n\n  componentsTextarea = document.querySelector(\n    \"#components\",\n  )! as HTMLTextAreaElement;\n\n  binaryTextarea = document.querySelector(\"#binary\")! as HTMLTextAreaElement;\n  constructor() {\n    document.querySelector(\"#viewer\")!.appendChild(this.svg.element);\n\n    document.querySelector(\"#reset\")!.addEventListener(\"click\", () => {\n      this.reset();\n    });\n    document.querySelector(\"#apply-alg\")!.addEventListener(\"click\", () => {\n      this.applyAlg(this.algTextarea.value);\n    });\n    document\n      .querySelector(\"#set-reid-string\")\n      ?.addEventListener(\"click\", () => {\n        this.setReidString(this.reidStringTextarea.value);\n      });\n    document.querySelector(\"#set-stickers\")!.addEventListener(\"click\", () => {\n      this.setStickers(this.stickersTextarea.value);\n    });\n    document.querySelector(\"#set-components\")!.addEventListener(\"click\", () => {\n      this.setComponents(this.componentsTextarea.value);\n    });\n    document.querySelector(\"#set-kpuzzle\")!.addEventListener(\"click\", () => {\n      this.setKPuzzle(this.kpuzzleTextarea.value);\n    });\n    document.querySelector(\"#set-binary\")!.addEventListener(\"click\", () => {\n      this.setBinary(this.binaryTextarea.value);\n    });\n\n    this.setState(this.kpuzzle.state);\n\n    // const scene = new Twisty3DScene();\n    // const cube3D = new Cube3D();\n    // scene.add(cube3D);\n    // const canvas = new Twisty3DCanvas(scene);\n    // document.body.appendChild(canvas);\n  }\n\n  reset(): void {\n    this.kpuzzle.reset();\n    this.setState(this.kpuzzle.state);\n  }\n\n  applyAlg(s: string): void {\n    this.kpuzzle.applyAlg(parse(s));\n    this.setState(this.kpuzzle.state);\n  }\n\n  setKPuzzle(s: string): void {\n    this.setState(JSON.parse(s));\n  }\n\n  setReidString(s: string): void {\n    this.setState(reidStringToKPuzzle(s));\n  }\n\n  setStickers(s: string): void {\n    this.setState(stickersToKPuzzle(JSON.parse(s)));\n  }\n\n  setComponents(s: string): void {\n    this.setState(binaryComponentsToReid3x3x3(JSON.parse(s)));\n  }\n\n  setBinary(s: string): void {\n    this.setState(twizzleBinaryToReid3x3x3(spacedHexToBuffer(s)));\n  }\n\n  setState(state: Transformation): void {\n    this.kpuzzle.state = state;\n    this.svg.draw(def, state);\n    this.kpuzzleTextarea.value = kpuzzleToString(state);\n    this.reidStringTextarea.value = kpuzzleToReidString(state);\n    this.stickersTextarea.value = JSON.stringify(kpuzzleToStickers(state));\n    this.componentsTextarea.value = JSON.stringify(\n      reid3x3x3ToBinaryComponents(state),\n      null,\n      \"  \",\n    );\n    this.binaryTextarea.value = bufferToSpacedHex(\n      reid3x3x3ToTwizzleBinary(state),\n    );\n  }\n}\n\nconst app = new App();\n(window as any).app = app;\n"]}